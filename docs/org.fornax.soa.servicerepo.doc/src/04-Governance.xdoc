chapter:SOAGobernance[SOA governance]

section:GovIntro[Introduction]

section2:GovIntroPurpose[Purpose]

SOA governance defines the basic rules to follow in building up a service oriented architecture by defining
processes design rules and by granting authority to execute governance task to certain roles. The service repository
is one of the main tools to communicate the architecture and design of a SOA landscape as well as executing change 
management, control an service portfolio planning.

Many assets in the repository define a version, lifecycle state and governance approval state. Who can change these
properties is defined by the SOA governance processes and rules.


section:GovConcepts[Concepts]


section2:AssetVersioning[Asset versioning]

section3:settingAssetVersion[Setting the version of an asset]

Each versioned asset has a <code>version</code> property.

section3:whenCreateVersion[When to create a new version]

A new version has a least to be created, when an asset is to be changed but the most recent version has already
been approved by SOA governance. Create a new minor version when the changes are backward compatible. However, 
if the changes are incompatible, a new major version must be created.

section3:versionedAssetRelationships[Versioned relationships between assets]

Relationships between versioned assets are version as well. This is expressed by defined a version constraint rule on
the relationship like this:

code[SOABaseDSL][someAttribute : SomeOtherType majorVersion 2]

The example declares that the BO attribute <code>someAttribute</code> references an instance of 
the latest minor version in mojor version <code>2</code> available for <code>VersionedType</code> <code>SomeOtherType</code>.</para>


section2:lifecycleManagement[Asset lifecycle management]


section2:assetGovApproval[Asset approvals]


