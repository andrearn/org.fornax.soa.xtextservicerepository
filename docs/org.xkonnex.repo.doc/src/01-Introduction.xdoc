chapter:Introduction[Introduction]

A service oriented architecture is build from functionality captured in services. Hence, 
what services exist in SOA is the most interesting question for a analyst, software architect or developer.
Service repositories are the most important tool to answer questions like: 

ul[
	item[What services are available?]
	item[What is the contract of a service?]
	item[In what state is the service? Can I use it for production?]
	item[What dependencies does it have?]
	item[...]
]

Usually a service repository will import WSDLs, XSDs and other documents to describe the available 
services. However, WSDL is a rather technical webservice related description of a service. It does 
not define the complete formal service contract independent of the technology being used. E.g. the 
version of a service and itâ€™s dependencies are not defined or considered meaningful to a certain 
technology stack.

Another issue is, that often SOA Governance will define additional rules that apply to service contract. 
The Governance board has to review every service contract, whether it meets the compliance rules, it has 
defined. This is going to reduce the agility in service development.

XKonneX Repository addresses these issues in two ways:
ol[
	item[Use DSLs to describe formal service contracts with all required details]
	item[Use model validators to verify formal constraints without the need to involve the SOA governance board]
	item[Use code generation to apply technical rules implicitly, e.g. all webservices use 
	document/literal-wrapped SOAP style and schema centralization]
]
