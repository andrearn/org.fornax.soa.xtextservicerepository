/*
* generated by Xtext
*/
package org.fornax.soa.sladsl.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;
import org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor;

import org.fornax.soa.sladsl.services.SLADslGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class SLADslParsetreeConstructor extends AbstractParseTreeConstructor {
		
	@Inject
	private SLADslGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SlaModel_AgreementsAssignment(this, this, 0, inst);
			case 1: return new SLA_Group(this, this, 1, inst);
			case 2: return new Cost_Group(this, this, 2, inst);
			case 3: return new ServiceQualityProperty_Alternatives(this, this, 3, inst);
			case 4: return new Availability_Group(this, this, 4, inst);
			case 5: return new Throughput_Group(this, this, 5, inst);
			case 6: return new Latency_Group(this, this, 6, inst);
			case 7: return new MaxDownTime_Group(this, this, 7, inst);
			case 8: return new CapacityRequirement_Group(this, this, 8, inst);
			case 9: return new ReliablityRequirement_Group(this, this, 9, inst);
			case 10: return new AccuracyRequirement_Group(this, this, 10, inst);
			case 11: return new LogRequirement_Group(this, this, 11, inst);
			case 12: return new Percentile_Group(this, this, 12, inst);
			case 13: return new SecurityRequirement_Alternatives(this, this, 13, inst);
			case 14: return new AuthenticationRequirement_Group(this, this, 14, inst);
			case 15: return new AuthToken_Group(this, this, 15, inst);
			case 16: return new HashAlgorithm_Group(this, this, 16, inst);
			case 17: return new SigningRequirement_Group(this, this, 17, inst);
			case 18: return new MessagePartRef_Group(this, this, 18, inst);
			case 19: return new EncryptionRequirement_Group(this, this, 19, inst);
			case 20: return new PriorityDeclaration_Group(this, this, 20, inst);
			case 21: return new Escalation_Group(this, this, 21, inst);
			case 22: return new Party_Alternatives(this, this, 22, inst);
			case 23: return new CustomerParty_Group(this, this, 23, inst);
			case 24: return new ProviderParty_Group(this, this, 24, inst);
			case 25: return new ThirdParty_Group(this, this, 25, inst);
			case 26: return new Representative_Alternatives(this, this, 26, inst);
			case 27: return new UserRef_RepresentativeAssignment(this, this, 27, inst);
			case 28: return new InlineRepresentative_Group(this, this, 28, inst);
			case 29: return new Responsibility_Group(this, this, 29, inst);
			case 30: return new Report_Group(this, this, 30, inst);
			case 31: return new Import_Group(this, this, 31, inst);
			case 32: return new VersionedName_Alternatives(this, this, 32, inst);
			case 33: return new Version_Group(this, this, 33, inst);
			case 34: return new VersionRef_Alternatives(this, this, 34, inst);
			case 35: return new MinVersionRef_Group(this, this, 35, inst);
			case 36: return new MaxVersionRef_Group(this, this, 36, inst);
			case 37: return new LowerBoundRangeVersionRef_Group(this, this, 37, inst);
			case 38: return new MajorVersionRef_Group(this, this, 38, inst);
			case 39: return new FixedVersionRef_Group(this, this, 39, inst);
			case 40: return new GovernanceDecision_Group(this, this, 40, inst);
			case 41: return new AbstractType_Group(this, this, 41, inst);
			case 42: return new AdditionalInformation_Group(this, this, 42, inst);
			case 43: return new InfoItem_Group(this, this, 43, inst);
			case 44: return new User_Group(this, this, 44, inst);
			case 45: return new RoleRef_RoleAssignment(this, this, 45, inst);
			case 46: return new Role_Group(this, this, 46, inst);
			case 47: return new PrivilegeRef_PrivilegeAssignment(this, this, 47, inst);
			case 48: return new Privilege_Group(this, this, 48, inst);
			case 49: return new AssetRef_Group(this, this, 49, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule SlaModel ****************
 *
 * SlaModel:
 * 
 * 	agreements+=SLA*;
 *
 **/

// agreements+=SLA*
protected class SlaModel_AgreementsAssignment extends AssignmentToken  {
	
	public SlaModel_AgreementsAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSlaModelAccess().getAgreementsAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("agreements",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("agreements");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSLARule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSlaModelAccess().getAgreementsSLAParserRuleCall_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SlaModel_AgreementsAssignment(lastRuleCallOrigin, next, actIndex, consumed);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index - 1, consumed);
		}	
	}	
}

/************ end Rule SlaModel ****************/


/************ begin Rule SLA ****************
 *
 * SLA:
 * 
 * 	"service-level-agreement" name=QualifiedName version=Version? "{" "effective-date" effectiveDate=STRING
 * 
 * 	("effective-until" effectiveUntil=STRING)? parties+=Party* ("scope" scope=STRING)? ("preample" preample=STRING)?
 * 
 * 	("description" description=STRING)? ("restrictions" restrictions=STRING)? priorities+=PriorityDeclaration*
 * 
 * 	("applies-to" "{" appliesTo+=AssetRef* "}")? costs=Cost? ("service-quality-requirements" "{"
 * 
 * 	serviceQualityProperties+=ServiceQualityProperty* "}") ("data-security-and-protection" "{" ("general-security-terms"
 * 
 * 	dataSecProtClause=STRING)? ("security-requirements" "{" securityRequirements+=SecurityRequirement* "}") "}")?
 * 
 * 	("additional-services" additionalServices=STRING)? escalationProcedure=Escalation? ("cancellation"
 * 
 * 	cancellation=STRING)? ("extraordinary-cancellation" extraordinaryCancellation=STRING)? reports+=Report*
 * 
 * 	("subscriptions" "{" subscriptions+=[basedsl::User|QualifiedName]* "}")? ("tags" tags+=[semanticsDsl::Tag]+)* "}";
 *
 **/

// "service-level-agreement" name=QualifiedName version=Version? "{" "effective-date" effectiveDate=STRING
// 
// ("effective-until" effectiveUntil=STRING)? parties+=Party* ("scope" scope=STRING)? ("preample" preample=STRING)?
// 
// ("description" description=STRING)? ("restrictions" restrictions=STRING)? priorities+=PriorityDeclaration*
// 
// ("applies-to" "{" appliesTo+=AssetRef* "}")? costs=Cost? ("service-quality-requirements" "{"
// 
// serviceQualityProperties+=ServiceQualityProperty* "}") ("data-security-and-protection" "{" ("general-security-terms"
// 
// dataSecProtClause=STRING)? ("security-requirements" "{" securityRequirements+=SecurityRequirement* "}") "}")?
// 
// ("additional-services" additionalServices=STRING)? escalationProcedure=Escalation? ("cancellation"
// 
// cancellation=STRING)? ("extraordinary-cancellation" extraordinaryCancellation=STRING)? reports+=Report*
// 
// ("subscriptions" "{" subscriptions+=[basedsl::User|QualifiedName]* "}")? ("tags" tags+=[semanticsDsl::Tag]+)* "}"
protected class SLA_Group extends GroupToken {
	
	public SLA_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSLAAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_RightCurlyBracketKeyword_24(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSLARule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "service-level-agreement"
protected class SLA_ServiceLevelAgreementKeyword_0 extends KeywordToken  {
	
	public SLA_ServiceLevelAgreementKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getServiceLevelAgreementKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=QualifiedName
protected class SLA_NameAssignment_1 extends AssignmentToken  {
	
	public SLA_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSLAAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_ServiceLevelAgreementKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSLAAccess().getNameQualifiedNameParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSLAAccess().getNameQualifiedNameParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// version=Version?
protected class SLA_VersionAssignment_2 extends AssignmentToken  {
	
	public SLA_VersionAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSLAAccess().getVersionAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Version_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("version",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("version");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVersionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSLAAccess().getVersionVersionParserRuleCall_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SLA_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "{"
protected class SLA_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public SLA_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_VersionAssignment_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SLA_NameAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "effective-date"
protected class SLA_EffectiveDateKeyword_4 extends KeywordToken  {
	
	public SLA_EffectiveDateKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getEffectiveDateKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// effectiveDate=STRING
protected class SLA_EffectiveDateAssignment_5 extends AssignmentToken  {
	
	public SLA_EffectiveDateAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSLAAccess().getEffectiveDateAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_EffectiveDateKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("effectiveDate",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("effectiveDate");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSLAAccess().getEffectiveDateSTRINGTerminalRuleCall_5_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSLAAccess().getEffectiveDateSTRINGTerminalRuleCall_5_0();
			return obj;
		}
		return null;
	}

}

// ("effective-until" effectiveUntil=STRING)?
protected class SLA_Group_6 extends GroupToken {
	
	public SLA_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSLAAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_EffectiveUntilAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "effective-until"
protected class SLA_EffectiveUntilKeyword_6_0 extends KeywordToken  {
	
	public SLA_EffectiveUntilKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getEffectiveUntilKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_EffectiveDateAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// effectiveUntil=STRING
protected class SLA_EffectiveUntilAssignment_6_1 extends AssignmentToken  {
	
	public SLA_EffectiveUntilAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSLAAccess().getEffectiveUntilAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_EffectiveUntilKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("effectiveUntil",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("effectiveUntil");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSLAAccess().getEffectiveUntilSTRINGTerminalRuleCall_6_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSLAAccess().getEffectiveUntilSTRINGTerminalRuleCall_6_1_0();
			return obj;
		}
		return null;
	}

}


// parties+=Party*
protected class SLA_PartiesAssignment_7 extends AssignmentToken  {
	
	public SLA_PartiesAssignment_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSLAAccess().getPartiesAssignment_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Party_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parties",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parties");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPartyRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSLAAccess().getPartiesPartyParserRuleCall_7_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SLA_PartiesAssignment_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SLA_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new SLA_EffectiveDateAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("scope" scope=STRING)?
protected class SLA_Group_8 extends GroupToken {
	
	public SLA_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSLAAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_ScopeAssignment_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "scope"
protected class SLA_ScopeKeyword_8_0 extends KeywordToken  {
	
	public SLA_ScopeKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getScopeKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_PartiesAssignment_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SLA_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SLA_EffectiveDateAssignment_5(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// scope=STRING
protected class SLA_ScopeAssignment_8_1 extends AssignmentToken  {
	
	public SLA_ScopeAssignment_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSLAAccess().getScopeAssignment_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_ScopeKeyword_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("scope",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("scope");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSLAAccess().getScopeSTRINGTerminalRuleCall_8_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSLAAccess().getScopeSTRINGTerminalRuleCall_8_1_0();
			return obj;
		}
		return null;
	}

}


// ("preample" preample=STRING)?
protected class SLA_Group_9 extends GroupToken {
	
	public SLA_Group_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSLAAccess().getGroup_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_PreampleAssignment_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "preample"
protected class SLA_PreampleKeyword_9_0 extends KeywordToken  {
	
	public SLA_PreampleKeyword_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getPreampleKeyword_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SLA_PartiesAssignment_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SLA_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SLA_EffectiveDateAssignment_5(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// preample=STRING
protected class SLA_PreampleAssignment_9_1 extends AssignmentToken  {
	
	public SLA_PreampleAssignment_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSLAAccess().getPreampleAssignment_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_PreampleKeyword_9_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("preample",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("preample");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSLAAccess().getPreampleSTRINGTerminalRuleCall_9_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSLAAccess().getPreampleSTRINGTerminalRuleCall_9_1_0();
			return obj;
		}
		return null;
	}

}


// ("description" description=STRING)?
protected class SLA_Group_10 extends GroupToken {
	
	public SLA_Group_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSLAAccess().getGroup_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_DescriptionAssignment_10_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "description"
protected class SLA_DescriptionKeyword_10_0 extends KeywordToken  {
	
	public SLA_DescriptionKeyword_10_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getDescriptionKeyword_10_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_Group_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SLA_Group_8(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SLA_PartiesAssignment_7(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SLA_Group_6(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SLA_EffectiveDateAssignment_5(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// description=STRING
protected class SLA_DescriptionAssignment_10_1 extends AssignmentToken  {
	
	public SLA_DescriptionAssignment_10_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSLAAccess().getDescriptionAssignment_10_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_DescriptionKeyword_10_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("description",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("description");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSLAAccess().getDescriptionSTRINGTerminalRuleCall_10_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSLAAccess().getDescriptionSTRINGTerminalRuleCall_10_1_0();
			return obj;
		}
		return null;
	}

}


// ("restrictions" restrictions=STRING)?
protected class SLA_Group_11 extends GroupToken {
	
	public SLA_Group_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSLAAccess().getGroup_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_RestrictionsAssignment_11_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "restrictions"
protected class SLA_RestrictionsKeyword_11_0 extends KeywordToken  {
	
	public SLA_RestrictionsKeyword_11_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getRestrictionsKeyword_11_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_Group_10(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SLA_Group_9(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SLA_Group_8(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SLA_PartiesAssignment_7(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SLA_Group_6(lastRuleCallOrigin, this, 4, inst);
			case 5: return new SLA_EffectiveDateAssignment_5(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// restrictions=STRING
protected class SLA_RestrictionsAssignment_11_1 extends AssignmentToken  {
	
	public SLA_RestrictionsAssignment_11_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSLAAccess().getRestrictionsAssignment_11_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_RestrictionsKeyword_11_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("restrictions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("restrictions");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSLAAccess().getRestrictionsSTRINGTerminalRuleCall_11_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSLAAccess().getRestrictionsSTRINGTerminalRuleCall_11_1_0();
			return obj;
		}
		return null;
	}

}


// priorities+=PriorityDeclaration*
protected class SLA_PrioritiesAssignment_12 extends AssignmentToken  {
	
	public SLA_PrioritiesAssignment_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSLAAccess().getPrioritiesAssignment_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PriorityDeclaration_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("priorities",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("priorities");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPriorityDeclarationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSLAAccess().getPrioritiesPriorityDeclarationParserRuleCall_12_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SLA_PrioritiesAssignment_12(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SLA_Group_11(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new SLA_Group_10(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new SLA_Group_9(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new SLA_Group_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new SLA_PartiesAssignment_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new SLA_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 7: return new SLA_EffectiveDateAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("applies-to" "{" appliesTo+=AssetRef* "}")?
protected class SLA_Group_13 extends GroupToken {
	
	public SLA_Group_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSLAAccess().getGroup_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_RightCurlyBracketKeyword_13_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "applies-to"
protected class SLA_AppliesToKeyword_13_0 extends KeywordToken  {
	
	public SLA_AppliesToKeyword_13_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getAppliesToKeyword_13_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_PrioritiesAssignment_12(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SLA_Group_11(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SLA_Group_10(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SLA_Group_9(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SLA_Group_8(lastRuleCallOrigin, this, 4, inst);
			case 5: return new SLA_PartiesAssignment_7(lastRuleCallOrigin, this, 5, inst);
			case 6: return new SLA_Group_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new SLA_EffectiveDateAssignment_5(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// "{"
protected class SLA_LeftCurlyBracketKeyword_13_1 extends KeywordToken  {
	
	public SLA_LeftCurlyBracketKeyword_13_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getLeftCurlyBracketKeyword_13_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_AppliesToKeyword_13_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// appliesTo+=AssetRef*
protected class SLA_AppliesToAssignment_13_2 extends AssignmentToken  {
	
	public SLA_AppliesToAssignment_13_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSLAAccess().getAppliesToAssignment_13_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AssetRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("appliesTo",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("appliesTo");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAssetRefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSLAAccess().getAppliesToAssetRefParserRuleCall_13_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SLA_AppliesToAssignment_13_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SLA_LeftCurlyBracketKeyword_13_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class SLA_RightCurlyBracketKeyword_13_3 extends KeywordToken  {
	
	public SLA_RightCurlyBracketKeyword_13_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getRightCurlyBracketKeyword_13_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_AppliesToAssignment_13_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// costs=Cost?
protected class SLA_CostsAssignment_14 extends AssignmentToken  {
	
	public SLA_CostsAssignment_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSLAAccess().getCostsAssignment_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Cost_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("costs",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("costs");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCostRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSLAAccess().getCostsCostParserRuleCall_14_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SLA_Group_13(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SLA_PrioritiesAssignment_12(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new SLA_Group_11(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new SLA_Group_10(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new SLA_Group_9(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new SLA_Group_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new SLA_PartiesAssignment_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 7: return new SLA_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 8: return new SLA_EffectiveDateAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "service-quality-requirements" "{" serviceQualityProperties+=ServiceQualityProperty* "}"
protected class SLA_Group_15 extends GroupToken {
	
	public SLA_Group_15(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSLAAccess().getGroup_15();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_RightCurlyBracketKeyword_15_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "service-quality-requirements"
protected class SLA_ServiceQualityRequirementsKeyword_15_0 extends KeywordToken  {
	
	public SLA_ServiceQualityRequirementsKeyword_15_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getServiceQualityRequirementsKeyword_15_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_CostsAssignment_14(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SLA_Group_13(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SLA_PrioritiesAssignment_12(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SLA_Group_11(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SLA_Group_10(lastRuleCallOrigin, this, 4, inst);
			case 5: return new SLA_Group_9(lastRuleCallOrigin, this, 5, inst);
			case 6: return new SLA_Group_8(lastRuleCallOrigin, this, 6, inst);
			case 7: return new SLA_PartiesAssignment_7(lastRuleCallOrigin, this, 7, inst);
			case 8: return new SLA_Group_6(lastRuleCallOrigin, this, 8, inst);
			case 9: return new SLA_EffectiveDateAssignment_5(lastRuleCallOrigin, this, 9, inst);
			default: return null;
		}	
	}

}

// "{"
protected class SLA_LeftCurlyBracketKeyword_15_1 extends KeywordToken  {
	
	public SLA_LeftCurlyBracketKeyword_15_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getLeftCurlyBracketKeyword_15_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_ServiceQualityRequirementsKeyword_15_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// serviceQualityProperties+=ServiceQualityProperty*
protected class SLA_ServiceQualityPropertiesAssignment_15_2 extends AssignmentToken  {
	
	public SLA_ServiceQualityPropertiesAssignment_15_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSLAAccess().getServiceQualityPropertiesAssignment_15_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ServiceQualityProperty_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("serviceQualityProperties",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("serviceQualityProperties");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getServiceQualityPropertyRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSLAAccess().getServiceQualityPropertiesServiceQualityPropertyParserRuleCall_15_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SLA_ServiceQualityPropertiesAssignment_15_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SLA_LeftCurlyBracketKeyword_15_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class SLA_RightCurlyBracketKeyword_15_3 extends KeywordToken  {
	
	public SLA_RightCurlyBracketKeyword_15_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getRightCurlyBracketKeyword_15_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_ServiceQualityPropertiesAssignment_15_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SLA_LeftCurlyBracketKeyword_15_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// ("data-security-and-protection" "{" ("general-security-terms" dataSecProtClause=STRING)? ("security-requirements" "{"
// 
// securityRequirements+=SecurityRequirement* "}") "}")?
protected class SLA_Group_16 extends GroupToken {
	
	public SLA_Group_16(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSLAAccess().getGroup_16();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_RightCurlyBracketKeyword_16_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "data-security-and-protection"
protected class SLA_DataSecurityAndProtectionKeyword_16_0 extends KeywordToken  {
	
	public SLA_DataSecurityAndProtectionKeyword_16_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getDataSecurityAndProtectionKeyword_16_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_Group_15(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class SLA_LeftCurlyBracketKeyword_16_1 extends KeywordToken  {
	
	public SLA_LeftCurlyBracketKeyword_16_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getLeftCurlyBracketKeyword_16_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_DataSecurityAndProtectionKeyword_16_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("general-security-terms" dataSecProtClause=STRING)?
protected class SLA_Group_16_2 extends GroupToken {
	
	public SLA_Group_16_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSLAAccess().getGroup_16_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_DataSecProtClauseAssignment_16_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "general-security-terms"
protected class SLA_GeneralSecurityTermsKeyword_16_2_0 extends KeywordToken  {
	
	public SLA_GeneralSecurityTermsKeyword_16_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getGeneralSecurityTermsKeyword_16_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_LeftCurlyBracketKeyword_16_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// dataSecProtClause=STRING
protected class SLA_DataSecProtClauseAssignment_16_2_1 extends AssignmentToken  {
	
	public SLA_DataSecProtClauseAssignment_16_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSLAAccess().getDataSecProtClauseAssignment_16_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_GeneralSecurityTermsKeyword_16_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("dataSecProtClause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("dataSecProtClause");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSLAAccess().getDataSecProtClauseSTRINGTerminalRuleCall_16_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSLAAccess().getDataSecProtClauseSTRINGTerminalRuleCall_16_2_1_0();
			return obj;
		}
		return null;
	}

}


// "security-requirements" "{" securityRequirements+=SecurityRequirement* "}"
protected class SLA_Group_16_3 extends GroupToken {
	
	public SLA_Group_16_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSLAAccess().getGroup_16_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_RightCurlyBracketKeyword_16_3_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "security-requirements"
protected class SLA_SecurityRequirementsKeyword_16_3_0 extends KeywordToken  {
	
	public SLA_SecurityRequirementsKeyword_16_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getSecurityRequirementsKeyword_16_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_Group_16_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SLA_LeftCurlyBracketKeyword_16_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "{"
protected class SLA_LeftCurlyBracketKeyword_16_3_1 extends KeywordToken  {
	
	public SLA_LeftCurlyBracketKeyword_16_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getLeftCurlyBracketKeyword_16_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_SecurityRequirementsKeyword_16_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// securityRequirements+=SecurityRequirement*
protected class SLA_SecurityRequirementsAssignment_16_3_2 extends AssignmentToken  {
	
	public SLA_SecurityRequirementsAssignment_16_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSLAAccess().getSecurityRequirementsAssignment_16_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SecurityRequirement_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("securityRequirements",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("securityRequirements");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSecurityRequirementRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSLAAccess().getSecurityRequirementsSecurityRequirementParserRuleCall_16_3_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SLA_SecurityRequirementsAssignment_16_3_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SLA_LeftCurlyBracketKeyword_16_3_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class SLA_RightCurlyBracketKeyword_16_3_3 extends KeywordToken  {
	
	public SLA_RightCurlyBracketKeyword_16_3_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getRightCurlyBracketKeyword_16_3_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_SecurityRequirementsAssignment_16_3_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SLA_LeftCurlyBracketKeyword_16_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// "}"
protected class SLA_RightCurlyBracketKeyword_16_4 extends KeywordToken  {
	
	public SLA_RightCurlyBracketKeyword_16_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getRightCurlyBracketKeyword_16_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_Group_16_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ("additional-services" additionalServices=STRING)?
protected class SLA_Group_17 extends GroupToken {
	
	public SLA_Group_17(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSLAAccess().getGroup_17();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_AdditionalServicesAssignment_17_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "additional-services"
protected class SLA_AdditionalServicesKeyword_17_0 extends KeywordToken  {
	
	public SLA_AdditionalServicesKeyword_17_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getAdditionalServicesKeyword_17_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_Group_16(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SLA_Group_15(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// additionalServices=STRING
protected class SLA_AdditionalServicesAssignment_17_1 extends AssignmentToken  {
	
	public SLA_AdditionalServicesAssignment_17_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSLAAccess().getAdditionalServicesAssignment_17_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_AdditionalServicesKeyword_17_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("additionalServices",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("additionalServices");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSLAAccess().getAdditionalServicesSTRINGTerminalRuleCall_17_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSLAAccess().getAdditionalServicesSTRINGTerminalRuleCall_17_1_0();
			return obj;
		}
		return null;
	}

}


// escalationProcedure=Escalation?
protected class SLA_EscalationProcedureAssignment_18 extends AssignmentToken  {
	
	public SLA_EscalationProcedureAssignment_18(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSLAAccess().getEscalationProcedureAssignment_18();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Escalation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("escalationProcedure",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("escalationProcedure");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEscalationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSLAAccess().getEscalationProcedureEscalationParserRuleCall_18_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SLA_Group_17(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SLA_Group_16(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new SLA_Group_15(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("cancellation" cancellation=STRING)?
protected class SLA_Group_19 extends GroupToken {
	
	public SLA_Group_19(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSLAAccess().getGroup_19();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_CancellationAssignment_19_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "cancellation"
protected class SLA_CancellationKeyword_19_0 extends KeywordToken  {
	
	public SLA_CancellationKeyword_19_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getCancellationKeyword_19_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_EscalationProcedureAssignment_18(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SLA_Group_17(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SLA_Group_16(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SLA_Group_15(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// cancellation=STRING
protected class SLA_CancellationAssignment_19_1 extends AssignmentToken  {
	
	public SLA_CancellationAssignment_19_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSLAAccess().getCancellationAssignment_19_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_CancellationKeyword_19_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("cancellation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("cancellation");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSLAAccess().getCancellationSTRINGTerminalRuleCall_19_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSLAAccess().getCancellationSTRINGTerminalRuleCall_19_1_0();
			return obj;
		}
		return null;
	}

}


// ("extraordinary-cancellation" extraordinaryCancellation=STRING)?
protected class SLA_Group_20 extends GroupToken {
	
	public SLA_Group_20(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSLAAccess().getGroup_20();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_ExtraordinaryCancellationAssignment_20_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "extraordinary-cancellation"
protected class SLA_ExtraordinaryCancellationKeyword_20_0 extends KeywordToken  {
	
	public SLA_ExtraordinaryCancellationKeyword_20_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getExtraordinaryCancellationKeyword_20_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_Group_19(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SLA_EscalationProcedureAssignment_18(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SLA_Group_17(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SLA_Group_16(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SLA_Group_15(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// extraordinaryCancellation=STRING
protected class SLA_ExtraordinaryCancellationAssignment_20_1 extends AssignmentToken  {
	
	public SLA_ExtraordinaryCancellationAssignment_20_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSLAAccess().getExtraordinaryCancellationAssignment_20_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_ExtraordinaryCancellationKeyword_20_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("extraordinaryCancellation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("extraordinaryCancellation");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSLAAccess().getExtraordinaryCancellationSTRINGTerminalRuleCall_20_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSLAAccess().getExtraordinaryCancellationSTRINGTerminalRuleCall_20_1_0();
			return obj;
		}
		return null;
	}

}


// reports+=Report*
protected class SLA_ReportsAssignment_21 extends AssignmentToken  {
	
	public SLA_ReportsAssignment_21(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSLAAccess().getReportsAssignment_21();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Report_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("reports",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("reports");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getReportRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSLAAccess().getReportsReportParserRuleCall_21_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SLA_ReportsAssignment_21(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new SLA_Group_20(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new SLA_Group_19(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new SLA_EscalationProcedureAssignment_18(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new SLA_Group_17(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new SLA_Group_16(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new SLA_Group_15(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("subscriptions" "{" subscriptions+=[basedsl::User|QualifiedName]* "}")?
protected class SLA_Group_22 extends GroupToken {
	
	public SLA_Group_22(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSLAAccess().getGroup_22();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_RightCurlyBracketKeyword_22_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "subscriptions"
protected class SLA_SubscriptionsKeyword_22_0 extends KeywordToken  {
	
	public SLA_SubscriptionsKeyword_22_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getSubscriptionsKeyword_22_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_ReportsAssignment_21(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SLA_Group_20(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SLA_Group_19(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SLA_EscalationProcedureAssignment_18(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SLA_Group_17(lastRuleCallOrigin, this, 4, inst);
			case 5: return new SLA_Group_16(lastRuleCallOrigin, this, 5, inst);
			case 6: return new SLA_Group_15(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// "{"
protected class SLA_LeftCurlyBracketKeyword_22_1 extends KeywordToken  {
	
	public SLA_LeftCurlyBracketKeyword_22_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getLeftCurlyBracketKeyword_22_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_SubscriptionsKeyword_22_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// subscriptions+=[basedsl::User|QualifiedName]*
protected class SLA_SubscriptionsAssignment_22_2 extends AssignmentToken  {
	
	public SLA_SubscriptionsAssignment_22_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSLAAccess().getSubscriptionsAssignment_22_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_SubscriptionsAssignment_22_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SLA_LeftCurlyBracketKeyword_22_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("subscriptions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("subscriptions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSLAAccess().getSubscriptionsUserCrossReference_22_2_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSLAAccess().getSubscriptionsUserCrossReference_22_2_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "}"
protected class SLA_RightCurlyBracketKeyword_22_3 extends KeywordToken  {
	
	public SLA_RightCurlyBracketKeyword_22_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getRightCurlyBracketKeyword_22_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_SubscriptionsAssignment_22_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ("tags" tags+=[semanticsDsl::Tag]+)*
protected class SLA_Group_23 extends GroupToken {
	
	public SLA_Group_23(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSLAAccess().getGroup_23();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_TagsAssignment_23_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "tags"
protected class SLA_TagsKeyword_23_0 extends KeywordToken  {
	
	public SLA_TagsKeyword_23_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getTagsKeyword_23_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_Group_22(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SLA_ReportsAssignment_21(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SLA_Group_20(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SLA_Group_19(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SLA_EscalationProcedureAssignment_18(lastRuleCallOrigin, this, 4, inst);
			case 5: return new SLA_Group_17(lastRuleCallOrigin, this, 5, inst);
			case 6: return new SLA_Group_16(lastRuleCallOrigin, this, 6, inst);
			case 7: return new SLA_Group_15(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// tags+=[semanticsDsl::Tag]+
protected class SLA_TagsAssignment_23_1 extends AssignmentToken  {
	
	public SLA_TagsAssignment_23_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSLAAccess().getTagsAssignment_23_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_TagsAssignment_23_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SLA_TagsKeyword_23_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("tags",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("tags");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSLAAccess().getTagsTagCrossReference_23_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getSLAAccess().getTagsTagCrossReference_23_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// "}"
protected class SLA_RightCurlyBracketKeyword_24 extends KeywordToken  {
	
	public SLA_RightCurlyBracketKeyword_24(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSLAAccess().getRightCurlyBracketKeyword_24();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SLA_Group_23(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SLA_Group_22(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SLA_ReportsAssignment_21(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SLA_Group_20(lastRuleCallOrigin, this, 3, inst);
			case 4: return new SLA_Group_19(lastRuleCallOrigin, this, 4, inst);
			case 5: return new SLA_EscalationProcedureAssignment_18(lastRuleCallOrigin, this, 5, inst);
			case 6: return new SLA_Group_17(lastRuleCallOrigin, this, 6, inst);
			case 7: return new SLA_Group_16(lastRuleCallOrigin, this, 7, inst);
			case 8: return new SLA_Group_15(lastRuleCallOrigin, this, 8, inst);
			default: return null;
		}	
	}

}


/************ end Rule SLA ****************/


/************ begin Rule Cost ****************
 *
 * Cost:
 * 
 * 	"costs" "{" "amount" costsAmount=STRING "billed-per-unit" billedUnit=STRING ("effort-accounting"
 * 
 * 	effortAccounting=STRING)? escalation=Escalation? ("penalty" penalty=STRING)? "}";
 *
 **/

// "costs" "{" "amount" costsAmount=STRING "billed-per-unit" billedUnit=STRING ("effort-accounting"
// 
// effortAccounting=STRING)? escalation=Escalation? ("penalty" penalty=STRING)? "}"
protected class Cost_Group extends GroupToken {
	
	public Cost_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCostAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Cost_RightCurlyBracketKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCostRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "costs"
protected class Cost_CostsKeyword_0 extends KeywordToken  {
	
	public Cost_CostsKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCostAccess().getCostsKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "{"
protected class Cost_LeftCurlyBracketKeyword_1 extends KeywordToken  {
	
	public Cost_LeftCurlyBracketKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCostAccess().getLeftCurlyBracketKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Cost_CostsKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "amount"
protected class Cost_AmountKeyword_2 extends KeywordToken  {
	
	public Cost_AmountKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCostAccess().getAmountKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Cost_LeftCurlyBracketKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// costsAmount=STRING
protected class Cost_CostsAmountAssignment_3 extends AssignmentToken  {
	
	public Cost_CostsAmountAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCostAccess().getCostsAmountAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Cost_AmountKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("costsAmount",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("costsAmount");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCostAccess().getCostsAmountSTRINGTerminalRuleCall_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getCostAccess().getCostsAmountSTRINGTerminalRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// "billed-per-unit"
protected class Cost_BilledPerUnitKeyword_4 extends KeywordToken  {
	
	public Cost_BilledPerUnitKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCostAccess().getBilledPerUnitKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Cost_CostsAmountAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// billedUnit=STRING
protected class Cost_BilledUnitAssignment_5 extends AssignmentToken  {
	
	public Cost_BilledUnitAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCostAccess().getBilledUnitAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Cost_BilledPerUnitKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("billedUnit",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("billedUnit");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCostAccess().getBilledUnitSTRINGTerminalRuleCall_5_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getCostAccess().getBilledUnitSTRINGTerminalRuleCall_5_0();
			return obj;
		}
		return null;
	}

}

// ("effort-accounting" effortAccounting=STRING)?
protected class Cost_Group_6 extends GroupToken {
	
	public Cost_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCostAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Cost_EffortAccountingAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "effort-accounting"
protected class Cost_EffortAccountingKeyword_6_0 extends KeywordToken  {
	
	public Cost_EffortAccountingKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCostAccess().getEffortAccountingKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Cost_BilledUnitAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// effortAccounting=STRING
protected class Cost_EffortAccountingAssignment_6_1 extends AssignmentToken  {
	
	public Cost_EffortAccountingAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCostAccess().getEffortAccountingAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Cost_EffortAccountingKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("effortAccounting",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("effortAccounting");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCostAccess().getEffortAccountingSTRINGTerminalRuleCall_6_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getCostAccess().getEffortAccountingSTRINGTerminalRuleCall_6_1_0();
			return obj;
		}
		return null;
	}

}


// escalation=Escalation?
protected class Cost_EscalationAssignment_7 extends AssignmentToken  {
	
	public Cost_EscalationAssignment_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCostAccess().getEscalationAssignment_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Escalation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("escalation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("escalation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEscalationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getCostAccess().getEscalationEscalationParserRuleCall_7_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Cost_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Cost_BilledUnitAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("penalty" penalty=STRING)?
protected class Cost_Group_8 extends GroupToken {
	
	public Cost_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCostAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Cost_PenaltyAssignment_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "penalty"
protected class Cost_PenaltyKeyword_8_0 extends KeywordToken  {
	
	public Cost_PenaltyKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCostAccess().getPenaltyKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Cost_EscalationAssignment_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Cost_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Cost_BilledUnitAssignment_5(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// penalty=STRING
protected class Cost_PenaltyAssignment_8_1 extends AssignmentToken  {
	
	public Cost_PenaltyAssignment_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCostAccess().getPenaltyAssignment_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Cost_PenaltyKeyword_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("penalty",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("penalty");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCostAccess().getPenaltySTRINGTerminalRuleCall_8_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getCostAccess().getPenaltySTRINGTerminalRuleCall_8_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class Cost_RightCurlyBracketKeyword_9 extends KeywordToken  {
	
	public Cost_RightCurlyBracketKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCostAccess().getRightCurlyBracketKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Cost_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Cost_EscalationAssignment_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Cost_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Cost_BilledUnitAssignment_5(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}


/************ end Rule Cost ****************/


/************ begin Rule ServiceQualityProperty ****************
 *
 * ServiceQualityProperty:
 * 
 * 	Availability | Throughput | Latency | MaxDownTime | CapacityRequirement | AccuracyRequirement | ReliablityRequirement
 * 
 * 	| LogRequirement;
 *
 **/

// Availability | Throughput | Latency | MaxDownTime | CapacityRequirement | AccuracyRequirement | ReliablityRequirement |
// 
// LogRequirement
protected class ServiceQualityProperty_Alternatives extends AlternativesToken {

	public ServiceQualityProperty_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getServiceQualityPropertyAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ServiceQualityProperty_AvailabilityParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ServiceQualityProperty_ThroughputParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ServiceQualityProperty_LatencyParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ServiceQualityProperty_MaxDownTimeParserRuleCall_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ServiceQualityProperty_CapacityRequirementParserRuleCall_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ServiceQualityProperty_AccuracyRequirementParserRuleCall_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new ServiceQualityProperty_ReliablityRequirementParserRuleCall_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new ServiceQualityProperty_LogRequirementParserRuleCall_7(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAccuracyRequirementRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getAvailabilityRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getCapacityRequirementAccess().getCapacityRequirementAction_2().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLatencyRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLogRequirementRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getMaxDownTimeRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getReliablityRequirementRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getThroughputRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// Availability
protected class ServiceQualityProperty_AvailabilityParserRuleCall_0 extends RuleCallToken {
	
	public ServiceQualityProperty_AvailabilityParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getServiceQualityPropertyAccess().getAvailabilityParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Availability_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAvailabilityRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Availability_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Throughput
protected class ServiceQualityProperty_ThroughputParserRuleCall_1 extends RuleCallToken {
	
	public ServiceQualityProperty_ThroughputParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getServiceQualityPropertyAccess().getThroughputParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Throughput_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getThroughputRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Throughput_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Latency
protected class ServiceQualityProperty_LatencyParserRuleCall_2 extends RuleCallToken {
	
	public ServiceQualityProperty_LatencyParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getServiceQualityPropertyAccess().getLatencyParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Latency_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLatencyRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Latency_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// MaxDownTime
protected class ServiceQualityProperty_MaxDownTimeParserRuleCall_3 extends RuleCallToken {
	
	public ServiceQualityProperty_MaxDownTimeParserRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getServiceQualityPropertyAccess().getMaxDownTimeParserRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MaxDownTime_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMaxDownTimeRule().getType().getClassifier())
			return null;
		if(checkForRecursion(MaxDownTime_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// CapacityRequirement
protected class ServiceQualityProperty_CapacityRequirementParserRuleCall_4 extends RuleCallToken {
	
	public ServiceQualityProperty_CapacityRequirementParserRuleCall_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getServiceQualityPropertyAccess().getCapacityRequirementParserRuleCall_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CapacityRequirement_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCapacityRequirementAccess().getCapacityRequirementAction_2().getType().getClassifier())
			return null;
		if(checkForRecursion(CapacityRequirement_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// AccuracyRequirement
protected class ServiceQualityProperty_AccuracyRequirementParserRuleCall_5 extends RuleCallToken {
	
	public ServiceQualityProperty_AccuracyRequirementParserRuleCall_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getServiceQualityPropertyAccess().getAccuracyRequirementParserRuleCall_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccuracyRequirement_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAccuracyRequirementRule().getType().getClassifier())
			return null;
		if(checkForRecursion(AccuracyRequirement_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ReliablityRequirement
protected class ServiceQualityProperty_ReliablityRequirementParserRuleCall_6 extends RuleCallToken {
	
	public ServiceQualityProperty_ReliablityRequirementParserRuleCall_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getServiceQualityPropertyAccess().getReliablityRequirementParserRuleCall_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReliablityRequirement_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getReliablityRequirementRule().getType().getClassifier())
			return null;
		if(checkForRecursion(ReliablityRequirement_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// LogRequirement
protected class ServiceQualityProperty_LogRequirementParserRuleCall_7 extends RuleCallToken {
	
	public ServiceQualityProperty_LogRequirementParserRuleCall_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getServiceQualityPropertyAccess().getLogRequirementParserRuleCall_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LogRequirement_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLogRequirementRule().getType().getClassifier())
			return null;
		if(checkForRecursion(LogRequirement_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule ServiceQualityProperty ****************/


/************ begin Rule Availability ****************
 *
 * Availability:
 * 
 * 	"availability" "{" "availability" availability=STRING ("mean-time-between-failure" mtbf=STRING)?
 * 
 * 	("mean-time-to-repair" mttr=STRING mttrPercentile=Percentile?)? ("regular-down-times" regularDownTimes=STRING)? "}";
 *
 **/

// "availability" "{" "availability" availability=STRING ("mean-time-between-failure" mtbf=STRING)? ("mean-time-to-repair"
// 
// mttr=STRING mttrPercentile=Percentile?)? ("regular-down-times" regularDownTimes=STRING)? "}"
protected class Availability_Group extends GroupToken {
	
	public Availability_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAvailabilityAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Availability_RightCurlyBracketKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAvailabilityRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "availability"
protected class Availability_AvailabilityKeyword_0 extends KeywordToken  {
	
	public Availability_AvailabilityKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAvailabilityAccess().getAvailabilityKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "{"
protected class Availability_LeftCurlyBracketKeyword_1 extends KeywordToken  {
	
	public Availability_LeftCurlyBracketKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAvailabilityAccess().getLeftCurlyBracketKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Availability_AvailabilityKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "availability"
protected class Availability_AvailabilityKeyword_2 extends KeywordToken  {
	
	public Availability_AvailabilityKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAvailabilityAccess().getAvailabilityKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Availability_LeftCurlyBracketKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// availability=STRING
protected class Availability_AvailabilityAssignment_3 extends AssignmentToken  {
	
	public Availability_AvailabilityAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAvailabilityAccess().getAvailabilityAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Availability_AvailabilityKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("availability",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("availability");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAvailabilityAccess().getAvailabilitySTRINGTerminalRuleCall_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAvailabilityAccess().getAvailabilitySTRINGTerminalRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// ("mean-time-between-failure" mtbf=STRING)?
protected class Availability_Group_4 extends GroupToken {
	
	public Availability_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAvailabilityAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Availability_MtbfAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "mean-time-between-failure"
protected class Availability_MeanTimeBetweenFailureKeyword_4_0 extends KeywordToken  {
	
	public Availability_MeanTimeBetweenFailureKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAvailabilityAccess().getMeanTimeBetweenFailureKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Availability_AvailabilityAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// mtbf=STRING
protected class Availability_MtbfAssignment_4_1 extends AssignmentToken  {
	
	public Availability_MtbfAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAvailabilityAccess().getMtbfAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Availability_MeanTimeBetweenFailureKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("mtbf",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("mtbf");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAvailabilityAccess().getMtbfSTRINGTerminalRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAvailabilityAccess().getMtbfSTRINGTerminalRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// ("mean-time-to-repair" mttr=STRING mttrPercentile=Percentile?)?
protected class Availability_Group_5 extends GroupToken {
	
	public Availability_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAvailabilityAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Availability_MttrPercentileAssignment_5_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Availability_MttrAssignment_5_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "mean-time-to-repair"
protected class Availability_MeanTimeToRepairKeyword_5_0 extends KeywordToken  {
	
	public Availability_MeanTimeToRepairKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAvailabilityAccess().getMeanTimeToRepairKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Availability_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Availability_AvailabilityAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// mttr=STRING
protected class Availability_MttrAssignment_5_1 extends AssignmentToken  {
	
	public Availability_MttrAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAvailabilityAccess().getMttrAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Availability_MeanTimeToRepairKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("mttr",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("mttr");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAvailabilityAccess().getMttrSTRINGTerminalRuleCall_5_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAvailabilityAccess().getMttrSTRINGTerminalRuleCall_5_1_0();
			return obj;
		}
		return null;
	}

}

// mttrPercentile=Percentile?
protected class Availability_MttrPercentileAssignment_5_2 extends AssignmentToken  {
	
	public Availability_MttrPercentileAssignment_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAvailabilityAccess().getMttrPercentileAssignment_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Percentile_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("mttrPercentile",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("mttrPercentile");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPercentileRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAvailabilityAccess().getMttrPercentilePercentileParserRuleCall_5_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Availability_MttrAssignment_5_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("regular-down-times" regularDownTimes=STRING)?
protected class Availability_Group_6 extends GroupToken {
	
	public Availability_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAvailabilityAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Availability_RegularDownTimesAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "regular-down-times"
protected class Availability_RegularDownTimesKeyword_6_0 extends KeywordToken  {
	
	public Availability_RegularDownTimesKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAvailabilityAccess().getRegularDownTimesKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Availability_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Availability_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Availability_AvailabilityAssignment_3(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// regularDownTimes=STRING
protected class Availability_RegularDownTimesAssignment_6_1 extends AssignmentToken  {
	
	public Availability_RegularDownTimesAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAvailabilityAccess().getRegularDownTimesAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Availability_RegularDownTimesKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("regularDownTimes",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("regularDownTimes");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAvailabilityAccess().getRegularDownTimesSTRINGTerminalRuleCall_6_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAvailabilityAccess().getRegularDownTimesSTRINGTerminalRuleCall_6_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class Availability_RightCurlyBracketKeyword_7 extends KeywordToken  {
	
	public Availability_RightCurlyBracketKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAvailabilityAccess().getRightCurlyBracketKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Availability_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Availability_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Availability_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Availability_AvailabilityAssignment_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}


/************ end Rule Availability ****************/


/************ begin Rule Throughput ****************
 *
 * Throughput:
 * 
 * 	"throughput" "{" "throughput" definition=STRING "score-to-be-kept" score=STRING escalation=Escalation? ("penalty"
 * 
 * 	penalty=STRING)? "}";
 *
 **/

// "throughput" "{" "throughput" definition=STRING "score-to-be-kept" score=STRING escalation=Escalation? ("penalty"
// 
// penalty=STRING)? "}"
protected class Throughput_Group extends GroupToken {
	
	public Throughput_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThroughputAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Throughput_RightCurlyBracketKeyword_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getThroughputRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "throughput"
protected class Throughput_ThroughputKeyword_0 extends KeywordToken  {
	
	public Throughput_ThroughputKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThroughputAccess().getThroughputKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "{"
protected class Throughput_LeftCurlyBracketKeyword_1 extends KeywordToken  {
	
	public Throughput_LeftCurlyBracketKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThroughputAccess().getLeftCurlyBracketKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Throughput_ThroughputKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "throughput"
protected class Throughput_ThroughputKeyword_2 extends KeywordToken  {
	
	public Throughput_ThroughputKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThroughputAccess().getThroughputKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Throughput_LeftCurlyBracketKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// definition=STRING
protected class Throughput_DefinitionAssignment_3 extends AssignmentToken  {
	
	public Throughput_DefinitionAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThroughputAccess().getDefinitionAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Throughput_ThroughputKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("definition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("definition");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getThroughputAccess().getDefinitionSTRINGTerminalRuleCall_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getThroughputAccess().getDefinitionSTRINGTerminalRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// "score-to-be-kept"
protected class Throughput_ScoreToBeKeptKeyword_4 extends KeywordToken  {
	
	public Throughput_ScoreToBeKeptKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThroughputAccess().getScoreToBeKeptKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Throughput_DefinitionAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// score=STRING
protected class Throughput_ScoreAssignment_5 extends AssignmentToken  {
	
	public Throughput_ScoreAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThroughputAccess().getScoreAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Throughput_ScoreToBeKeptKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("score",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("score");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getThroughputAccess().getScoreSTRINGTerminalRuleCall_5_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getThroughputAccess().getScoreSTRINGTerminalRuleCall_5_0();
			return obj;
		}
		return null;
	}

}

// escalation=Escalation?
protected class Throughput_EscalationAssignment_6 extends AssignmentToken  {
	
	public Throughput_EscalationAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThroughputAccess().getEscalationAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Escalation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("escalation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("escalation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEscalationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThroughputAccess().getEscalationEscalationParserRuleCall_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Throughput_ScoreAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("penalty" penalty=STRING)?
protected class Throughput_Group_7 extends GroupToken {
	
	public Throughput_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThroughputAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Throughput_PenaltyAssignment_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "penalty"
protected class Throughput_PenaltyKeyword_7_0 extends KeywordToken  {
	
	public Throughput_PenaltyKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThroughputAccess().getPenaltyKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Throughput_EscalationAssignment_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Throughput_ScoreAssignment_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// penalty=STRING
protected class Throughput_PenaltyAssignment_7_1 extends AssignmentToken  {
	
	public Throughput_PenaltyAssignment_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThroughputAccess().getPenaltyAssignment_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Throughput_PenaltyKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("penalty",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("penalty");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getThroughputAccess().getPenaltySTRINGTerminalRuleCall_7_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getThroughputAccess().getPenaltySTRINGTerminalRuleCall_7_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class Throughput_RightCurlyBracketKeyword_8 extends KeywordToken  {
	
	public Throughput_RightCurlyBracketKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThroughputAccess().getRightCurlyBracketKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Throughput_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Throughput_EscalationAssignment_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Throughput_ScoreAssignment_5(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule Throughput ****************/


/************ begin Rule Latency ****************
 *
 * Latency:
 * 
 * 	"latency" "{" "latency" latency="STRING" "percentile" percentile=Percentile escalation=Escalation? ("penalty"
 * 
 * 	penalty=STRING)? "}";
 *
 **/

// "latency" "{" "latency" latency="STRING" "percentile" percentile=Percentile escalation=Escalation? ("penalty"
// 
// penalty=STRING)? "}"
protected class Latency_Group extends GroupToken {
	
	public Latency_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLatencyAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Latency_RightCurlyBracketKeyword_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLatencyRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "latency"
protected class Latency_LatencyKeyword_0 extends KeywordToken  {
	
	public Latency_LatencyKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLatencyAccess().getLatencyKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "{"
protected class Latency_LeftCurlyBracketKeyword_1 extends KeywordToken  {
	
	public Latency_LeftCurlyBracketKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLatencyAccess().getLeftCurlyBracketKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Latency_LatencyKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "latency"
protected class Latency_LatencyKeyword_2 extends KeywordToken  {
	
	public Latency_LatencyKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLatencyAccess().getLatencyKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Latency_LeftCurlyBracketKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// latency="STRING"
protected class Latency_LatencyAssignment_3 extends AssignmentToken  {
	
	public Latency_LatencyAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLatencyAccess().getLatencyAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Latency_LatencyKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("latency",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("latency");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getLatencyAccess().getLatencySTRINGKeyword_3_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getLatencyAccess().getLatencySTRINGKeyword_3_0();
			return obj;
		}
		return null;
	}

}

// "percentile"
protected class Latency_PercentileKeyword_4 extends KeywordToken  {
	
	public Latency_PercentileKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLatencyAccess().getPercentileKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Latency_LatencyAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// percentile=Percentile
protected class Latency_PercentileAssignment_5 extends AssignmentToken  {
	
	public Latency_PercentileAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLatencyAccess().getPercentileAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Percentile_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("percentile",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("percentile");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPercentileRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLatencyAccess().getPercentilePercentileParserRuleCall_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Latency_PercentileKeyword_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// escalation=Escalation?
protected class Latency_EscalationAssignment_6 extends AssignmentToken  {
	
	public Latency_EscalationAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLatencyAccess().getEscalationAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Escalation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("escalation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("escalation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEscalationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLatencyAccess().getEscalationEscalationParserRuleCall_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Latency_PercentileAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("penalty" penalty=STRING)?
protected class Latency_Group_7 extends GroupToken {
	
	public Latency_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLatencyAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Latency_PenaltyAssignment_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "penalty"
protected class Latency_PenaltyKeyword_7_0 extends KeywordToken  {
	
	public Latency_PenaltyKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLatencyAccess().getPenaltyKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Latency_EscalationAssignment_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Latency_PercentileAssignment_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// penalty=STRING
protected class Latency_PenaltyAssignment_7_1 extends AssignmentToken  {
	
	public Latency_PenaltyAssignment_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLatencyAccess().getPenaltyAssignment_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Latency_PenaltyKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("penalty",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("penalty");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLatencyAccess().getPenaltySTRINGTerminalRuleCall_7_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLatencyAccess().getPenaltySTRINGTerminalRuleCall_7_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class Latency_RightCurlyBracketKeyword_8 extends KeywordToken  {
	
	public Latency_RightCurlyBracketKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLatencyAccess().getRightCurlyBracketKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Latency_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Latency_EscalationAssignment_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Latency_PercentileAssignment_5(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule Latency ****************/


/************ begin Rule MaxDownTime ****************
 *
 * MaxDownTime:
 * 
 * 	"max-downtime" "{" "duration" definition=STRING escalation=Escalation? ("penalty" penalty=STRING)? "}";
 *
 **/

// "max-downtime" "{" "duration" definition=STRING escalation=Escalation? ("penalty" penalty=STRING)? "}"
protected class MaxDownTime_Group extends GroupToken {
	
	public MaxDownTime_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMaxDownTimeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MaxDownTime_RightCurlyBracketKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMaxDownTimeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "max-downtime"
protected class MaxDownTime_MaxDowntimeKeyword_0 extends KeywordToken  {
	
	public MaxDownTime_MaxDowntimeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMaxDownTimeAccess().getMaxDowntimeKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "{"
protected class MaxDownTime_LeftCurlyBracketKeyword_1 extends KeywordToken  {
	
	public MaxDownTime_LeftCurlyBracketKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMaxDownTimeAccess().getLeftCurlyBracketKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MaxDownTime_MaxDowntimeKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "duration"
protected class MaxDownTime_DurationKeyword_2 extends KeywordToken  {
	
	public MaxDownTime_DurationKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMaxDownTimeAccess().getDurationKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MaxDownTime_LeftCurlyBracketKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// definition=STRING
protected class MaxDownTime_DefinitionAssignment_3 extends AssignmentToken  {
	
	public MaxDownTime_DefinitionAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMaxDownTimeAccess().getDefinitionAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MaxDownTime_DurationKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("definition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("definition");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMaxDownTimeAccess().getDefinitionSTRINGTerminalRuleCall_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMaxDownTimeAccess().getDefinitionSTRINGTerminalRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// escalation=Escalation?
protected class MaxDownTime_EscalationAssignment_4 extends AssignmentToken  {
	
	public MaxDownTime_EscalationAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMaxDownTimeAccess().getEscalationAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Escalation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("escalation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("escalation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEscalationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMaxDownTimeAccess().getEscalationEscalationParserRuleCall_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MaxDownTime_DefinitionAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("penalty" penalty=STRING)?
protected class MaxDownTime_Group_5 extends GroupToken {
	
	public MaxDownTime_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMaxDownTimeAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MaxDownTime_PenaltyAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "penalty"
protected class MaxDownTime_PenaltyKeyword_5_0 extends KeywordToken  {
	
	public MaxDownTime_PenaltyKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMaxDownTimeAccess().getPenaltyKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MaxDownTime_EscalationAssignment_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MaxDownTime_DefinitionAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// penalty=STRING
protected class MaxDownTime_PenaltyAssignment_5_1 extends AssignmentToken  {
	
	public MaxDownTime_PenaltyAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMaxDownTimeAccess().getPenaltyAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MaxDownTime_PenaltyKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("penalty",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("penalty");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMaxDownTimeAccess().getPenaltySTRINGTerminalRuleCall_5_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMaxDownTimeAccess().getPenaltySTRINGTerminalRuleCall_5_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class MaxDownTime_RightCurlyBracketKeyword_6 extends KeywordToken  {
	
	public MaxDownTime_RightCurlyBracketKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMaxDownTimeAccess().getRightCurlyBracketKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MaxDownTime_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MaxDownTime_EscalationAssignment_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MaxDownTime_DefinitionAssignment_3(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule MaxDownTime ****************/


/************ begin Rule CapacityRequirement ****************
 *
 * CapacityRequirement:
 * 
 * 	"capacity" "{" {CapacityRequirement} ("num-of-requests" requestNum=STRING "per" timeUnit=STRING)? ("message-size"
 * 
 * 	messageSize=STRING)? escalation=Escalation? ("penalty" penalty=STRING)? "}";
 *
 **/

// "capacity" "{" {CapacityRequirement} ("num-of-requests" requestNum=STRING "per" timeUnit=STRING)? ("message-size"
// 
// messageSize=STRING)? escalation=Escalation? ("penalty" penalty=STRING)? "}"
protected class CapacityRequirement_Group extends GroupToken {
	
	public CapacityRequirement_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCapacityRequirementAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CapacityRequirement_RightCurlyBracketKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCapacityRequirementAccess().getCapacityRequirementAction_2().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "capacity"
protected class CapacityRequirement_CapacityKeyword_0 extends KeywordToken  {
	
	public CapacityRequirement_CapacityKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCapacityRequirementAccess().getCapacityKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "{"
protected class CapacityRequirement_LeftCurlyBracketKeyword_1 extends KeywordToken  {
	
	public CapacityRequirement_LeftCurlyBracketKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCapacityRequirementAccess().getLeftCurlyBracketKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CapacityRequirement_CapacityKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// {CapacityRequirement}
protected class CapacityRequirement_CapacityRequirementAction_2 extends ActionToken  {

	public CapacityRequirement_CapacityRequirementAction_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getCapacityRequirementAccess().getCapacityRequirementAction_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CapacityRequirement_LeftCurlyBracketKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// ("num-of-requests" requestNum=STRING "per" timeUnit=STRING)?
protected class CapacityRequirement_Group_3 extends GroupToken {
	
	public CapacityRequirement_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCapacityRequirementAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CapacityRequirement_TimeUnitAssignment_3_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "num-of-requests"
protected class CapacityRequirement_NumOfRequestsKeyword_3_0 extends KeywordToken  {
	
	public CapacityRequirement_NumOfRequestsKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCapacityRequirementAccess().getNumOfRequestsKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CapacityRequirement_CapacityRequirementAction_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// requestNum=STRING
protected class CapacityRequirement_RequestNumAssignment_3_1 extends AssignmentToken  {
	
	public CapacityRequirement_RequestNumAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCapacityRequirementAccess().getRequestNumAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CapacityRequirement_NumOfRequestsKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("requestNum",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("requestNum");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCapacityRequirementAccess().getRequestNumSTRINGTerminalRuleCall_3_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getCapacityRequirementAccess().getRequestNumSTRINGTerminalRuleCall_3_1_0();
			return obj;
		}
		return null;
	}

}

// "per"
protected class CapacityRequirement_PerKeyword_3_2 extends KeywordToken  {
	
	public CapacityRequirement_PerKeyword_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCapacityRequirementAccess().getPerKeyword_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CapacityRequirement_RequestNumAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// timeUnit=STRING
protected class CapacityRequirement_TimeUnitAssignment_3_3 extends AssignmentToken  {
	
	public CapacityRequirement_TimeUnitAssignment_3_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCapacityRequirementAccess().getTimeUnitAssignment_3_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CapacityRequirement_PerKeyword_3_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("timeUnit",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("timeUnit");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCapacityRequirementAccess().getTimeUnitSTRINGTerminalRuleCall_3_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getCapacityRequirementAccess().getTimeUnitSTRINGTerminalRuleCall_3_3_0();
			return obj;
		}
		return null;
	}

}


// ("message-size" messageSize=STRING)?
protected class CapacityRequirement_Group_4 extends GroupToken {
	
	public CapacityRequirement_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCapacityRequirementAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CapacityRequirement_MessageSizeAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "message-size"
protected class CapacityRequirement_MessageSizeKeyword_4_0 extends KeywordToken  {
	
	public CapacityRequirement_MessageSizeKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCapacityRequirementAccess().getMessageSizeKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CapacityRequirement_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new CapacityRequirement_CapacityRequirementAction_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// messageSize=STRING
protected class CapacityRequirement_MessageSizeAssignment_4_1 extends AssignmentToken  {
	
	public CapacityRequirement_MessageSizeAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCapacityRequirementAccess().getMessageSizeAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CapacityRequirement_MessageSizeKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("messageSize",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("messageSize");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCapacityRequirementAccess().getMessageSizeSTRINGTerminalRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getCapacityRequirementAccess().getMessageSizeSTRINGTerminalRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// escalation=Escalation?
protected class CapacityRequirement_EscalationAssignment_5 extends AssignmentToken  {
	
	public CapacityRequirement_EscalationAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCapacityRequirementAccess().getEscalationAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Escalation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("escalation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("escalation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEscalationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getCapacityRequirementAccess().getEscalationEscalationParserRuleCall_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new CapacityRequirement_Group_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new CapacityRequirement_Group_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new CapacityRequirement_CapacityRequirementAction_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("penalty" penalty=STRING)?
protected class CapacityRequirement_Group_6 extends GroupToken {
	
	public CapacityRequirement_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCapacityRequirementAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CapacityRequirement_PenaltyAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "penalty"
protected class CapacityRequirement_PenaltyKeyword_6_0 extends KeywordToken  {
	
	public CapacityRequirement_PenaltyKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCapacityRequirementAccess().getPenaltyKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CapacityRequirement_EscalationAssignment_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new CapacityRequirement_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new CapacityRequirement_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new CapacityRequirement_CapacityRequirementAction_2(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// penalty=STRING
protected class CapacityRequirement_PenaltyAssignment_6_1 extends AssignmentToken  {
	
	public CapacityRequirement_PenaltyAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCapacityRequirementAccess().getPenaltyAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CapacityRequirement_PenaltyKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("penalty",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("penalty");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCapacityRequirementAccess().getPenaltySTRINGTerminalRuleCall_6_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getCapacityRequirementAccess().getPenaltySTRINGTerminalRuleCall_6_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class CapacityRequirement_RightCurlyBracketKeyword_7 extends KeywordToken  {
	
	public CapacityRequirement_RightCurlyBracketKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCapacityRequirementAccess().getRightCurlyBracketKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CapacityRequirement_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new CapacityRequirement_EscalationAssignment_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new CapacityRequirement_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new CapacityRequirement_Group_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new CapacityRequirement_CapacityRequirementAction_2(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}


/************ end Rule CapacityRequirement ****************/


/************ begin Rule ReliablityRequirement ****************
 *
 * ReliablityRequirement:
 * 
 * 	"message-exchange-reliability" "{" reliability=ReliablilityKind inOrderDelivery?="in-order-delivery"? "}";
 *
 **/

// "message-exchange-reliability" "{" reliability=ReliablilityKind inOrderDelivery?="in-order-delivery"? "}"
protected class ReliablityRequirement_Group extends GroupToken {
	
	public ReliablityRequirement_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getReliablityRequirementAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReliablityRequirement_RightCurlyBracketKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getReliablityRequirementRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "message-exchange-reliability"
protected class ReliablityRequirement_MessageExchangeReliabilityKeyword_0 extends KeywordToken  {
	
	public ReliablityRequirement_MessageExchangeReliabilityKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReliablityRequirementAccess().getMessageExchangeReliabilityKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "{"
protected class ReliablityRequirement_LeftCurlyBracketKeyword_1 extends KeywordToken  {
	
	public ReliablityRequirement_LeftCurlyBracketKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReliablityRequirementAccess().getLeftCurlyBracketKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReliablityRequirement_MessageExchangeReliabilityKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// reliability=ReliablilityKind
protected class ReliablityRequirement_ReliabilityAssignment_2 extends AssignmentToken  {
	
	public ReliablityRequirement_ReliabilityAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getReliablityRequirementAccess().getReliabilityAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReliablityRequirement_LeftCurlyBracketKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("reliability",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("reliability");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getReliablityRequirementAccess().getReliabilityReliablilityKindEnumRuleCall_2_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getReliablityRequirementAccess().getReliabilityReliablilityKindEnumRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// inOrderDelivery?="in-order-delivery"?
protected class ReliablityRequirement_InOrderDeliveryAssignment_3 extends AssignmentToken  {
	
	public ReliablityRequirement_InOrderDeliveryAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getReliablityRequirementAccess().getInOrderDeliveryAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReliablityRequirement_ReliabilityAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("inOrderDelivery",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("inOrderDelivery");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getReliablityRequirementAccess().getInOrderDeliveryInOrderDeliveryKeyword_3_0();
			return obj;
		}
		return null;
	}

}

// "}"
protected class ReliablityRequirement_RightCurlyBracketKeyword_4 extends KeywordToken  {
	
	public ReliablityRequirement_RightCurlyBracketKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReliablityRequirementAccess().getRightCurlyBracketKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReliablityRequirement_InOrderDeliveryAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ReliablityRequirement_ReliabilityAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule ReliablityRequirement ****************/


/************ begin Rule AccuracyRequirement ****************
 *
 * AccuracyRequirement:
 * 
 * 	"accuracy" "{" "max-error-rate" maxErrorRate=STRING escalation=Escalation? ("penalty" penalty=STRING)? "}";
 *
 **/

// "accuracy" "{" "max-error-rate" maxErrorRate=STRING escalation=Escalation? ("penalty" penalty=STRING)? "}"
protected class AccuracyRequirement_Group extends GroupToken {
	
	public AccuracyRequirement_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAccuracyRequirementAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccuracyRequirement_RightCurlyBracketKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAccuracyRequirementRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "accuracy"
protected class AccuracyRequirement_AccuracyKeyword_0 extends KeywordToken  {
	
	public AccuracyRequirement_AccuracyKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccuracyRequirementAccess().getAccuracyKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "{"
protected class AccuracyRequirement_LeftCurlyBracketKeyword_1 extends KeywordToken  {
	
	public AccuracyRequirement_LeftCurlyBracketKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccuracyRequirementAccess().getLeftCurlyBracketKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccuracyRequirement_AccuracyKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "max-error-rate"
protected class AccuracyRequirement_MaxErrorRateKeyword_2 extends KeywordToken  {
	
	public AccuracyRequirement_MaxErrorRateKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccuracyRequirementAccess().getMaxErrorRateKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccuracyRequirement_LeftCurlyBracketKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// maxErrorRate=STRING
protected class AccuracyRequirement_MaxErrorRateAssignment_3 extends AssignmentToken  {
	
	public AccuracyRequirement_MaxErrorRateAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAccuracyRequirementAccess().getMaxErrorRateAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccuracyRequirement_MaxErrorRateKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("maxErrorRate",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("maxErrorRate");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAccuracyRequirementAccess().getMaxErrorRateSTRINGTerminalRuleCall_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAccuracyRequirementAccess().getMaxErrorRateSTRINGTerminalRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// escalation=Escalation?
protected class AccuracyRequirement_EscalationAssignment_4 extends AssignmentToken  {
	
	public AccuracyRequirement_EscalationAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAccuracyRequirementAccess().getEscalationAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Escalation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("escalation",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("escalation");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEscalationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAccuracyRequirementAccess().getEscalationEscalationParserRuleCall_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AccuracyRequirement_MaxErrorRateAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("penalty" penalty=STRING)?
protected class AccuracyRequirement_Group_5 extends GroupToken {
	
	public AccuracyRequirement_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAccuracyRequirementAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccuracyRequirement_PenaltyAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "penalty"
protected class AccuracyRequirement_PenaltyKeyword_5_0 extends KeywordToken  {
	
	public AccuracyRequirement_PenaltyKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccuracyRequirementAccess().getPenaltyKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccuracyRequirement_EscalationAssignment_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AccuracyRequirement_MaxErrorRateAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// penalty=STRING
protected class AccuracyRequirement_PenaltyAssignment_5_1 extends AssignmentToken  {
	
	public AccuracyRequirement_PenaltyAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAccuracyRequirementAccess().getPenaltyAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccuracyRequirement_PenaltyKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("penalty",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("penalty");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAccuracyRequirementAccess().getPenaltySTRINGTerminalRuleCall_5_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAccuracyRequirementAccess().getPenaltySTRINGTerminalRuleCall_5_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class AccuracyRequirement_RightCurlyBracketKeyword_6 extends KeywordToken  {
	
	public AccuracyRequirement_RightCurlyBracketKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccuracyRequirementAccess().getRightCurlyBracketKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccuracyRequirement_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AccuracyRequirement_EscalationAssignment_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AccuracyRequirement_MaxErrorRateAssignment_3(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule AccuracyRequirement ****************/


/************ begin Rule LogRequirement ****************
 *
 * LogRequirement:
 * 
 * 	"logging" "{" "message-log-level" logLevel=LogRequirementKind "additional-logging-requirements"
 * 
 * 	additionalLoggingRequirement=STRING;
 *
 **/

// "logging" "{" "message-log-level" logLevel=LogRequirementKind "additional-logging-requirements"
// 
// additionalLoggingRequirement=STRING
protected class LogRequirement_Group extends GroupToken {
	
	public LogRequirement_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLogRequirementAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LogRequirement_AdditionalLoggingRequirementAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLogRequirementRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "logging"
protected class LogRequirement_LoggingKeyword_0 extends KeywordToken  {
	
	public LogRequirement_LoggingKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLogRequirementAccess().getLoggingKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "{"
protected class LogRequirement_LeftCurlyBracketKeyword_1 extends KeywordToken  {
	
	public LogRequirement_LeftCurlyBracketKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLogRequirementAccess().getLeftCurlyBracketKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LogRequirement_LoggingKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "message-log-level"
protected class LogRequirement_MessageLogLevelKeyword_2 extends KeywordToken  {
	
	public LogRequirement_MessageLogLevelKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLogRequirementAccess().getMessageLogLevelKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LogRequirement_LeftCurlyBracketKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// logLevel=LogRequirementKind
protected class LogRequirement_LogLevelAssignment_3 extends AssignmentToken  {
	
	public LogRequirement_LogLevelAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLogRequirementAccess().getLogLevelAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LogRequirement_MessageLogLevelKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("logLevel",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("logLevel");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getLogRequirementAccess().getLogLevelLogRequirementKindEnumRuleCall_3_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getLogRequirementAccess().getLogLevelLogRequirementKindEnumRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// "additional-logging-requirements"
protected class LogRequirement_AdditionalLoggingRequirementsKeyword_4 extends KeywordToken  {
	
	public LogRequirement_AdditionalLoggingRequirementsKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLogRequirementAccess().getAdditionalLoggingRequirementsKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LogRequirement_LogLevelAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// additionalLoggingRequirement=STRING
protected class LogRequirement_AdditionalLoggingRequirementAssignment_5 extends AssignmentToken  {
	
	public LogRequirement_AdditionalLoggingRequirementAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLogRequirementAccess().getAdditionalLoggingRequirementAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LogRequirement_AdditionalLoggingRequirementsKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("additionalLoggingRequirement",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("additionalLoggingRequirement");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLogRequirementAccess().getAdditionalLoggingRequirementSTRINGTerminalRuleCall_5_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLogRequirementAccess().getAdditionalLoggingRequirementSTRINGTerminalRuleCall_5_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule LogRequirement ****************/


/************ begin Rule Percentile ****************
 *
 * Percentile:
 * 
 * 	percentile=INT ("." INT)* "%";
 *
 **/

// percentile=INT ("." INT)* "%"
protected class Percentile_Group extends GroupToken {
	
	public Percentile_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPercentileAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Percentile_PercentSignKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPercentileRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// percentile=INT
protected class Percentile_PercentileAssignment_0 extends AssignmentToken  {
	
	public Percentile_PercentileAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPercentileAccess().getPercentileAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("percentile",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("percentile");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPercentileAccess().getPercentileINTTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPercentileAccess().getPercentileINTTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// "%"
protected class Percentile_PercentSignKeyword_2 extends KeywordToken  {
	
	public Percentile_PercentSignKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPercentileAccess().getPercentSignKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Percentile_PercentileAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Percentile ****************/


/************ begin Rule SecurityRequirement ****************
 *
 * / * Security policy to be applied to the services * / SecurityRequirement:
 * 
 * 	AuthenticationRequirement | SigningRequirement | EncryptionRequirement;
 *
 **/

// AuthenticationRequirement | SigningRequirement | EncryptionRequirement
protected class SecurityRequirement_Alternatives extends AlternativesToken {

	public SecurityRequirement_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSecurityRequirementAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SecurityRequirement_AuthenticationRequirementParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SecurityRequirement_SigningRequirementParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SecurityRequirement_EncryptionRequirementParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAuthenticationRequirementAccess().getAuthenticationRequirementAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEncryptionRequirementAccess().getEncryptionRequirementAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSigningRequirementAccess().getSigningRequirementAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// AuthenticationRequirement
protected class SecurityRequirement_AuthenticationRequirementParserRuleCall_0 extends RuleCallToken {
	
	public SecurityRequirement_AuthenticationRequirementParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSecurityRequirementAccess().getAuthenticationRequirementParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AuthenticationRequirement_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAuthenticationRequirementAccess().getAuthenticationRequirementAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(AuthenticationRequirement_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// SigningRequirement
protected class SecurityRequirement_SigningRequirementParserRuleCall_1 extends RuleCallToken {
	
	public SecurityRequirement_SigningRequirementParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSecurityRequirementAccess().getSigningRequirementParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SigningRequirement_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSigningRequirementAccess().getSigningRequirementAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(SigningRequirement_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// EncryptionRequirement
protected class SecurityRequirement_EncryptionRequirementParserRuleCall_2 extends RuleCallToken {
	
	public SecurityRequirement_EncryptionRequirementParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSecurityRequirementAccess().getEncryptionRequirementParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncryptionRequirement_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEncryptionRequirementAccess().getEncryptionRequirementAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(EncryptionRequirement_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule SecurityRequirement ****************/


/************ begin Rule AuthenticationRequirement ****************
 *
 * / * Requirement, that defines how consumer are authenticated * / AuthenticationRequirement:
 * 
 * 	{AuthenticationRequirement} "authentication-procedure" optional?="optional"? "{" "auth-tokens" "{"
 * 
 * 	authTokens+=AuthToken+ "}" "hash-algorithms" "{" hashAlgorithms+=HashAlgorithm* "}" useNonce?="use-nonce"? ("issuer"
 * 
 * 	issuer=STRING)? "}";
 *
 **/

// {AuthenticationRequirement} "authentication-procedure" optional?="optional"? "{" "auth-tokens" "{"
// 
// authTokens+=AuthToken+ "}" "hash-algorithms" "{" hashAlgorithms+=HashAlgorithm* "}" useNonce?="use-nonce"? ("issuer"
// 
// issuer=STRING)? "}"
protected class AuthenticationRequirement_Group extends GroupToken {
	
	public AuthenticationRequirement_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAuthenticationRequirementAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AuthenticationRequirement_RightCurlyBracketKeyword_14(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAuthenticationRequirementAccess().getAuthenticationRequirementAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {AuthenticationRequirement}
protected class AuthenticationRequirement_AuthenticationRequirementAction_0 extends ActionToken  {

	public AuthenticationRequirement_AuthenticationRequirementAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getAuthenticationRequirementAccess().getAuthenticationRequirementAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "authentication-procedure"
protected class AuthenticationRequirement_AuthenticationProcedureKeyword_1 extends KeywordToken  {
	
	public AuthenticationRequirement_AuthenticationProcedureKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAuthenticationRequirementAccess().getAuthenticationProcedureKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AuthenticationRequirement_AuthenticationRequirementAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// optional?="optional"?
protected class AuthenticationRequirement_OptionalAssignment_2 extends AssignmentToken  {
	
	public AuthenticationRequirement_OptionalAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAuthenticationRequirementAccess().getOptionalAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AuthenticationRequirement_AuthenticationProcedureKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("optional",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("optional");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getAuthenticationRequirementAccess().getOptionalOptionalKeyword_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class AuthenticationRequirement_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public AuthenticationRequirement_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAuthenticationRequirementAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AuthenticationRequirement_OptionalAssignment_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AuthenticationRequirement_AuthenticationProcedureKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "auth-tokens"
protected class AuthenticationRequirement_AuthTokensKeyword_4 extends KeywordToken  {
	
	public AuthenticationRequirement_AuthTokensKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAuthenticationRequirementAccess().getAuthTokensKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AuthenticationRequirement_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class AuthenticationRequirement_LeftCurlyBracketKeyword_5 extends KeywordToken  {
	
	public AuthenticationRequirement_LeftCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAuthenticationRequirementAccess().getLeftCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AuthenticationRequirement_AuthTokensKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// authTokens+=AuthToken+
protected class AuthenticationRequirement_AuthTokensAssignment_6 extends AssignmentToken  {
	
	public AuthenticationRequirement_AuthTokensAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAuthenticationRequirementAccess().getAuthTokensAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AuthToken_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("authTokens",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("authTokens");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAuthTokenRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAuthenticationRequirementAccess().getAuthTokensAuthTokenParserRuleCall_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AuthenticationRequirement_AuthTokensAssignment_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AuthenticationRequirement_LeftCurlyBracketKeyword_5(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class AuthenticationRequirement_RightCurlyBracketKeyword_7 extends KeywordToken  {
	
	public AuthenticationRequirement_RightCurlyBracketKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAuthenticationRequirementAccess().getRightCurlyBracketKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AuthenticationRequirement_AuthTokensAssignment_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "hash-algorithms"
protected class AuthenticationRequirement_HashAlgorithmsKeyword_8 extends KeywordToken  {
	
	public AuthenticationRequirement_HashAlgorithmsKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAuthenticationRequirementAccess().getHashAlgorithmsKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AuthenticationRequirement_RightCurlyBracketKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class AuthenticationRequirement_LeftCurlyBracketKeyword_9 extends KeywordToken  {
	
	public AuthenticationRequirement_LeftCurlyBracketKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAuthenticationRequirementAccess().getLeftCurlyBracketKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AuthenticationRequirement_HashAlgorithmsKeyword_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// hashAlgorithms+=HashAlgorithm*
protected class AuthenticationRequirement_HashAlgorithmsAssignment_10 extends AssignmentToken  {
	
	public AuthenticationRequirement_HashAlgorithmsAssignment_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAuthenticationRequirementAccess().getHashAlgorithmsAssignment_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HashAlgorithm_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("hashAlgorithms",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("hashAlgorithms");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getHashAlgorithmRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAuthenticationRequirementAccess().getHashAlgorithmsHashAlgorithmParserRuleCall_10_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AuthenticationRequirement_HashAlgorithmsAssignment_10(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AuthenticationRequirement_LeftCurlyBracketKeyword_9(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class AuthenticationRequirement_RightCurlyBracketKeyword_11 extends KeywordToken  {
	
	public AuthenticationRequirement_RightCurlyBracketKeyword_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAuthenticationRequirementAccess().getRightCurlyBracketKeyword_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AuthenticationRequirement_HashAlgorithmsAssignment_10(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AuthenticationRequirement_LeftCurlyBracketKeyword_9(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// useNonce?="use-nonce"?
protected class AuthenticationRequirement_UseNonceAssignment_12 extends AssignmentToken  {
	
	public AuthenticationRequirement_UseNonceAssignment_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAuthenticationRequirementAccess().getUseNonceAssignment_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AuthenticationRequirement_RightCurlyBracketKeyword_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("useNonce",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("useNonce");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getAuthenticationRequirementAccess().getUseNonceUseNonceKeyword_12_0();
			return obj;
		}
		return null;
	}

}

// ("issuer" issuer=STRING)?
protected class AuthenticationRequirement_Group_13 extends GroupToken {
	
	public AuthenticationRequirement_Group_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAuthenticationRequirementAccess().getGroup_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AuthenticationRequirement_IssuerAssignment_13_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "issuer"
protected class AuthenticationRequirement_IssuerKeyword_13_0 extends KeywordToken  {
	
	public AuthenticationRequirement_IssuerKeyword_13_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAuthenticationRequirementAccess().getIssuerKeyword_13_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AuthenticationRequirement_UseNonceAssignment_12(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AuthenticationRequirement_RightCurlyBracketKeyword_11(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// issuer=STRING
protected class AuthenticationRequirement_IssuerAssignment_13_1 extends AssignmentToken  {
	
	public AuthenticationRequirement_IssuerAssignment_13_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAuthenticationRequirementAccess().getIssuerAssignment_13_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AuthenticationRequirement_IssuerKeyword_13_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("issuer",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("issuer");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAuthenticationRequirementAccess().getIssuerSTRINGTerminalRuleCall_13_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAuthenticationRequirementAccess().getIssuerSTRINGTerminalRuleCall_13_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class AuthenticationRequirement_RightCurlyBracketKeyword_14 extends KeywordToken  {
	
	public AuthenticationRequirement_RightCurlyBracketKeyword_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAuthenticationRequirementAccess().getRightCurlyBracketKeyword_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AuthenticationRequirement_Group_13(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AuthenticationRequirement_UseNonceAssignment_12(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AuthenticationRequirement_RightCurlyBracketKeyword_11(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule AuthenticationRequirement ****************/


/************ begin Rule AuthToken ****************
 *
 * AuthToken:
 * 
 * 	optional?="optional"? kind=AuthTokenKind;
 *
 **/

// optional?="optional"? kind=AuthTokenKind
protected class AuthToken_Group extends GroupToken {
	
	public AuthToken_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAuthTokenAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AuthToken_KindAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAuthTokenRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// optional?="optional"?
protected class AuthToken_OptionalAssignment_0 extends AssignmentToken  {
	
	public AuthToken_OptionalAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAuthTokenAccess().getOptionalAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("optional",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("optional");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getAuthTokenAccess().getOptionalOptionalKeyword_0_0();
			return obj;
		}
		return null;
	}

}

// kind=AuthTokenKind
protected class AuthToken_KindAssignment_1 extends AssignmentToken  {
	
	public AuthToken_KindAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAuthTokenAccess().getKindAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AuthToken_OptionalAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index - 1, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("kind",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("kind");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getAuthTokenAccess().getKindAuthTokenKindEnumRuleCall_1_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getAuthTokenAccess().getKindAuthTokenKindEnumRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule AuthToken ****************/


/************ begin Rule HashAlgorithm ****************
 *
 * HashAlgorithm:
 * 
 * 	optional?="optional"? useBase64?="Base64-encoded"? kind=HashAlgKind;
 *
 **/

// optional?="optional"? useBase64?="Base64-encoded"? kind=HashAlgKind
protected class HashAlgorithm_Group extends GroupToken {
	
	public HashAlgorithm_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getHashAlgorithmAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HashAlgorithm_KindAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getHashAlgorithmRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// optional?="optional"?
protected class HashAlgorithm_OptionalAssignment_0 extends AssignmentToken  {
	
	public HashAlgorithm_OptionalAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getHashAlgorithmAccess().getOptionalAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("optional",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("optional");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getHashAlgorithmAccess().getOptionalOptionalKeyword_0_0();
			return obj;
		}
		return null;
	}

}

// useBase64?="Base64-encoded"?
protected class HashAlgorithm_UseBase64Assignment_1 extends AssignmentToken  {
	
	public HashAlgorithm_UseBase64Assignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getHashAlgorithmAccess().getUseBase64Assignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HashAlgorithm_OptionalAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index - 1, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("useBase64",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("useBase64");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getHashAlgorithmAccess().getUseBase64Base64EncodedKeyword_1_0();
			return obj;
		}
		return null;
	}

}

// kind=HashAlgKind
protected class HashAlgorithm_KindAssignment_2 extends AssignmentToken  {
	
	public HashAlgorithm_KindAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getHashAlgorithmAccess().getKindAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HashAlgorithm_UseBase64Assignment_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new HashAlgorithm_OptionalAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index - 2, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("kind",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("kind");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getHashAlgorithmAccess().getKindHashAlgKindEnumRuleCall_2_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getHashAlgorithmAccess().getKindHashAlgKindEnumRuleCall_2_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule HashAlgorithm ****************/


/************ begin Rule SigningRequirement ****************
 *
 * / * How messages are signed, to verify their authenticity * / SigningRequirement:
 * 
 * 	{SigningRequirement} "signing-policy" "{" ("supported-algorithms" supportedSigningAlgorithms+=SigningAlgothm+)?
 * 
 * 	("requires-algorithm" requiredSigningAlgorithm=SigningAlgothm)? ("signed-message-parts" signedParts+=MessagePartRef
 * 
 * 	("," signedParts+=MessagePartRef)*)? "}";
 *
 **/

// {SigningRequirement} "signing-policy" "{" ("supported-algorithms" supportedSigningAlgorithms+=SigningAlgothm+)?
// 
// ("requires-algorithm" requiredSigningAlgorithm=SigningAlgothm)? ("signed-message-parts" signedParts+=MessagePartRef
// 
// ("," signedParts+=MessagePartRef)*)? "}"
protected class SigningRequirement_Group extends GroupToken {
	
	public SigningRequirement_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSigningRequirementAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SigningRequirement_RightCurlyBracketKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSigningRequirementAccess().getSigningRequirementAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {SigningRequirement}
protected class SigningRequirement_SigningRequirementAction_0 extends ActionToken  {

	public SigningRequirement_SigningRequirementAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getSigningRequirementAccess().getSigningRequirementAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "signing-policy"
protected class SigningRequirement_SigningPolicyKeyword_1 extends KeywordToken  {
	
	public SigningRequirement_SigningPolicyKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSigningRequirementAccess().getSigningPolicyKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SigningRequirement_SigningRequirementAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class SigningRequirement_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public SigningRequirement_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSigningRequirementAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SigningRequirement_SigningPolicyKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("supported-algorithms" supportedSigningAlgorithms+=SigningAlgothm+)?
protected class SigningRequirement_Group_3 extends GroupToken {
	
	public SigningRequirement_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSigningRequirementAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SigningRequirement_SupportedSigningAlgorithmsAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "supported-algorithms"
protected class SigningRequirement_SupportedAlgorithmsKeyword_3_0 extends KeywordToken  {
	
	public SigningRequirement_SupportedAlgorithmsKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSigningRequirementAccess().getSupportedAlgorithmsKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SigningRequirement_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// supportedSigningAlgorithms+=SigningAlgothm+
protected class SigningRequirement_SupportedSigningAlgorithmsAssignment_3_1 extends AssignmentToken  {
	
	public SigningRequirement_SupportedSigningAlgorithmsAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSigningRequirementAccess().getSupportedSigningAlgorithmsAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SigningRequirement_SupportedSigningAlgorithmsAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SigningRequirement_SupportedAlgorithmsKeyword_3_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("supportedSigningAlgorithms",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("supportedSigningAlgorithms");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getSigningRequirementAccess().getSupportedSigningAlgorithmsSigningAlgothmEnumRuleCall_3_1_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getSigningRequirementAccess().getSupportedSigningAlgorithmsSigningAlgothmEnumRuleCall_3_1_0();
			return obj;
		}
		return null;
	}

}


// ("requires-algorithm" requiredSigningAlgorithm=SigningAlgothm)?
protected class SigningRequirement_Group_4 extends GroupToken {
	
	public SigningRequirement_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSigningRequirementAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SigningRequirement_RequiredSigningAlgorithmAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "requires-algorithm"
protected class SigningRequirement_RequiresAlgorithmKeyword_4_0 extends KeywordToken  {
	
	public SigningRequirement_RequiresAlgorithmKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSigningRequirementAccess().getRequiresAlgorithmKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SigningRequirement_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SigningRequirement_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// requiredSigningAlgorithm=SigningAlgothm
protected class SigningRequirement_RequiredSigningAlgorithmAssignment_4_1 extends AssignmentToken  {
	
	public SigningRequirement_RequiredSigningAlgorithmAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSigningRequirementAccess().getRequiredSigningAlgorithmAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SigningRequirement_RequiresAlgorithmKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("requiredSigningAlgorithm",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("requiredSigningAlgorithm");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getSigningRequirementAccess().getRequiredSigningAlgorithmSigningAlgothmEnumRuleCall_4_1_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getSigningRequirementAccess().getRequiredSigningAlgorithmSigningAlgothmEnumRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// ("signed-message-parts" signedParts+=MessagePartRef ("," signedParts+=MessagePartRef)*)?
protected class SigningRequirement_Group_5 extends GroupToken {
	
	public SigningRequirement_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSigningRequirementAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SigningRequirement_Group_5_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SigningRequirement_SignedPartsAssignment_5_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "signed-message-parts"
protected class SigningRequirement_SignedMessagePartsKeyword_5_0 extends KeywordToken  {
	
	public SigningRequirement_SignedMessagePartsKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSigningRequirementAccess().getSignedMessagePartsKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SigningRequirement_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SigningRequirement_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SigningRequirement_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// signedParts+=MessagePartRef
protected class SigningRequirement_SignedPartsAssignment_5_1 extends AssignmentToken  {
	
	public SigningRequirement_SignedPartsAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSigningRequirementAccess().getSignedPartsAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MessagePartRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("signedParts",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("signedParts");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMessagePartRefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSigningRequirementAccess().getSignedPartsMessagePartRefParserRuleCall_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SigningRequirement_SignedMessagePartsKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," signedParts+=MessagePartRef)*
protected class SigningRequirement_Group_5_2 extends GroupToken {
	
	public SigningRequirement_Group_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSigningRequirementAccess().getGroup_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SigningRequirement_SignedPartsAssignment_5_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class SigningRequirement_CommaKeyword_5_2_0 extends KeywordToken  {
	
	public SigningRequirement_CommaKeyword_5_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSigningRequirementAccess().getCommaKeyword_5_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SigningRequirement_Group_5_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SigningRequirement_SignedPartsAssignment_5_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// signedParts+=MessagePartRef
protected class SigningRequirement_SignedPartsAssignment_5_2_1 extends AssignmentToken  {
	
	public SigningRequirement_SignedPartsAssignment_5_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSigningRequirementAccess().getSignedPartsAssignment_5_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MessagePartRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("signedParts",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("signedParts");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMessagePartRefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSigningRequirementAccess().getSignedPartsMessagePartRefParserRuleCall_5_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SigningRequirement_CommaKeyword_5_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



// "}"
protected class SigningRequirement_RightCurlyBracketKeyword_6 extends KeywordToken  {
	
	public SigningRequirement_RightCurlyBracketKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSigningRequirementAccess().getRightCurlyBracketKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SigningRequirement_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SigningRequirement_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SigningRequirement_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new SigningRequirement_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}


/************ end Rule SigningRequirement ****************/


/************ begin Rule MessagePartRef ****************
 *
 * MessagePartRef:
 * 
 * 	messagePartRef=MessagePartRefKind ("expression" partRefExpression=STRING)?;
 *
 **/

// messagePartRef=MessagePartRefKind ("expression" partRefExpression=STRING)?
protected class MessagePartRef_Group extends GroupToken {
	
	public MessagePartRef_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMessagePartRefAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MessagePartRef_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MessagePartRef_MessagePartRefAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMessagePartRefRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// messagePartRef=MessagePartRefKind
protected class MessagePartRef_MessagePartRefAssignment_0 extends AssignmentToken  {
	
	public MessagePartRef_MessagePartRefAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMessagePartRefAccess().getMessagePartRefAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("messagePartRef",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("messagePartRef");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getMessagePartRefAccess().getMessagePartRefMessagePartRefKindEnumRuleCall_0_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getMessagePartRefAccess().getMessagePartRefMessagePartRefKindEnumRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// ("expression" partRefExpression=STRING)?
protected class MessagePartRef_Group_1 extends GroupToken {
	
	public MessagePartRef_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMessagePartRefAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MessagePartRef_PartRefExpressionAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "expression"
protected class MessagePartRef_ExpressionKeyword_1_0 extends KeywordToken  {
	
	public MessagePartRef_ExpressionKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMessagePartRefAccess().getExpressionKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MessagePartRef_MessagePartRefAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// partRefExpression=STRING
protected class MessagePartRef_PartRefExpressionAssignment_1_1 extends AssignmentToken  {
	
	public MessagePartRef_PartRefExpressionAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMessagePartRefAccess().getPartRefExpressionAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MessagePartRef_ExpressionKeyword_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("partRefExpression",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("partRefExpression");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMessagePartRefAccess().getPartRefExpressionSTRINGTerminalRuleCall_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMessagePartRefAccess().getPartRefExpressionSTRINGTerminalRuleCall_1_1_0();
			return obj;
		}
		return null;
	}

}



/************ end Rule MessagePartRef ****************/


/************ begin Rule EncryptionRequirement ****************
 *
 * / * How messages are encrypted * / EncryptionRequirement:
 * 
 * 	{EncryptionRequirement} "encryption-policy" "{" ("supported-algorithms"
 * 
 * 	supportedCipherAlgorithms+=CipherAlgorithmKind+)? ("requires-algorithm" requiredCipherAlgorithm=CipherAlgorithmKind)?
 * 
 * 	("encrypted-message-parts" encryptedParts+=MessagePartRef ("," encryptedParts+=MessagePartRef)*)? "}";
 *
 **/

// {EncryptionRequirement} "encryption-policy" "{" ("supported-algorithms"
// 
// supportedCipherAlgorithms+=CipherAlgorithmKind+)? ("requires-algorithm" requiredCipherAlgorithm=CipherAlgorithmKind)?
// 
// ("encrypted-message-parts" encryptedParts+=MessagePartRef ("," encryptedParts+=MessagePartRef)*)? "}"
protected class EncryptionRequirement_Group extends GroupToken {
	
	public EncryptionRequirement_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEncryptionRequirementAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncryptionRequirement_RightCurlyBracketKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEncryptionRequirementAccess().getEncryptionRequirementAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {EncryptionRequirement}
protected class EncryptionRequirement_EncryptionRequirementAction_0 extends ActionToken  {

	public EncryptionRequirement_EncryptionRequirementAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getEncryptionRequirementAccess().getEncryptionRequirementAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "encryption-policy"
protected class EncryptionRequirement_EncryptionPolicyKeyword_1 extends KeywordToken  {
	
	public EncryptionRequirement_EncryptionPolicyKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEncryptionRequirementAccess().getEncryptionPolicyKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncryptionRequirement_EncryptionRequirementAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class EncryptionRequirement_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public EncryptionRequirement_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEncryptionRequirementAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncryptionRequirement_EncryptionPolicyKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("supported-algorithms" supportedCipherAlgorithms+=CipherAlgorithmKind+)?
protected class EncryptionRequirement_Group_3 extends GroupToken {
	
	public EncryptionRequirement_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEncryptionRequirementAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncryptionRequirement_SupportedCipherAlgorithmsAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "supported-algorithms"
protected class EncryptionRequirement_SupportedAlgorithmsKeyword_3_0 extends KeywordToken  {
	
	public EncryptionRequirement_SupportedAlgorithmsKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEncryptionRequirementAccess().getSupportedAlgorithmsKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncryptionRequirement_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// supportedCipherAlgorithms+=CipherAlgorithmKind+
protected class EncryptionRequirement_SupportedCipherAlgorithmsAssignment_3_1 extends AssignmentToken  {
	
	public EncryptionRequirement_SupportedCipherAlgorithmsAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEncryptionRequirementAccess().getSupportedCipherAlgorithmsAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncryptionRequirement_SupportedCipherAlgorithmsAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EncryptionRequirement_SupportedAlgorithmsKeyword_3_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("supportedCipherAlgorithms",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("supportedCipherAlgorithms");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getEncryptionRequirementAccess().getSupportedCipherAlgorithmsCipherAlgorithmKindEnumRuleCall_3_1_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getEncryptionRequirementAccess().getSupportedCipherAlgorithmsCipherAlgorithmKindEnumRuleCall_3_1_0();
			return obj;
		}
		return null;
	}

}


// ("requires-algorithm" requiredCipherAlgorithm=CipherAlgorithmKind)?
protected class EncryptionRequirement_Group_4 extends GroupToken {
	
	public EncryptionRequirement_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEncryptionRequirementAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncryptionRequirement_RequiredCipherAlgorithmAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "requires-algorithm"
protected class EncryptionRequirement_RequiresAlgorithmKeyword_4_0 extends KeywordToken  {
	
	public EncryptionRequirement_RequiresAlgorithmKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEncryptionRequirementAccess().getRequiresAlgorithmKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncryptionRequirement_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EncryptionRequirement_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// requiredCipherAlgorithm=CipherAlgorithmKind
protected class EncryptionRequirement_RequiredCipherAlgorithmAssignment_4_1 extends AssignmentToken  {
	
	public EncryptionRequirement_RequiredCipherAlgorithmAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEncryptionRequirementAccess().getRequiredCipherAlgorithmAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncryptionRequirement_RequiresAlgorithmKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("requiredCipherAlgorithm",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("requiredCipherAlgorithm");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getEncryptionRequirementAccess().getRequiredCipherAlgorithmCipherAlgorithmKindEnumRuleCall_4_1_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getEncryptionRequirementAccess().getRequiredCipherAlgorithmCipherAlgorithmKindEnumRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// ("encrypted-message-parts" encryptedParts+=MessagePartRef ("," encryptedParts+=MessagePartRef)*)?
protected class EncryptionRequirement_Group_5 extends GroupToken {
	
	public EncryptionRequirement_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEncryptionRequirementAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncryptionRequirement_Group_5_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EncryptionRequirement_EncryptedPartsAssignment_5_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "encrypted-message-parts"
protected class EncryptionRequirement_EncryptedMessagePartsKeyword_5_0 extends KeywordToken  {
	
	public EncryptionRequirement_EncryptedMessagePartsKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEncryptionRequirementAccess().getEncryptedMessagePartsKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncryptionRequirement_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EncryptionRequirement_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EncryptionRequirement_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// encryptedParts+=MessagePartRef
protected class EncryptionRequirement_EncryptedPartsAssignment_5_1 extends AssignmentToken  {
	
	public EncryptionRequirement_EncryptedPartsAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEncryptionRequirementAccess().getEncryptedPartsAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MessagePartRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("encryptedParts",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("encryptedParts");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMessagePartRefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEncryptionRequirementAccess().getEncryptedPartsMessagePartRefParserRuleCall_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EncryptionRequirement_EncryptedMessagePartsKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," encryptedParts+=MessagePartRef)*
protected class EncryptionRequirement_Group_5_2 extends GroupToken {
	
	public EncryptionRequirement_Group_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEncryptionRequirementAccess().getGroup_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncryptionRequirement_EncryptedPartsAssignment_5_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class EncryptionRequirement_CommaKeyword_5_2_0 extends KeywordToken  {
	
	public EncryptionRequirement_CommaKeyword_5_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEncryptionRequirementAccess().getCommaKeyword_5_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncryptionRequirement_Group_5_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EncryptionRequirement_EncryptedPartsAssignment_5_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// encryptedParts+=MessagePartRef
protected class EncryptionRequirement_EncryptedPartsAssignment_5_2_1 extends AssignmentToken  {
	
	public EncryptionRequirement_EncryptedPartsAssignment_5_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEncryptionRequirementAccess().getEncryptedPartsAssignment_5_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MessagePartRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("encryptedParts",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("encryptedParts");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMessagePartRefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEncryptionRequirementAccess().getEncryptedPartsMessagePartRefParserRuleCall_5_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EncryptionRequirement_CommaKeyword_5_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



// "}"
protected class EncryptionRequirement_RightCurlyBracketKeyword_6 extends KeywordToken  {
	
	public EncryptionRequirement_RightCurlyBracketKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEncryptionRequirementAccess().getRightCurlyBracketKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncryptionRequirement_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EncryptionRequirement_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new EncryptionRequirement_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new EncryptionRequirement_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}


/************ end Rule EncryptionRequirement ****************/


/************ begin Rule PriorityDeclaration ****************
 *
 * PriorityDeclaration:
 * 
 * 	"priority" name=ID "description" description=STRING;
 *
 **/

// "priority" name=ID "description" description=STRING
protected class PriorityDeclaration_Group extends GroupToken {
	
	public PriorityDeclaration_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPriorityDeclarationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PriorityDeclaration_DescriptionAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPriorityDeclarationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "priority"
protected class PriorityDeclaration_PriorityKeyword_0 extends KeywordToken  {
	
	public PriorityDeclaration_PriorityKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPriorityDeclarationAccess().getPriorityKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class PriorityDeclaration_NameAssignment_1 extends AssignmentToken  {
	
	public PriorityDeclaration_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPriorityDeclarationAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PriorityDeclaration_PriorityKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPriorityDeclarationAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPriorityDeclarationAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "description"
protected class PriorityDeclaration_DescriptionKeyword_2 extends KeywordToken  {
	
	public PriorityDeclaration_DescriptionKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPriorityDeclarationAccess().getDescriptionKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PriorityDeclaration_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// description=STRING
protected class PriorityDeclaration_DescriptionAssignment_3 extends AssignmentToken  {
	
	public PriorityDeclaration_DescriptionAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPriorityDeclarationAccess().getDescriptionAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PriorityDeclaration_DescriptionKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("description",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("description");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPriorityDeclarationAccess().getDescriptionSTRINGTerminalRuleCall_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPriorityDeclarationAccess().getDescriptionSTRINGTerminalRuleCall_3_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule PriorityDeclaration ****************/


/************ begin Rule Escalation ****************
 *
 * Escalation:
 * 
 * 	"escalation" "{" ("cause" cause=STRING)? "escalate-to" "{" escalationTargets+=[basedsl::User|QualifiedName]+ "}"
 * 
 * 	("procedure" procedure=STRING)? "}";
 *
 **/

// "escalation" "{" ("cause" cause=STRING)? "escalate-to" "{" escalationTargets+=[basedsl::User|QualifiedName]+ "}"
// 
// ("procedure" procedure=STRING)? "}"
protected class Escalation_Group extends GroupToken {
	
	public Escalation_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEscalationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Escalation_RightCurlyBracketKeyword_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEscalationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "escalation"
protected class Escalation_EscalationKeyword_0 extends KeywordToken  {
	
	public Escalation_EscalationKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEscalationAccess().getEscalationKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "{"
protected class Escalation_LeftCurlyBracketKeyword_1 extends KeywordToken  {
	
	public Escalation_LeftCurlyBracketKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEscalationAccess().getLeftCurlyBracketKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Escalation_EscalationKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("cause" cause=STRING)?
protected class Escalation_Group_2 extends GroupToken {
	
	public Escalation_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEscalationAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Escalation_CauseAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "cause"
protected class Escalation_CauseKeyword_2_0 extends KeywordToken  {
	
	public Escalation_CauseKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEscalationAccess().getCauseKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Escalation_LeftCurlyBracketKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// cause=STRING
protected class Escalation_CauseAssignment_2_1 extends AssignmentToken  {
	
	public Escalation_CauseAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEscalationAccess().getCauseAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Escalation_CauseKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("cause",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("cause");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getEscalationAccess().getCauseSTRINGTerminalRuleCall_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getEscalationAccess().getCauseSTRINGTerminalRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}


// "escalate-to"
protected class Escalation_EscalateToKeyword_3 extends KeywordToken  {
	
	public Escalation_EscalateToKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEscalationAccess().getEscalateToKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Escalation_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Escalation_LeftCurlyBracketKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "{"
protected class Escalation_LeftCurlyBracketKeyword_4 extends KeywordToken  {
	
	public Escalation_LeftCurlyBracketKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEscalationAccess().getLeftCurlyBracketKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Escalation_EscalateToKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// escalationTargets+=[basedsl::User|QualifiedName]+
protected class Escalation_EscalationTargetsAssignment_5 extends AssignmentToken  {
	
	public Escalation_EscalationTargetsAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEscalationAccess().getEscalationTargetsAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Escalation_EscalationTargetsAssignment_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Escalation_LeftCurlyBracketKeyword_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("escalationTargets",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("escalationTargets");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEscalationAccess().getEscalationTargetsUserCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getEscalationAccess().getEscalationTargetsUserCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "}"
protected class Escalation_RightCurlyBracketKeyword_6 extends KeywordToken  {
	
	public Escalation_RightCurlyBracketKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEscalationAccess().getRightCurlyBracketKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Escalation_EscalationTargetsAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("procedure" procedure=STRING)?
protected class Escalation_Group_7 extends GroupToken {
	
	public Escalation_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEscalationAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Escalation_ProcedureAssignment_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "procedure"
protected class Escalation_ProcedureKeyword_7_0 extends KeywordToken  {
	
	public Escalation_ProcedureKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEscalationAccess().getProcedureKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Escalation_RightCurlyBracketKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// procedure=STRING
protected class Escalation_ProcedureAssignment_7_1 extends AssignmentToken  {
	
	public Escalation_ProcedureAssignment_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEscalationAccess().getProcedureAssignment_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Escalation_ProcedureKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("procedure",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("procedure");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getEscalationAccess().getProcedureSTRINGTerminalRuleCall_7_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getEscalationAccess().getProcedureSTRINGTerminalRuleCall_7_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class Escalation_RightCurlyBracketKeyword_8 extends KeywordToken  {
	
	public Escalation_RightCurlyBracketKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEscalationAccess().getRightCurlyBracketKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Escalation_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Escalation_RightCurlyBracketKeyword_6(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule Escalation ****************/


/************ begin Rule Party ****************
 *
 * Party:
 * 
 * 	CustomerParty | ProviderParty | ThirdParty;
 *
 **/

// CustomerParty | ProviderParty | ThirdParty
protected class Party_Alternatives extends AlternativesToken {

	public Party_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getPartyAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Party_CustomerPartyParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Party_ProviderPartyParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Party_ThirdPartyParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCustomerPartyRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getProviderPartyRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getThirdPartyRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// CustomerParty
protected class Party_CustomerPartyParserRuleCall_0 extends RuleCallToken {
	
	public Party_CustomerPartyParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPartyAccess().getCustomerPartyParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CustomerParty_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCustomerPartyRule().getType().getClassifier())
			return null;
		if(checkForRecursion(CustomerParty_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ProviderParty
protected class Party_ProviderPartyParserRuleCall_1 extends RuleCallToken {
	
	public Party_ProviderPartyParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPartyAccess().getProviderPartyParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProviderParty_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getProviderPartyRule().getType().getClassifier())
			return null;
		if(checkForRecursion(ProviderParty_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ThirdParty
protected class Party_ThirdPartyParserRuleCall_2 extends RuleCallToken {
	
	public Party_ThirdPartyParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPartyAccess().getThirdPartyParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThirdParty_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getThirdPartyRule().getType().getClassifier())
			return null;
		if(checkForRecursion(ThirdParty_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule Party ****************/


/************ begin Rule CustomerParty ****************
 *
 * CustomerParty:
 * 
 * 	"customer-party" name=QualifiedName "{" representatives+=Representative+ responsibilities+=Responsibility+ "}";
 *
 **/

// "customer-party" name=QualifiedName "{" representatives+=Representative+ responsibilities+=Responsibility+ "}"
protected class CustomerParty_Group extends GroupToken {
	
	public CustomerParty_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCustomerPartyAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CustomerParty_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCustomerPartyRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "customer-party"
protected class CustomerParty_CustomerPartyKeyword_0 extends KeywordToken  {
	
	public CustomerParty_CustomerPartyKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCustomerPartyAccess().getCustomerPartyKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=QualifiedName
protected class CustomerParty_NameAssignment_1 extends AssignmentToken  {
	
	public CustomerParty_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCustomerPartyAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CustomerParty_CustomerPartyKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCustomerPartyAccess().getNameQualifiedNameParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getCustomerPartyAccess().getNameQualifiedNameParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class CustomerParty_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public CustomerParty_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCustomerPartyAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CustomerParty_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// representatives+=Representative+
protected class CustomerParty_RepresentativesAssignment_3 extends AssignmentToken  {
	
	public CustomerParty_RepresentativesAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCustomerPartyAccess().getRepresentativesAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Representative_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("representatives",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("representatives");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRepresentativeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getCustomerPartyAccess().getRepresentativesRepresentativeParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new CustomerParty_RepresentativesAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new CustomerParty_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// responsibilities+=Responsibility+
protected class CustomerParty_ResponsibilitiesAssignment_4 extends AssignmentToken  {
	
	public CustomerParty_ResponsibilitiesAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCustomerPartyAccess().getResponsibilitiesAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Responsibility_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("responsibilities",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("responsibilities");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getResponsibilityRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getCustomerPartyAccess().getResponsibilitiesResponsibilityParserRuleCall_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new CustomerParty_ResponsibilitiesAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new CustomerParty_RepresentativesAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class CustomerParty_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public CustomerParty_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCustomerPartyAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CustomerParty_ResponsibilitiesAssignment_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule CustomerParty ****************/


/************ begin Rule ProviderParty ****************
 *
 * ProviderParty:
 * 
 * 	"provider-party" name=QualifiedName "{" representatives+=Representative+ responsibilities+=Responsibility+ "}";
 *
 **/

// "provider-party" name=QualifiedName "{" representatives+=Representative+ responsibilities+=Responsibility+ "}"
protected class ProviderParty_Group extends GroupToken {
	
	public ProviderParty_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProviderPartyAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProviderParty_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getProviderPartyRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "provider-party"
protected class ProviderParty_ProviderPartyKeyword_0 extends KeywordToken  {
	
	public ProviderParty_ProviderPartyKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProviderPartyAccess().getProviderPartyKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=QualifiedName
protected class ProviderParty_NameAssignment_1 extends AssignmentToken  {
	
	public ProviderParty_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProviderPartyAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProviderParty_ProviderPartyKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getProviderPartyAccess().getNameQualifiedNameParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getProviderPartyAccess().getNameQualifiedNameParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class ProviderParty_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public ProviderParty_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProviderPartyAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProviderParty_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// representatives+=Representative+
protected class ProviderParty_RepresentativesAssignment_3 extends AssignmentToken  {
	
	public ProviderParty_RepresentativesAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProviderPartyAccess().getRepresentativesAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Representative_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("representatives",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("representatives");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRepresentativeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProviderPartyAccess().getRepresentativesRepresentativeParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProviderParty_RepresentativesAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProviderParty_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// responsibilities+=Responsibility+
protected class ProviderParty_ResponsibilitiesAssignment_4 extends AssignmentToken  {
	
	public ProviderParty_ResponsibilitiesAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProviderPartyAccess().getResponsibilitiesAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Responsibility_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("responsibilities",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("responsibilities");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getResponsibilityRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProviderPartyAccess().getResponsibilitiesResponsibilityParserRuleCall_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ProviderParty_ResponsibilitiesAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ProviderParty_RepresentativesAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class ProviderParty_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public ProviderParty_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProviderPartyAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProviderParty_ResponsibilitiesAssignment_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule ProviderParty ****************/


/************ begin Rule ThirdParty ****************
 *
 * ThirdParty:
 * 
 * 	"third-party" name=QualifiedName "{" "participation-role" role=STRING representatives+=Representative+
 * 
 * 	responsibilities+=Responsibility+ "}";
 *
 **/

// "third-party" name=QualifiedName "{" "participation-role" role=STRING representatives+=Representative+
// 
// responsibilities+=Responsibility+ "}"
protected class ThirdParty_Group extends GroupToken {
	
	public ThirdParty_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getThirdPartyAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThirdParty_RightCurlyBracketKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getThirdPartyRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "third-party"
protected class ThirdParty_ThirdPartyKeyword_0 extends KeywordToken  {
	
	public ThirdParty_ThirdPartyKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThirdPartyAccess().getThirdPartyKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=QualifiedName
protected class ThirdParty_NameAssignment_1 extends AssignmentToken  {
	
	public ThirdParty_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThirdPartyAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThirdParty_ThirdPartyKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getThirdPartyAccess().getNameQualifiedNameParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getThirdPartyAccess().getNameQualifiedNameParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class ThirdParty_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public ThirdParty_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThirdPartyAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThirdParty_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "participation-role"
protected class ThirdParty_ParticipationRoleKeyword_3 extends KeywordToken  {
	
	public ThirdParty_ParticipationRoleKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThirdPartyAccess().getParticipationRoleKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThirdParty_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// role=STRING
protected class ThirdParty_RoleAssignment_4 extends AssignmentToken  {
	
	public ThirdParty_RoleAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThirdPartyAccess().getRoleAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThirdParty_ParticipationRoleKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("role",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("role");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getThirdPartyAccess().getRoleSTRINGTerminalRuleCall_4_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getThirdPartyAccess().getRoleSTRINGTerminalRuleCall_4_0();
			return obj;
		}
		return null;
	}

}

// representatives+=Representative+
protected class ThirdParty_RepresentativesAssignment_5 extends AssignmentToken  {
	
	public ThirdParty_RepresentativesAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThirdPartyAccess().getRepresentativesAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Representative_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("representatives",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("representatives");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRepresentativeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThirdPartyAccess().getRepresentativesRepresentativeParserRuleCall_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThirdParty_RepresentativesAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThirdParty_RoleAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// responsibilities+=Responsibility+
protected class ThirdParty_ResponsibilitiesAssignment_6 extends AssignmentToken  {
	
	public ThirdParty_ResponsibilitiesAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getThirdPartyAccess().getResponsibilitiesAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Responsibility_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("responsibilities",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("responsibilities");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getResponsibilityRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getThirdPartyAccess().getResponsibilitiesResponsibilityParserRuleCall_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ThirdParty_ResponsibilitiesAssignment_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ThirdParty_RepresentativesAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class ThirdParty_RightCurlyBracketKeyword_7 extends KeywordToken  {
	
	public ThirdParty_RightCurlyBracketKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getThirdPartyAccess().getRightCurlyBracketKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ThirdParty_ResponsibilitiesAssignment_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule ThirdParty ****************/


/************ begin Rule Representative ****************
 *
 * Representative:
 * 
 * 	UserRef | InlineRepresentative;
 *
 **/

// UserRef | InlineRepresentative
protected class Representative_Alternatives extends AlternativesToken {

	public Representative_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getRepresentativeAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Representative_UserRefParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Representative_InlineRepresentativeParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getInlineRepresentativeAccess().getInlineRepresentativeAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getUserRefRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// UserRef
protected class Representative_UserRefParserRuleCall_0 extends RuleCallToken {
	
	public Representative_UserRefParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getRepresentativeAccess().getUserRefParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UserRef_RepresentativeAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getUserRefRule().getType().getClassifier())
			return null;
		if(checkForRecursion(UserRef_RepresentativeAssignment.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// InlineRepresentative
protected class Representative_InlineRepresentativeParserRuleCall_1 extends RuleCallToken {
	
	public Representative_InlineRepresentativeParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getRepresentativeAccess().getInlineRepresentativeParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineRepresentative_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getInlineRepresentativeAccess().getInlineRepresentativeAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(InlineRepresentative_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule Representative ****************/


/************ begin Rule UserRef ****************
 *
 * UserRef:
 * 
 * 	representative=[basedsl::User|QualifiedName];
 *
 **/

// representative=[basedsl::User|QualifiedName]
protected class UserRef_RepresentativeAssignment extends AssignmentToken  {
	
	public UserRef_RepresentativeAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUserRefAccess().getRepresentativeAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getUserRefRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("representative",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("representative");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getUserRefAccess().getRepresentativeUserCrossReference_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getUserRefAccess().getRepresentativeUserCrossReference_0(); 
				return obj;
			}
		}
		return null;
	}

}

/************ end Rule UserRef ****************/


/************ begin Rule InlineRepresentative ****************
 *
 * InlineRepresentative:
 * 
 * 	{InlineRepresentative} "representative" "{" ("first-name" firstname=STRING)? ("last-name" lastname=STRING)?
 * 
 * 	("org-unit" orgUnit=STRING)? ("email" email=STRING)? ("phone" phone=STRING)? "}";
 *
 **/

// {InlineRepresentative} "representative" "{" ("first-name" firstname=STRING)? ("last-name" lastname=STRING)? ("org-unit"
// 
// orgUnit=STRING)? ("email" email=STRING)? ("phone" phone=STRING)? "}"
protected class InlineRepresentative_Group extends GroupToken {
	
	public InlineRepresentative_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getInlineRepresentativeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineRepresentative_RightCurlyBracketKeyword_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getInlineRepresentativeAccess().getInlineRepresentativeAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {InlineRepresentative}
protected class InlineRepresentative_InlineRepresentativeAction_0 extends ActionToken  {

	public InlineRepresentative_InlineRepresentativeAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getInlineRepresentativeAccess().getInlineRepresentativeAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "representative"
protected class InlineRepresentative_RepresentativeKeyword_1 extends KeywordToken  {
	
	public InlineRepresentative_RepresentativeKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInlineRepresentativeAccess().getRepresentativeKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineRepresentative_InlineRepresentativeAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class InlineRepresentative_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public InlineRepresentative_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInlineRepresentativeAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineRepresentative_RepresentativeKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("first-name" firstname=STRING)?
protected class InlineRepresentative_Group_3 extends GroupToken {
	
	public InlineRepresentative_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getInlineRepresentativeAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineRepresentative_FirstnameAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "first-name"
protected class InlineRepresentative_FirstNameKeyword_3_0 extends KeywordToken  {
	
	public InlineRepresentative_FirstNameKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInlineRepresentativeAccess().getFirstNameKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineRepresentative_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// firstname=STRING
protected class InlineRepresentative_FirstnameAssignment_3_1 extends AssignmentToken  {
	
	public InlineRepresentative_FirstnameAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInlineRepresentativeAccess().getFirstnameAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineRepresentative_FirstNameKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("firstname",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("firstname");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getInlineRepresentativeAccess().getFirstnameSTRINGTerminalRuleCall_3_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getInlineRepresentativeAccess().getFirstnameSTRINGTerminalRuleCall_3_1_0();
			return obj;
		}
		return null;
	}

}


// ("last-name" lastname=STRING)?
protected class InlineRepresentative_Group_4 extends GroupToken {
	
	public InlineRepresentative_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getInlineRepresentativeAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineRepresentative_LastnameAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "last-name"
protected class InlineRepresentative_LastNameKeyword_4_0 extends KeywordToken  {
	
	public InlineRepresentative_LastNameKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInlineRepresentativeAccess().getLastNameKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineRepresentative_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new InlineRepresentative_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// lastname=STRING
protected class InlineRepresentative_LastnameAssignment_4_1 extends AssignmentToken  {
	
	public InlineRepresentative_LastnameAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInlineRepresentativeAccess().getLastnameAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineRepresentative_LastNameKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lastname",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lastname");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getInlineRepresentativeAccess().getLastnameSTRINGTerminalRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getInlineRepresentativeAccess().getLastnameSTRINGTerminalRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// ("org-unit" orgUnit=STRING)?
protected class InlineRepresentative_Group_5 extends GroupToken {
	
	public InlineRepresentative_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getInlineRepresentativeAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineRepresentative_OrgUnitAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "org-unit"
protected class InlineRepresentative_OrgUnitKeyword_5_0 extends KeywordToken  {
	
	public InlineRepresentative_OrgUnitKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInlineRepresentativeAccess().getOrgUnitKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineRepresentative_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new InlineRepresentative_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new InlineRepresentative_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// orgUnit=STRING
protected class InlineRepresentative_OrgUnitAssignment_5_1 extends AssignmentToken  {
	
	public InlineRepresentative_OrgUnitAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInlineRepresentativeAccess().getOrgUnitAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineRepresentative_OrgUnitKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("orgUnit",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("orgUnit");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getInlineRepresentativeAccess().getOrgUnitSTRINGTerminalRuleCall_5_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getInlineRepresentativeAccess().getOrgUnitSTRINGTerminalRuleCall_5_1_0();
			return obj;
		}
		return null;
	}

}


// ("email" email=STRING)?
protected class InlineRepresentative_Group_6 extends GroupToken {
	
	public InlineRepresentative_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getInlineRepresentativeAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineRepresentative_EmailAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "email"
protected class InlineRepresentative_EmailKeyword_6_0 extends KeywordToken  {
	
	public InlineRepresentative_EmailKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInlineRepresentativeAccess().getEmailKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineRepresentative_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new InlineRepresentative_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new InlineRepresentative_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new InlineRepresentative_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// email=STRING
protected class InlineRepresentative_EmailAssignment_6_1 extends AssignmentToken  {
	
	public InlineRepresentative_EmailAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInlineRepresentativeAccess().getEmailAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineRepresentative_EmailKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("email",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("email");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getInlineRepresentativeAccess().getEmailSTRINGTerminalRuleCall_6_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getInlineRepresentativeAccess().getEmailSTRINGTerminalRuleCall_6_1_0();
			return obj;
		}
		return null;
	}

}


// ("phone" phone=STRING)?
protected class InlineRepresentative_Group_7 extends GroupToken {
	
	public InlineRepresentative_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getInlineRepresentativeAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineRepresentative_PhoneAssignment_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "phone"
protected class InlineRepresentative_PhoneKeyword_7_0 extends KeywordToken  {
	
	public InlineRepresentative_PhoneKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInlineRepresentativeAccess().getPhoneKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineRepresentative_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new InlineRepresentative_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new InlineRepresentative_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new InlineRepresentative_Group_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new InlineRepresentative_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// phone=STRING
protected class InlineRepresentative_PhoneAssignment_7_1 extends AssignmentToken  {
	
	public InlineRepresentative_PhoneAssignment_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInlineRepresentativeAccess().getPhoneAssignment_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineRepresentative_PhoneKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("phone",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("phone");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getInlineRepresentativeAccess().getPhoneSTRINGTerminalRuleCall_7_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getInlineRepresentativeAccess().getPhoneSTRINGTerminalRuleCall_7_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class InlineRepresentative_RightCurlyBracketKeyword_8 extends KeywordToken  {
	
	public InlineRepresentative_RightCurlyBracketKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInlineRepresentativeAccess().getRightCurlyBracketKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineRepresentative_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new InlineRepresentative_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new InlineRepresentative_Group_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new InlineRepresentative_Group_4(lastRuleCallOrigin, this, 3, inst);
			case 4: return new InlineRepresentative_Group_3(lastRuleCallOrigin, this, 4, inst);
			case 5: return new InlineRepresentative_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}


/************ end Rule InlineRepresentative ****************/


/************ begin Rule Responsibility ****************
 *
 * Responsibility:
 * 
 * 	"responsibility" description=STRING;
 *
 **/

// "responsibility" description=STRING
protected class Responsibility_Group extends GroupToken {
	
	public Responsibility_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getResponsibilityAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Responsibility_DescriptionAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getResponsibilityRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "responsibility"
protected class Responsibility_ResponsibilityKeyword_0 extends KeywordToken  {
	
	public Responsibility_ResponsibilityKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getResponsibilityAccess().getResponsibilityKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// description=STRING
protected class Responsibility_DescriptionAssignment_1 extends AssignmentToken  {
	
	public Responsibility_DescriptionAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getResponsibilityAccess().getDescriptionAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Responsibility_ResponsibilityKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("description",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("description");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getResponsibilityAccess().getDescriptionSTRINGTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getResponsibilityAccess().getDescriptionSTRINGTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Responsibility ****************/


/************ begin Rule Report ****************
 *
 * Report:
 * 
 * 	"report" name=ID "{" "report-to" reportTo=[basedsl::User|QualifiedName] "contents" content=STRING "}";
 *
 **/

// "report" name=ID "{" "report-to" reportTo=[basedsl::User|QualifiedName] "contents" content=STRING "}"
protected class Report_Group extends GroupToken {
	
	public Report_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getReportAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Report_RightCurlyBracketKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getReportRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "report"
protected class Report_ReportKeyword_0 extends KeywordToken  {
	
	public Report_ReportKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReportAccess().getReportKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class Report_NameAssignment_1 extends AssignmentToken  {
	
	public Report_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getReportAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Report_ReportKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getReportAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getReportAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class Report_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public Report_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReportAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Report_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "report-to"
protected class Report_ReportToKeyword_3 extends KeywordToken  {
	
	public Report_ReportToKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReportAccess().getReportToKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Report_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// reportTo=[basedsl::User|QualifiedName]
protected class Report_ReportToAssignment_4 extends AssignmentToken  {
	
	public Report_ReportToAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getReportAccess().getReportToAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Report_ReportToKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("reportTo",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("reportTo");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getReportAccess().getReportToUserCrossReference_4_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getReportAccess().getReportToUserCrossReference_4_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "contents"
protected class Report_ContentsKeyword_5 extends KeywordToken  {
	
	public Report_ContentsKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReportAccess().getContentsKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Report_ReportToAssignment_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// content=STRING
protected class Report_ContentAssignment_6 extends AssignmentToken  {
	
	public Report_ContentAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getReportAccess().getContentAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Report_ContentsKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("content",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("content");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getReportAccess().getContentSTRINGTerminalRuleCall_6_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getReportAccess().getContentSTRINGTerminalRuleCall_6_0();
			return obj;
		}
		return null;
	}

}

// "}"
protected class Report_RightCurlyBracketKeyword_7 extends KeywordToken  {
	
	public Report_RightCurlyBracketKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReportAccess().getRightCurlyBracketKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Report_ContentAssignment_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Report ****************/


/************ begin Rule Import ****************
 *
 * / * Java like imports * / Import:
 * 
 * 	"import" importedNamespace=QualifiedNameWithWildCard;
 *
 **/

// "import" importedNamespace=QualifiedNameWithWildCard
protected class Import_Group extends GroupToken {
	
	public Import_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImportAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Import_ImportedNamespaceAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getImportRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "import"
protected class Import_ImportKeyword_0 extends KeywordToken  {
	
	public Import_ImportKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImportAccess().getImportKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// importedNamespace=QualifiedNameWithWildCard
protected class Import_ImportedNamespaceAssignment_1 extends AssignmentToken  {
	
	public Import_ImportedNamespaceAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImportAccess().getImportedNamespaceAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Import_ImportKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("importedNamespace",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("importedNamespace");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Import ****************/



/************ begin Rule VersionedName ****************
 *
 * VersionedName:
 * 
 * 	{VersionedName} QualifiedName | ID WS* version=VersionId;
 *
 **/

// {VersionedName} QualifiedName | ID WS* version=VersionId
protected class VersionedName_Alternatives extends AlternativesToken {

	public VersionedName_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVersionedNameAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VersionedName_Group_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VersionedName_Group_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getVersionedNameRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {VersionedName} QualifiedName
protected class VersionedName_Group_0 extends GroupToken {
	
	public VersionedName_Group_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVersionedNameAccess().getGroup_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VersionedName_QualifiedNameParserRuleCall_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// {VersionedName}
protected class VersionedName_VersionedNameAction_0_0 extends ActionToken  {

	public VersionedName_VersionedNameAction_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getVersionedNameAccess().getVersionedNameAction_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// QualifiedName
protected class VersionedName_QualifiedNameParserRuleCall_0_1 extends UnassignedTextToken {

	public VersionedName_QualifiedNameParserRuleCall_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getVersionedNameAccess().getQualifiedNameParserRuleCall_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VersionedName_VersionedNameAction_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ID WS* version=VersionId
protected class VersionedName_Group_1 extends GroupToken {
	
	public VersionedName_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVersionedNameAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VersionedName_VersionAssignment_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ID
protected class VersionedName_IDTerminalRuleCall_1_0 extends UnassignedTextToken {

	public VersionedName_IDTerminalRuleCall_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getVersionedNameAccess().getIDTerminalRuleCall_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// version=VersionId
protected class VersionedName_VersionAssignment_1_2 extends AssignmentToken  {
	
	public VersionedName_VersionAssignment_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVersionedNameAccess().getVersionAssignment_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VersionedName_IDTerminalRuleCall_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("version",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("version");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getVersionedNameAccess().getVersionVersionIdParserRuleCall_1_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getVersionedNameAccess().getVersionVersionIdParserRuleCall_1_2_0();
			return obj;
		}
		return null;
	}

}



/************ end Rule VersionedName ****************/


/************ begin Rule Version ****************
 *
 * / *
 *  * A version qualifier for versioned assets
 *  * / Version:
 * 
 * 	"version" version=VersionId;
 *
 **/

// "version" version=VersionId
protected class Version_Group extends GroupToken {
	
	public Version_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVersionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Version_VersionAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getVersionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "version"
protected class Version_VersionKeyword_0 extends KeywordToken  {
	
	public Version_VersionKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVersionAccess().getVersionKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// version=VersionId
protected class Version_VersionAssignment_1 extends AssignmentToken  {
	
	public Version_VersionAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVersionAccess().getVersionAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Version_VersionKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("version",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("version");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getVersionAccess().getVersionVersionIdParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getVersionAccess().getVersionVersionIdParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Version ****************/


/************ begin Rule VersionRef ****************
 *
 * / *
 *  * Version constraints applied to referenced assets
 *  * / VersionRef:
 * 
 * 	MinVersionRef | MaxVersionRef | LowerBoundRangeVersionRef | MajorVersionRef | FixedVersionRef;
 *
 **/

// MinVersionRef | MaxVersionRef | LowerBoundRangeVersionRef | MajorVersionRef | FixedVersionRef
protected class VersionRef_Alternatives extends AlternativesToken {

	public VersionRef_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getVersionRefAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VersionRef_MinVersionRefParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VersionRef_MaxVersionRefParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new VersionRef_LowerBoundRangeVersionRefParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new VersionRef_MajorVersionRefParserRuleCall_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new VersionRef_FixedVersionRefParserRuleCall_4(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFixedVersionRefRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLowerBoundRangeVersionRefRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getMajorVersionRefRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getMaxVersionRefRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getMinVersionRefRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// MinVersionRef
protected class VersionRef_MinVersionRefParserRuleCall_0 extends RuleCallToken {
	
	public VersionRef_MinVersionRefParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getVersionRefAccess().getMinVersionRefParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MinVersionRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMinVersionRefRule().getType().getClassifier())
			return null;
		if(checkForRecursion(MinVersionRef_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// MaxVersionRef
protected class VersionRef_MaxVersionRefParserRuleCall_1 extends RuleCallToken {
	
	public VersionRef_MaxVersionRefParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getVersionRefAccess().getMaxVersionRefParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MaxVersionRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMaxVersionRefRule().getType().getClassifier())
			return null;
		if(checkForRecursion(MaxVersionRef_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// LowerBoundRangeVersionRef
protected class VersionRef_LowerBoundRangeVersionRefParserRuleCall_2 extends RuleCallToken {
	
	public VersionRef_LowerBoundRangeVersionRefParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getVersionRefAccess().getLowerBoundRangeVersionRefParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LowerBoundRangeVersionRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLowerBoundRangeVersionRefRule().getType().getClassifier())
			return null;
		if(checkForRecursion(LowerBoundRangeVersionRef_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// MajorVersionRef
protected class VersionRef_MajorVersionRefParserRuleCall_3 extends RuleCallToken {
	
	public VersionRef_MajorVersionRefParserRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getVersionRefAccess().getMajorVersionRefParserRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MajorVersionRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMajorVersionRefRule().getType().getClassifier())
			return null;
		if(checkForRecursion(MajorVersionRef_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// FixedVersionRef
protected class VersionRef_FixedVersionRefParserRuleCall_4 extends RuleCallToken {
	
	public VersionRef_FixedVersionRefParserRuleCall_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getVersionRefAccess().getFixedVersionRefParserRuleCall_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FixedVersionRef_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFixedVersionRefRule().getType().getClassifier())
			return null;
		if(checkForRecursion(FixedVersionRef_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule VersionRef ****************/


/************ begin Rule MinVersionRef ****************
 *
 * / *
 *  * Assets, where the version is lesser than maximal version: asset version >= minVersion
 *  * / MinVersionRef:
 * 
 * 	"minVersion" minVersion=VersionId;
 *
 **/

// "minVersion" minVersion=VersionId
protected class MinVersionRef_Group extends GroupToken {
	
	public MinVersionRef_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMinVersionRefAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MinVersionRef_MinVersionAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMinVersionRefRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "minVersion"
protected class MinVersionRef_MinVersionKeyword_0 extends KeywordToken  {
	
	public MinVersionRef_MinVersionKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMinVersionRefAccess().getMinVersionKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// minVersion=VersionId
protected class MinVersionRef_MinVersionAssignment_1 extends AssignmentToken  {
	
	public MinVersionRef_MinVersionAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMinVersionRefAccess().getMinVersionAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MinVersionRef_MinVersionKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("minVersion",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("minVersion");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMinVersionRefAccess().getMinVersionVersionIdParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getMinVersionRefAccess().getMinVersionVersionIdParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule MinVersionRef ****************/


/************ begin Rule MaxVersionRef ****************
 *
 * / *
 *  * Assets, that match a minimal version: asset version >= minVersion
 *  * / MaxVersionRef:
 * 
 * 	"maxVersion" maxVersion=VersionId;
 *
 **/

// "maxVersion" maxVersion=VersionId
protected class MaxVersionRef_Group extends GroupToken {
	
	public MaxVersionRef_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMaxVersionRefAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MaxVersionRef_MaxVersionAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMaxVersionRefRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "maxVersion"
protected class MaxVersionRef_MaxVersionKeyword_0 extends KeywordToken  {
	
	public MaxVersionRef_MaxVersionKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMaxVersionRefAccess().getMaxVersionKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// maxVersion=VersionId
protected class MaxVersionRef_MaxVersionAssignment_1 extends AssignmentToken  {
	
	public MaxVersionRef_MaxVersionAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMaxVersionRefAccess().getMaxVersionAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MaxVersionRef_MaxVersionKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("maxVersion",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("maxVersion");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMaxVersionRefAccess().getMaxVersionVersionIdParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getMaxVersionRefAccess().getMaxVersionVersionIdParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule MaxVersionRef ****************/


/************ begin Rule LowerBoundRangeVersionRef ****************
 *
 * / *
 *  * Matches version in the half open range [minVersion, maxVersion)
 *  * / LowerBoundRangeVersionRef:
 * 
 * 	("minVersion" ">=") minVersion=VersionId "," ("maxVersion" "<") maxVersion=VersionId;
 *
 **/

// ("minVersion" ">=") minVersion=VersionId "," ("maxVersion" "<") maxVersion=VersionId
protected class LowerBoundRangeVersionRef_Group extends GroupToken {
	
	public LowerBoundRangeVersionRef_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLowerBoundRangeVersionRefAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LowerBoundRangeVersionRef_MaxVersionAssignment_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLowerBoundRangeVersionRefRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "minVersion" ">="
protected class LowerBoundRangeVersionRef_Group_0 extends GroupToken {
	
	public LowerBoundRangeVersionRef_Group_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLowerBoundRangeVersionRefAccess().getGroup_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LowerBoundRangeVersionRef_GreaterThanSignEqualsSignKeyword_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "minVersion"
protected class LowerBoundRangeVersionRef_MinVersionKeyword_0_0 extends KeywordToken  {
	
	public LowerBoundRangeVersionRef_MinVersionKeyword_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLowerBoundRangeVersionRefAccess().getMinVersionKeyword_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// ">="
protected class LowerBoundRangeVersionRef_GreaterThanSignEqualsSignKeyword_0_1 extends KeywordToken  {
	
	public LowerBoundRangeVersionRef_GreaterThanSignEqualsSignKeyword_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLowerBoundRangeVersionRefAccess().getGreaterThanSignEqualsSignKeyword_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LowerBoundRangeVersionRef_MinVersionKeyword_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// minVersion=VersionId
protected class LowerBoundRangeVersionRef_MinVersionAssignment_1 extends AssignmentToken  {
	
	public LowerBoundRangeVersionRef_MinVersionAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLowerBoundRangeVersionRefAccess().getMinVersionAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LowerBoundRangeVersionRef_Group_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("minVersion",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("minVersion");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLowerBoundRangeVersionRefAccess().getMinVersionVersionIdParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getLowerBoundRangeVersionRefAccess().getMinVersionVersionIdParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ","
protected class LowerBoundRangeVersionRef_CommaKeyword_2 extends KeywordToken  {
	
	public LowerBoundRangeVersionRef_CommaKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLowerBoundRangeVersionRefAccess().getCommaKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LowerBoundRangeVersionRef_MinVersionAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "maxVersion" "<"
protected class LowerBoundRangeVersionRef_Group_3 extends GroupToken {
	
	public LowerBoundRangeVersionRef_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLowerBoundRangeVersionRefAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LowerBoundRangeVersionRef_LessThanSignKeyword_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "maxVersion"
protected class LowerBoundRangeVersionRef_MaxVersionKeyword_3_0 extends KeywordToken  {
	
	public LowerBoundRangeVersionRef_MaxVersionKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLowerBoundRangeVersionRefAccess().getMaxVersionKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LowerBoundRangeVersionRef_CommaKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "<"
protected class LowerBoundRangeVersionRef_LessThanSignKeyword_3_1 extends KeywordToken  {
	
	public LowerBoundRangeVersionRef_LessThanSignKeyword_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLowerBoundRangeVersionRefAccess().getLessThanSignKeyword_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LowerBoundRangeVersionRef_MaxVersionKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// maxVersion=VersionId
protected class LowerBoundRangeVersionRef_MaxVersionAssignment_4 extends AssignmentToken  {
	
	public LowerBoundRangeVersionRef_MaxVersionAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLowerBoundRangeVersionRefAccess().getMaxVersionAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LowerBoundRangeVersionRef_Group_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("maxVersion",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("maxVersion");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLowerBoundRangeVersionRefAccess().getMaxVersionVersionIdParserRuleCall_4_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getLowerBoundRangeVersionRefAccess().getMaxVersionVersionIdParserRuleCall_4_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule LowerBoundRangeVersionRef ****************/


/************ begin Rule MajorVersionRef ****************
 *
 * / *
 *  * Constraint matches assets with any version with the same major version, i.e. the first INT until the first '.' is equal
 *  * /
 * 
 * MajorVersionRef:
 * 
 * 	"majorVersion" majorVersion=INT;
 *
 **/

// "majorVersion" majorVersion=INT
protected class MajorVersionRef_Group extends GroupToken {
	
	public MajorVersionRef_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMajorVersionRefAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MajorVersionRef_MajorVersionAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMajorVersionRefRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "majorVersion"
protected class MajorVersionRef_MajorVersionKeyword_0 extends KeywordToken  {
	
	public MajorVersionRef_MajorVersionKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMajorVersionRefAccess().getMajorVersionKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// majorVersion=INT
protected class MajorVersionRef_MajorVersionAssignment_1 extends AssignmentToken  {
	
	public MajorVersionRef_MajorVersionAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMajorVersionRefAccess().getMajorVersionAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MajorVersionRef_MajorVersionKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("majorVersion",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("majorVersion");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMajorVersionRefAccess().getMajorVersionINTTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMajorVersionRefAccess().getMajorVersionINTTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule MajorVersionRef ****************/


/************ begin Rule FixedVersionRef ****************
 *
 * / *
 *  * Constraint that matches an asset version  explicitely
 *  * / FixedVersionRef:
 * 
 * 	"fixedVersion" fixedVersion=VersionId;
 *
 **/

// "fixedVersion" fixedVersion=VersionId
protected class FixedVersionRef_Group extends GroupToken {
	
	public FixedVersionRef_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFixedVersionRefAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FixedVersionRef_FixedVersionAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFixedVersionRefRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "fixedVersion"
protected class FixedVersionRef_FixedVersionKeyword_0 extends KeywordToken  {
	
	public FixedVersionRef_FixedVersionKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFixedVersionRefAccess().getFixedVersionKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// fixedVersion=VersionId
protected class FixedVersionRef_FixedVersionAssignment_1 extends AssignmentToken  {
	
	public FixedVersionRef_FixedVersionAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFixedVersionRefAccess().getFixedVersionAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FixedVersionRef_FixedVersionKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("fixedVersion",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("fixedVersion");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFixedVersionRefAccess().getFixedVersionVersionIdParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getFixedVersionRefAccess().getFixedVersionVersionIdParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule FixedVersionRef ****************/




/************ begin Rule GovernanceDecision ****************
 *
 * / *
 *  * Expresses SOA governance decisions
 *  * voteing until date will be part of the review ballots captured in the side store
 *  * /
 * 
 * GovernanceDecision:
 * 
 * 	"governance-decision" "{" ("subject" subject=STRING) ("decision-result" decisionResult=GovernanceDecisionResult)
 * 
 * 	("specific-result" specificResult=STRING)? ("justification-doc" justificationOrDocURL=STRING)? ("decision-date"
 * 
 * 	approvalDate=STRING)? ("decision-by" approvedBy=STRING)? ("effective-date" effectiveDate=STRING)? "}";
 *
 **/

// "governance-decision" "{" ("subject" subject=STRING) ("decision-result" decisionResult=GovernanceDecisionResult)
// 
// ("specific-result" specificResult=STRING)? ("justification-doc" justificationOrDocURL=STRING)? ("decision-date"
// 
// approvalDate=STRING)? ("decision-by" approvedBy=STRING)? ("effective-date" effectiveDate=STRING)? "}"
protected class GovernanceDecision_Group extends GroupToken {
	
	public GovernanceDecision_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GovernanceDecision_RightCurlyBracketKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getGovernanceDecisionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "governance-decision"
protected class GovernanceDecision_GovernanceDecisionKeyword_0 extends KeywordToken  {
	
	public GovernanceDecision_GovernanceDecisionKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getGovernanceDecisionKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "{"
protected class GovernanceDecision_LeftCurlyBracketKeyword_1 extends KeywordToken  {
	
	public GovernanceDecision_LeftCurlyBracketKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getLeftCurlyBracketKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GovernanceDecision_GovernanceDecisionKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "subject" subject=STRING
protected class GovernanceDecision_Group_2 extends GroupToken {
	
	public GovernanceDecision_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GovernanceDecision_SubjectAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "subject"
protected class GovernanceDecision_SubjectKeyword_2_0 extends KeywordToken  {
	
	public GovernanceDecision_SubjectKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getSubjectKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GovernanceDecision_LeftCurlyBracketKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// subject=STRING
protected class GovernanceDecision_SubjectAssignment_2_1 extends AssignmentToken  {
	
	public GovernanceDecision_SubjectAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getSubjectAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GovernanceDecision_SubjectKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("subject",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("subject");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getGovernanceDecisionAccess().getSubjectSTRINGTerminalRuleCall_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getGovernanceDecisionAccess().getSubjectSTRINGTerminalRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}


// "decision-result" decisionResult=GovernanceDecisionResult
protected class GovernanceDecision_Group_3 extends GroupToken {
	
	public GovernanceDecision_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GovernanceDecision_DecisionResultAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "decision-result"
protected class GovernanceDecision_DecisionResultKeyword_3_0 extends KeywordToken  {
	
	public GovernanceDecision_DecisionResultKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getDecisionResultKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GovernanceDecision_Group_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// decisionResult=GovernanceDecisionResult
protected class GovernanceDecision_DecisionResultAssignment_3_1 extends AssignmentToken  {
	
	public GovernanceDecision_DecisionResultAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getDecisionResultAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GovernanceDecision_DecisionResultKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("decisionResult",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("decisionResult");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getGovernanceDecisionAccess().getDecisionResultGovernanceDecisionResultEnumRuleCall_3_1_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getGovernanceDecisionAccess().getDecisionResultGovernanceDecisionResultEnumRuleCall_3_1_0();
			return obj;
		}
		return null;
	}

}


// ("specific-result" specificResult=STRING)?
protected class GovernanceDecision_Group_4 extends GroupToken {
	
	public GovernanceDecision_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GovernanceDecision_SpecificResultAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "specific-result"
protected class GovernanceDecision_SpecificResultKeyword_4_0 extends KeywordToken  {
	
	public GovernanceDecision_SpecificResultKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getSpecificResultKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GovernanceDecision_Group_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// specificResult=STRING
protected class GovernanceDecision_SpecificResultAssignment_4_1 extends AssignmentToken  {
	
	public GovernanceDecision_SpecificResultAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getSpecificResultAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GovernanceDecision_SpecificResultKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("specificResult",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("specificResult");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getGovernanceDecisionAccess().getSpecificResultSTRINGTerminalRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getGovernanceDecisionAccess().getSpecificResultSTRINGTerminalRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// ("justification-doc" justificationOrDocURL=STRING)?
protected class GovernanceDecision_Group_5 extends GroupToken {
	
	public GovernanceDecision_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GovernanceDecision_JustificationOrDocURLAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "justification-doc"
protected class GovernanceDecision_JustificationDocKeyword_5_0 extends KeywordToken  {
	
	public GovernanceDecision_JustificationDocKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getJustificationDocKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GovernanceDecision_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new GovernanceDecision_Group_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// justificationOrDocURL=STRING
protected class GovernanceDecision_JustificationOrDocURLAssignment_5_1 extends AssignmentToken  {
	
	public GovernanceDecision_JustificationOrDocURLAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getJustificationOrDocURLAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GovernanceDecision_JustificationDocKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("justificationOrDocURL",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("justificationOrDocURL");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getGovernanceDecisionAccess().getJustificationOrDocURLSTRINGTerminalRuleCall_5_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getGovernanceDecisionAccess().getJustificationOrDocURLSTRINGTerminalRuleCall_5_1_0();
			return obj;
		}
		return null;
	}

}


// ("decision-date" approvalDate=STRING)?
protected class GovernanceDecision_Group_6 extends GroupToken {
	
	public GovernanceDecision_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GovernanceDecision_ApprovalDateAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "decision-date"
protected class GovernanceDecision_DecisionDateKeyword_6_0 extends KeywordToken  {
	
	public GovernanceDecision_DecisionDateKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getDecisionDateKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GovernanceDecision_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new GovernanceDecision_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new GovernanceDecision_Group_3(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// approvalDate=STRING
protected class GovernanceDecision_ApprovalDateAssignment_6_1 extends AssignmentToken  {
	
	public GovernanceDecision_ApprovalDateAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getApprovalDateAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GovernanceDecision_DecisionDateKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("approvalDate",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("approvalDate");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getGovernanceDecisionAccess().getApprovalDateSTRINGTerminalRuleCall_6_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getGovernanceDecisionAccess().getApprovalDateSTRINGTerminalRuleCall_6_1_0();
			return obj;
		}
		return null;
	}

}


// ("decision-by" approvedBy=STRING)?
protected class GovernanceDecision_Group_7 extends GroupToken {
	
	public GovernanceDecision_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GovernanceDecision_ApprovedByAssignment_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "decision-by"
protected class GovernanceDecision_DecisionByKeyword_7_0 extends KeywordToken  {
	
	public GovernanceDecision_DecisionByKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getDecisionByKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GovernanceDecision_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new GovernanceDecision_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new GovernanceDecision_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new GovernanceDecision_Group_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// approvedBy=STRING
protected class GovernanceDecision_ApprovedByAssignment_7_1 extends AssignmentToken  {
	
	public GovernanceDecision_ApprovedByAssignment_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getApprovedByAssignment_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GovernanceDecision_DecisionByKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("approvedBy",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("approvedBy");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getGovernanceDecisionAccess().getApprovedBySTRINGTerminalRuleCall_7_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getGovernanceDecisionAccess().getApprovedBySTRINGTerminalRuleCall_7_1_0();
			return obj;
		}
		return null;
	}

}


// ("effective-date" effectiveDate=STRING)?
protected class GovernanceDecision_Group_8 extends GroupToken {
	
	public GovernanceDecision_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GovernanceDecision_EffectiveDateAssignment_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "effective-date"
protected class GovernanceDecision_EffectiveDateKeyword_8_0 extends KeywordToken  {
	
	public GovernanceDecision_EffectiveDateKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getEffectiveDateKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GovernanceDecision_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new GovernanceDecision_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new GovernanceDecision_Group_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new GovernanceDecision_Group_4(lastRuleCallOrigin, this, 3, inst);
			case 4: return new GovernanceDecision_Group_3(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// effectiveDate=STRING
protected class GovernanceDecision_EffectiveDateAssignment_8_1 extends AssignmentToken  {
	
	public GovernanceDecision_EffectiveDateAssignment_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getEffectiveDateAssignment_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GovernanceDecision_EffectiveDateKeyword_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("effectiveDate",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("effectiveDate");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getGovernanceDecisionAccess().getEffectiveDateSTRINGTerminalRuleCall_8_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getGovernanceDecisionAccess().getEffectiveDateSTRINGTerminalRuleCall_8_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class GovernanceDecision_RightCurlyBracketKeyword_9 extends KeywordToken  {
	
	public GovernanceDecision_RightCurlyBracketKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGovernanceDecisionAccess().getRightCurlyBracketKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GovernanceDecision_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new GovernanceDecision_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new GovernanceDecision_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new GovernanceDecision_Group_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new GovernanceDecision_Group_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new GovernanceDecision_Group_3(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}


/************ end Rule GovernanceDecision ****************/


/************ begin Rule AbstractType ****************
 *
 * AbstractType:
 * 
 * 	{AbstractType} name=ID;
 *
 **/

// {AbstractType} name=ID
protected class AbstractType_Group extends GroupToken {
	
	public AbstractType_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAbstractTypeAccess().getAbstractTypeAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {AbstractType}
protected class AbstractType_AbstractTypeAction_0 extends ActionToken  {

	public AbstractType_AbstractTypeAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getAbstractTypeAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// name=ID
protected class AbstractType_NameAssignment_1 extends AssignmentToken  {
	
	public AbstractType_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAbstractTypeAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractType_AbstractTypeAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAbstractTypeAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAbstractTypeAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule AbstractType ****************/


/************ begin Rule AdditionalInformation ****************
 *
 * AdditionalInformation:
 * 
 * 	"additional-information" "{" infoItems+=InfoItem+ "}";
 *
 **/

// "additional-information" "{" infoItems+=InfoItem+ "}"
protected class AdditionalInformation_Group extends GroupToken {
	
	public AdditionalInformation_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAdditionalInformationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdditionalInformation_RightCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAdditionalInformationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "additional-information"
protected class AdditionalInformation_AdditionalInformationKeyword_0 extends KeywordToken  {
	
	public AdditionalInformation_AdditionalInformationKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAdditionalInformationAccess().getAdditionalInformationKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "{"
protected class AdditionalInformation_LeftCurlyBracketKeyword_1 extends KeywordToken  {
	
	public AdditionalInformation_LeftCurlyBracketKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAdditionalInformationAccess().getLeftCurlyBracketKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdditionalInformation_AdditionalInformationKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// infoItems+=InfoItem+
protected class AdditionalInformation_InfoItemsAssignment_2 extends AssignmentToken  {
	
	public AdditionalInformation_InfoItemsAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAdditionalInformationAccess().getInfoItemsAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InfoItem_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("infoItems",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("infoItems");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getInfoItemRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAdditionalInformationAccess().getInfoItemsInfoItemParserRuleCall_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AdditionalInformation_InfoItemsAssignment_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new AdditionalInformation_LeftCurlyBracketKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class AdditionalInformation_RightCurlyBracketKeyword_3 extends KeywordToken  {
	
	public AdditionalInformation_RightCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAdditionalInformationAccess().getRightCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdditionalInformation_InfoItemsAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule AdditionalInformation ****************/


/************ begin Rule InfoItem ****************
 *
 * InfoItem:
 * 
 * 	"location" documentLocation=STRING ("reference" reference=STRING)?;
 *
 **/

// "location" documentLocation=STRING ("reference" reference=STRING)?
protected class InfoItem_Group extends GroupToken {
	
	public InfoItem_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getInfoItemAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InfoItem_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new InfoItem_DocumentLocationAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getInfoItemRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "location"
protected class InfoItem_LocationKeyword_0 extends KeywordToken  {
	
	public InfoItem_LocationKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInfoItemAccess().getLocationKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// documentLocation=STRING
protected class InfoItem_DocumentLocationAssignment_1 extends AssignmentToken  {
	
	public InfoItem_DocumentLocationAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInfoItemAccess().getDocumentLocationAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InfoItem_LocationKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("documentLocation",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("documentLocation");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getInfoItemAccess().getDocumentLocationSTRINGTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getInfoItemAccess().getDocumentLocationSTRINGTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ("reference" reference=STRING)?
protected class InfoItem_Group_2 extends GroupToken {
	
	public InfoItem_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getInfoItemAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InfoItem_ReferenceAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "reference"
protected class InfoItem_ReferenceKeyword_2_0 extends KeywordToken  {
	
	public InfoItem_ReferenceKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInfoItemAccess().getReferenceKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InfoItem_DocumentLocationAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// reference=STRING
protected class InfoItem_ReferenceAssignment_2_1 extends AssignmentToken  {
	
	public InfoItem_ReferenceAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInfoItemAccess().getReferenceAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InfoItem_ReferenceKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("reference",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("reference");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getInfoItemAccess().getReferenceSTRINGTerminalRuleCall_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getInfoItemAccess().getReferenceSTRINGTerminalRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}



/************ end Rule InfoItem ****************/


/************ begin Rule User ****************
 *
 * User:
 * 
 * 	name=QualifiedName firstname=STRING? lastname=STRING? org=STRING? orgUnit=STRING? email=STRING? phone=STRING?
 * 
 * 	roles+=RoleRef*;
 *
 **/

// name=QualifiedName firstname=STRING? lastname=STRING? org=STRING? orgUnit=STRING? email=STRING? phone=STRING?
// 
// roles+=RoleRef*
protected class User_Group extends GroupToken {
	
	public User_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getUserAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new User_RolesAssignment_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new User_PhoneAssignment_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new User_EmailAssignment_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new User_OrgUnitAssignment_4(lastRuleCallOrigin, this, 3, inst);
			case 4: return new User_OrgAssignment_3(lastRuleCallOrigin, this, 4, inst);
			case 5: return new User_LastnameAssignment_2(lastRuleCallOrigin, this, 5, inst);
			case 6: return new User_FirstnameAssignment_1(lastRuleCallOrigin, this, 6, inst);
			case 7: return new User_NameAssignment_0(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getUserRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=QualifiedName
protected class User_NameAssignment_0 extends AssignmentToken  {
	
	public User_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUserAccess().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getUserAccess().getNameQualifiedNameParserRuleCall_0_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getUserAccess().getNameQualifiedNameParserRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// firstname=STRING?
protected class User_FirstnameAssignment_1 extends AssignmentToken  {
	
	public User_FirstnameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUserAccess().getFirstnameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new User_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("firstname",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("firstname");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getUserAccess().getFirstnameSTRINGTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getUserAccess().getFirstnameSTRINGTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// lastname=STRING?
protected class User_LastnameAssignment_2 extends AssignmentToken  {
	
	public User_LastnameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUserAccess().getLastnameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new User_FirstnameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new User_NameAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lastname",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lastname");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getUserAccess().getLastnameSTRINGTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getUserAccess().getLastnameSTRINGTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// org=STRING?
protected class User_OrgAssignment_3 extends AssignmentToken  {
	
	public User_OrgAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUserAccess().getOrgAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new User_LastnameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new User_FirstnameAssignment_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new User_NameAssignment_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("org",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("org");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getUserAccess().getOrgSTRINGTerminalRuleCall_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getUserAccess().getOrgSTRINGTerminalRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// orgUnit=STRING?
protected class User_OrgUnitAssignment_4 extends AssignmentToken  {
	
	public User_OrgUnitAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUserAccess().getOrgUnitAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new User_OrgAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new User_LastnameAssignment_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new User_FirstnameAssignment_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new User_NameAssignment_0(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("orgUnit",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("orgUnit");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getUserAccess().getOrgUnitSTRINGTerminalRuleCall_4_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getUserAccess().getOrgUnitSTRINGTerminalRuleCall_4_0();
			return obj;
		}
		return null;
	}

}

// email=STRING?
protected class User_EmailAssignment_5 extends AssignmentToken  {
	
	public User_EmailAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUserAccess().getEmailAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new User_OrgUnitAssignment_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new User_OrgAssignment_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new User_LastnameAssignment_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new User_FirstnameAssignment_1(lastRuleCallOrigin, this, 3, inst);
			case 4: return new User_NameAssignment_0(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("email",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("email");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getUserAccess().getEmailSTRINGTerminalRuleCall_5_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getUserAccess().getEmailSTRINGTerminalRuleCall_5_0();
			return obj;
		}
		return null;
	}

}

// phone=STRING?
protected class User_PhoneAssignment_6 extends AssignmentToken  {
	
	public User_PhoneAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUserAccess().getPhoneAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new User_EmailAssignment_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new User_OrgUnitAssignment_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new User_OrgAssignment_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new User_LastnameAssignment_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new User_FirstnameAssignment_1(lastRuleCallOrigin, this, 4, inst);
			case 5: return new User_NameAssignment_0(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("phone",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("phone");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getUserAccess().getPhoneSTRINGTerminalRuleCall_6_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getUserAccess().getPhoneSTRINGTerminalRuleCall_6_0();
			return obj;
		}
		return null;
	}

}

// roles+=RoleRef*
protected class User_RolesAssignment_7 extends AssignmentToken  {
	
	public User_RolesAssignment_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUserAccess().getRolesAssignment_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RoleRef_RoleAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("roles",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("roles");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRoleRefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getUserAccess().getRolesRoleRefParserRuleCall_7_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new User_RolesAssignment_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new User_PhoneAssignment_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new User_EmailAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new User_OrgUnitAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new User_OrgAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new User_LastnameAssignment_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new User_FirstnameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 7: return new User_NameAssignment_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


/************ end Rule User ****************/


/************ begin Rule RoleRef ****************
 *
 * RoleRef:
 * 
 * 	role=[Role|QualifiedName];
 *
 **/

// role=[Role|QualifiedName]
protected class RoleRef_RoleAssignment extends AssignmentToken  {
	
	public RoleRef_RoleAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRoleRefAccess().getRoleAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRoleRefRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("role",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("role");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRoleRefAccess().getRoleRoleCrossReference_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getRoleRefAccess().getRoleRoleCrossReference_0(); 
				return obj;
			}
		}
		return null;
	}

}

/************ end Rule RoleRef ****************/


/************ begin Rule Role ****************
 *
 * Role:
 * 
 * 	name=STRING grants+=PrivilegeRef*;
 *
 **/

// name=STRING grants+=PrivilegeRef*
protected class Role_Group extends GroupToken {
	
	public Role_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRoleAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Role_GrantsAssignment_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Role_NameAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRoleRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=STRING
protected class Role_NameAssignment_0 extends AssignmentToken  {
	
	public Role_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRoleAccess().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getRoleAccess().getNameSTRINGTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getRoleAccess().getNameSTRINGTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// grants+=PrivilegeRef*
protected class Role_GrantsAssignment_1 extends AssignmentToken  {
	
	public Role_GrantsAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRoleAccess().getGrantsAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrivilegeRef_PrivilegeAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("grants",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("grants");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrivilegeRefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getRoleAccess().getGrantsPrivilegeRefParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Role_GrantsAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Role_NameAssignment_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


/************ end Rule Role ****************/


/************ begin Rule PrivilegeRef ****************
 *
 * PrivilegeRef:
 * 
 * 	privilege=[Privilege|QualifiedName];
 *
 **/

// privilege=[Privilege|QualifiedName]
protected class PrivilegeRef_PrivilegeAssignment extends AssignmentToken  {
	
	public PrivilegeRef_PrivilegeAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivilegeRefAccess().getPrivilegeAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPrivilegeRefRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("privilege",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("privilege");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrivilegeRefAccess().getPrivilegePrivilegeCrossReference_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPrivilegeRefAccess().getPrivilegePrivilegeCrossReference_0(); 
				return obj;
			}
		}
		return null;
	}

}

/************ end Rule PrivilegeRef ****************/


/************ begin Rule Privilege ****************
 *
 * Privilege:
 * 
 * 	name=QualifiedName readACL+=QualifiedName* writeACL+=QualifiedName* executeACL+=QualifiedName*;
 *
 **/

// name=QualifiedName readACL+=QualifiedName* writeACL+=QualifiedName* executeACL+=QualifiedName*
protected class Privilege_Group extends GroupToken {
	
	public Privilege_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPrivilegeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Privilege_ExecuteACLAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Privilege_WriteACLAssignment_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Privilege_ReadACLAssignment_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Privilege_NameAssignment_0(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPrivilegeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=QualifiedName
protected class Privilege_NameAssignment_0 extends AssignmentToken  {
	
	public Privilege_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivilegeAccess().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPrivilegeAccess().getNameQualifiedNameParserRuleCall_0_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getPrivilegeAccess().getNameQualifiedNameParserRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// readACL+=QualifiedName*
protected class Privilege_ReadACLAssignment_1 extends AssignmentToken  {
	
	public Privilege_ReadACLAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivilegeAccess().getReadACLAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Privilege_ReadACLAssignment_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Privilege_NameAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("readACL",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("readACL");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPrivilegeAccess().getReadACLQualifiedNameParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getPrivilegeAccess().getReadACLQualifiedNameParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// writeACL+=QualifiedName*
protected class Privilege_WriteACLAssignment_2 extends AssignmentToken  {
	
	public Privilege_WriteACLAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivilegeAccess().getWriteACLAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Privilege_WriteACLAssignment_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Privilege_ReadACLAssignment_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Privilege_NameAssignment_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("writeACL",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("writeACL");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPrivilegeAccess().getWriteACLQualifiedNameParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getPrivilegeAccess().getWriteACLQualifiedNameParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// executeACL+=QualifiedName*
protected class Privilege_ExecuteACLAssignment_3 extends AssignmentToken  {
	
	public Privilege_ExecuteACLAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrivilegeAccess().getExecuteACLAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Privilege_ExecuteACLAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Privilege_WriteACLAssignment_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Privilege_ReadACLAssignment_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Privilege_NameAssignment_0(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("executeACL",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("executeACL");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPrivilegeAccess().getExecuteACLQualifiedNameParserRuleCall_3_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getPrivilegeAccess().getExecuteACLQualifiedNameParserRuleCall_3_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Privilege ****************/


/************ begin Rule AssetRef ****************
 *
 * AssetRef:
 * 
 * 	asset=[ecore::EObject|QualifiedName] versionRef=VersionRef?;
 *
 **/

// asset=[ecore::EObject|QualifiedName] versionRef=VersionRef?
protected class AssetRef_Group extends GroupToken {
	
	public AssetRef_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAssetRefAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AssetRef_VersionRefAssignment_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AssetRef_AssetAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAssetRefRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// asset=[ecore::EObject|QualifiedName]
protected class AssetRef_AssetAssignment_0 extends AssignmentToken  {
	
	public AssetRef_AssetAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAssetRefAccess().getAssetAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("asset",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("asset");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAssetRefAccess().getAssetEObjectCrossReference_0_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getAssetRefAccess().getAssetEObjectCrossReference_0_0(); 
				return obj;
			}
		}
		return null;
	}

}

// versionRef=VersionRef?
protected class AssetRef_VersionRefAssignment_1 extends AssignmentToken  {
	
	public AssetRef_VersionRefAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAssetRefAccess().getVersionRefAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VersionRef_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("versionRef",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("versionRef");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVersionRefRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAssetRefAccess().getVersionRefVersionRefParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AssetRef_AssetAssignment_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


/************ end Rule AssetRef ****************/

}
