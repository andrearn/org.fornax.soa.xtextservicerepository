/*
* generated by Xtext
*/

package org.fornax.soa.sladsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.fornax.soa.basedsl.services.SOABaseDslGrammarAccess;

@Singleton
public class SLADslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class SlaModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SlaModel");
		private final Assignment cAgreementsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cAgreementsSLAParserRuleCall_0 = (RuleCall)cAgreementsAssignment.eContents().get(0);
		
		//SlaModel:
		//	agreements+=SLA*;
		public ParserRule getRule() { return rule; }

		//agreements+=SLA*
		public Assignment getAgreementsAssignment() { return cAgreementsAssignment; }

		//SLA
		public RuleCall getAgreementsSLAParserRuleCall_0() { return cAgreementsSLAParserRuleCall_0; }
	}

	public class SLAElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SLA");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServiceLevelAgreementKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameQualifiedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cVersionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVersionVersionParserRuleCall_2_0 = (RuleCall)cVersionAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEffectiveDateKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cEffectiveDateAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEffectiveDateSTRINGTerminalRuleCall_5_0 = (RuleCall)cEffectiveDateAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cEffectiveUntilKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cEffectiveUntilAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cEffectiveUntilSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cEffectiveUntilAssignment_6_1.eContents().get(0);
		private final Assignment cPartiesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cPartiesPartyParserRuleCall_7_0 = (RuleCall)cPartiesAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cScopeKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cScopeAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cScopeSTRINGTerminalRuleCall_8_1_0 = (RuleCall)cScopeAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cPreampleKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cPreampleAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cPreampleSTRINGTerminalRuleCall_9_1_0 = (RuleCall)cPreampleAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cDescriptionKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cDescriptionAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_10_1_0 = (RuleCall)cDescriptionAssignment_10_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cRestrictionsKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cRestrictionsAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cRestrictionsSTRINGTerminalRuleCall_11_1_0 = (RuleCall)cRestrictionsAssignment_11_1.eContents().get(0);
		private final Assignment cPrioritiesAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cPrioritiesPriorityDeclarationParserRuleCall_12_0 = (RuleCall)cPrioritiesAssignment_12.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cAppliesToKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Assignment cAppliesToAssignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final RuleCall cAppliesToAssetRefParserRuleCall_13_2_0 = (RuleCall)cAppliesToAssignment_13_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13_3 = (Keyword)cGroup_13.eContents().get(3);
		private final Assignment cCostsAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cCostsCostParserRuleCall_14_0 = (RuleCall)cCostsAssignment_14.eContents().get(0);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cServiceQualityRequirementsKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_15_1 = (Keyword)cGroup_15.eContents().get(1);
		private final Assignment cServiceQualityPropertiesAssignment_15_2 = (Assignment)cGroup_15.eContents().get(2);
		private final RuleCall cServiceQualityPropertiesServiceQualityPropertyParserRuleCall_15_2_0 = (RuleCall)cServiceQualityPropertiesAssignment_15_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15_3 = (Keyword)cGroup_15.eContents().get(3);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cDataSecurityAndProtectionKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_16_1 = (Keyword)cGroup_16.eContents().get(1);
		private final Group cGroup_16_2 = (Group)cGroup_16.eContents().get(2);
		private final Keyword cGeneralSecurityTermsKeyword_16_2_0 = (Keyword)cGroup_16_2.eContents().get(0);
		private final Assignment cDataSecProtClauseAssignment_16_2_1 = (Assignment)cGroup_16_2.eContents().get(1);
		private final RuleCall cDataSecProtClauseSTRINGTerminalRuleCall_16_2_1_0 = (RuleCall)cDataSecProtClauseAssignment_16_2_1.eContents().get(0);
		private final Group cGroup_16_3 = (Group)cGroup_16.eContents().get(3);
		private final Keyword cSecurityRequirementsKeyword_16_3_0 = (Keyword)cGroup_16_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_16_3_1 = (Keyword)cGroup_16_3.eContents().get(1);
		private final Assignment cSecurityRequirementsAssignment_16_3_2 = (Assignment)cGroup_16_3.eContents().get(2);
		private final RuleCall cSecurityRequirementsSecurityRequirementParserRuleCall_16_3_2_0 = (RuleCall)cSecurityRequirementsAssignment_16_3_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_16_3_3 = (Keyword)cGroup_16_3.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_16_4 = (Keyword)cGroup_16.eContents().get(4);
		private final Group cGroup_17 = (Group)cGroup.eContents().get(17);
		private final Keyword cAdditionalServicesKeyword_17_0 = (Keyword)cGroup_17.eContents().get(0);
		private final Assignment cAdditionalServicesAssignment_17_1 = (Assignment)cGroup_17.eContents().get(1);
		private final RuleCall cAdditionalServicesSTRINGTerminalRuleCall_17_1_0 = (RuleCall)cAdditionalServicesAssignment_17_1.eContents().get(0);
		private final Assignment cEscalationProcedureAssignment_18 = (Assignment)cGroup.eContents().get(18);
		private final RuleCall cEscalationProcedureEscalationParserRuleCall_18_0 = (RuleCall)cEscalationProcedureAssignment_18.eContents().get(0);
		private final Group cGroup_19 = (Group)cGroup.eContents().get(19);
		private final Keyword cCancellationKeyword_19_0 = (Keyword)cGroup_19.eContents().get(0);
		private final Assignment cCancellationAssignment_19_1 = (Assignment)cGroup_19.eContents().get(1);
		private final RuleCall cCancellationSTRINGTerminalRuleCall_19_1_0 = (RuleCall)cCancellationAssignment_19_1.eContents().get(0);
		private final Group cGroup_20 = (Group)cGroup.eContents().get(20);
		private final Keyword cExtraordinaryCancellationKeyword_20_0 = (Keyword)cGroup_20.eContents().get(0);
		private final Assignment cExtraordinaryCancellationAssignment_20_1 = (Assignment)cGroup_20.eContents().get(1);
		private final RuleCall cExtraordinaryCancellationSTRINGTerminalRuleCall_20_1_0 = (RuleCall)cExtraordinaryCancellationAssignment_20_1.eContents().get(0);
		private final Assignment cReportsAssignment_21 = (Assignment)cGroup.eContents().get(21);
		private final RuleCall cReportsReportParserRuleCall_21_0 = (RuleCall)cReportsAssignment_21.eContents().get(0);
		private final Group cGroup_22 = (Group)cGroup.eContents().get(22);
		private final Keyword cSubscriptionsKeyword_22_0 = (Keyword)cGroup_22.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_22_1 = (Keyword)cGroup_22.eContents().get(1);
		private final Assignment cSubscriptionsAssignment_22_2 = (Assignment)cGroup_22.eContents().get(2);
		private final CrossReference cSubscriptionsUserCrossReference_22_2_0 = (CrossReference)cSubscriptionsAssignment_22_2.eContents().get(0);
		private final RuleCall cSubscriptionsUserQualifiedNameParserRuleCall_22_2_0_1 = (RuleCall)cSubscriptionsUserCrossReference_22_2_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_22_3 = (Keyword)cGroup_22.eContents().get(3);
		private final Group cGroup_23 = (Group)cGroup.eContents().get(23);
		private final Keyword cTagsKeyword_23_0 = (Keyword)cGroup_23.eContents().get(0);
		private final Assignment cTagsAssignment_23_1 = (Assignment)cGroup_23.eContents().get(1);
		private final CrossReference cTagsTagCrossReference_23_1_0 = (CrossReference)cTagsAssignment_23_1.eContents().get(0);
		private final RuleCall cTagsTagIDTerminalRuleCall_23_1_0_1 = (RuleCall)cTagsTagCrossReference_23_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_24 = (Keyword)cGroup.eContents().get(24);
		
		//SLA:
		//	"service-level-agreement" name=QualifiedName version=Version? "{" "effective-date" effectiveDate=STRING
		//	("effective-until" effectiveUntil=STRING)? parties+=Party* ("scope" scope=STRING)? ("preample" preample=STRING)?
		//	("description" description=STRING)? ("restrictions" restrictions=STRING)? priorities+=PriorityDeclaration*
		//	("applies-to" "{" appliesTo+=AssetRef* "}")? costs=Cost? ("service-quality-requirements" "{"
		//	serviceQualityProperties+=ServiceQualityProperty* "}") ("data-security-and-protection" "{" ("general-security-terms"
		//	dataSecProtClause=STRING)? ("security-requirements" "{" securityRequirements+=SecurityRequirement* "}") "}")?
		//	("additional-services" additionalServices=STRING)? escalationProcedure=Escalation? ("cancellation"
		//	cancellation=STRING)? ("extraordinary-cancellation" extraordinaryCancellation=STRING)? reports+=Report*
		//	("subscriptions" "{" subscriptions+=[basedsl::User|QualifiedName]* "}")? ("tags" tags+=[semanticsDsl::Tag]+)* "}";
		public ParserRule getRule() { return rule; }

		//"service-level-agreement" name=QualifiedName version=Version? "{" "effective-date" effectiveDate=STRING
		//("effective-until" effectiveUntil=STRING)? parties+=Party* ("scope" scope=STRING)? ("preample" preample=STRING)?
		//("description" description=STRING)? ("restrictions" restrictions=STRING)? priorities+=PriorityDeclaration*
		//("applies-to" "{" appliesTo+=AssetRef* "}")? costs=Cost? ("service-quality-requirements" "{"
		//serviceQualityProperties+=ServiceQualityProperty* "}") ("data-security-and-protection" "{" ("general-security-terms"
		//dataSecProtClause=STRING)? ("security-requirements" "{" securityRequirements+=SecurityRequirement* "}") "}")?
		//("additional-services" additionalServices=STRING)? escalationProcedure=Escalation? ("cancellation"
		//cancellation=STRING)? ("extraordinary-cancellation" extraordinaryCancellation=STRING)? reports+=Report*
		//("subscriptions" "{" subscriptions+=[basedsl::User|QualifiedName]* "}")? ("tags" tags+=[semanticsDsl::Tag]+)* "}"
		public Group getGroup() { return cGroup; }

		//"service-level-agreement"
		public Keyword getServiceLevelAgreementKeyword_0() { return cServiceLevelAgreementKeyword_0; }

		//name=QualifiedName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_1_0() { return cNameQualifiedNameParserRuleCall_1_0; }

		//version=Version?
		public Assignment getVersionAssignment_2() { return cVersionAssignment_2; }

		//Version
		public RuleCall getVersionVersionParserRuleCall_2_0() { return cVersionVersionParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//"effective-date"
		public Keyword getEffectiveDateKeyword_4() { return cEffectiveDateKeyword_4; }

		//effectiveDate=STRING
		public Assignment getEffectiveDateAssignment_5() { return cEffectiveDateAssignment_5; }

		//STRING
		public RuleCall getEffectiveDateSTRINGTerminalRuleCall_5_0() { return cEffectiveDateSTRINGTerminalRuleCall_5_0; }

		//("effective-until" effectiveUntil=STRING)?
		public Group getGroup_6() { return cGroup_6; }

		//"effective-until"
		public Keyword getEffectiveUntilKeyword_6_0() { return cEffectiveUntilKeyword_6_0; }

		//effectiveUntil=STRING
		public Assignment getEffectiveUntilAssignment_6_1() { return cEffectiveUntilAssignment_6_1; }

		//STRING
		public RuleCall getEffectiveUntilSTRINGTerminalRuleCall_6_1_0() { return cEffectiveUntilSTRINGTerminalRuleCall_6_1_0; }

		//parties+=Party*
		public Assignment getPartiesAssignment_7() { return cPartiesAssignment_7; }

		//Party
		public RuleCall getPartiesPartyParserRuleCall_7_0() { return cPartiesPartyParserRuleCall_7_0; }

		//("scope" scope=STRING)?
		public Group getGroup_8() { return cGroup_8; }

		//"scope"
		public Keyword getScopeKeyword_8_0() { return cScopeKeyword_8_0; }

		//scope=STRING
		public Assignment getScopeAssignment_8_1() { return cScopeAssignment_8_1; }

		//STRING
		public RuleCall getScopeSTRINGTerminalRuleCall_8_1_0() { return cScopeSTRINGTerminalRuleCall_8_1_0; }

		//("preample" preample=STRING)?
		public Group getGroup_9() { return cGroup_9; }

		//"preample"
		public Keyword getPreampleKeyword_9_0() { return cPreampleKeyword_9_0; }

		//preample=STRING
		public Assignment getPreampleAssignment_9_1() { return cPreampleAssignment_9_1; }

		//STRING
		public RuleCall getPreampleSTRINGTerminalRuleCall_9_1_0() { return cPreampleSTRINGTerminalRuleCall_9_1_0; }

		//("description" description=STRING)?
		public Group getGroup_10() { return cGroup_10; }

		//"description"
		public Keyword getDescriptionKeyword_10_0() { return cDescriptionKeyword_10_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_10_1() { return cDescriptionAssignment_10_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_10_1_0() { return cDescriptionSTRINGTerminalRuleCall_10_1_0; }

		//("restrictions" restrictions=STRING)?
		public Group getGroup_11() { return cGroup_11; }

		//"restrictions"
		public Keyword getRestrictionsKeyword_11_0() { return cRestrictionsKeyword_11_0; }

		//restrictions=STRING
		public Assignment getRestrictionsAssignment_11_1() { return cRestrictionsAssignment_11_1; }

		//STRING
		public RuleCall getRestrictionsSTRINGTerminalRuleCall_11_1_0() { return cRestrictionsSTRINGTerminalRuleCall_11_1_0; }

		//priorities+=PriorityDeclaration*
		public Assignment getPrioritiesAssignment_12() { return cPrioritiesAssignment_12; }

		//PriorityDeclaration
		public RuleCall getPrioritiesPriorityDeclarationParserRuleCall_12_0() { return cPrioritiesPriorityDeclarationParserRuleCall_12_0; }

		//("applies-to" "{" appliesTo+=AssetRef* "}")?
		public Group getGroup_13() { return cGroup_13; }

		//"applies-to"
		public Keyword getAppliesToKeyword_13_0() { return cAppliesToKeyword_13_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_13_1() { return cLeftCurlyBracketKeyword_13_1; }

		//appliesTo+=AssetRef*
		public Assignment getAppliesToAssignment_13_2() { return cAppliesToAssignment_13_2; }

		//AssetRef
		public RuleCall getAppliesToAssetRefParserRuleCall_13_2_0() { return cAppliesToAssetRefParserRuleCall_13_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_13_3() { return cRightCurlyBracketKeyword_13_3; }

		//costs=Cost?
		public Assignment getCostsAssignment_14() { return cCostsAssignment_14; }

		//Cost
		public RuleCall getCostsCostParserRuleCall_14_0() { return cCostsCostParserRuleCall_14_0; }

		//"service-quality-requirements" "{" serviceQualityProperties+=ServiceQualityProperty* "}"
		public Group getGroup_15() { return cGroup_15; }

		//"service-quality-requirements"
		public Keyword getServiceQualityRequirementsKeyword_15_0() { return cServiceQualityRequirementsKeyword_15_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_15_1() { return cLeftCurlyBracketKeyword_15_1; }

		//serviceQualityProperties+=ServiceQualityProperty*
		public Assignment getServiceQualityPropertiesAssignment_15_2() { return cServiceQualityPropertiesAssignment_15_2; }

		//ServiceQualityProperty
		public RuleCall getServiceQualityPropertiesServiceQualityPropertyParserRuleCall_15_2_0() { return cServiceQualityPropertiesServiceQualityPropertyParserRuleCall_15_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_15_3() { return cRightCurlyBracketKeyword_15_3; }

		//("data-security-and-protection" "{" ("general-security-terms" dataSecProtClause=STRING)? ("security-requirements" "{"
		//securityRequirements+=SecurityRequirement* "}") "}")?
		public Group getGroup_16() { return cGroup_16; }

		//"data-security-and-protection"
		public Keyword getDataSecurityAndProtectionKeyword_16_0() { return cDataSecurityAndProtectionKeyword_16_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_16_1() { return cLeftCurlyBracketKeyword_16_1; }

		//("general-security-terms" dataSecProtClause=STRING)?
		public Group getGroup_16_2() { return cGroup_16_2; }

		//"general-security-terms"
		public Keyword getGeneralSecurityTermsKeyword_16_2_0() { return cGeneralSecurityTermsKeyword_16_2_0; }

		//dataSecProtClause=STRING
		public Assignment getDataSecProtClauseAssignment_16_2_1() { return cDataSecProtClauseAssignment_16_2_1; }

		//STRING
		public RuleCall getDataSecProtClauseSTRINGTerminalRuleCall_16_2_1_0() { return cDataSecProtClauseSTRINGTerminalRuleCall_16_2_1_0; }

		//"security-requirements" "{" securityRequirements+=SecurityRequirement* "}"
		public Group getGroup_16_3() { return cGroup_16_3; }

		//"security-requirements"
		public Keyword getSecurityRequirementsKeyword_16_3_0() { return cSecurityRequirementsKeyword_16_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_16_3_1() { return cLeftCurlyBracketKeyword_16_3_1; }

		//securityRequirements+=SecurityRequirement*
		public Assignment getSecurityRequirementsAssignment_16_3_2() { return cSecurityRequirementsAssignment_16_3_2; }

		//SecurityRequirement
		public RuleCall getSecurityRequirementsSecurityRequirementParserRuleCall_16_3_2_0() { return cSecurityRequirementsSecurityRequirementParserRuleCall_16_3_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_16_3_3() { return cRightCurlyBracketKeyword_16_3_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_16_4() { return cRightCurlyBracketKeyword_16_4; }

		//("additional-services" additionalServices=STRING)?
		public Group getGroup_17() { return cGroup_17; }

		//"additional-services"
		public Keyword getAdditionalServicesKeyword_17_0() { return cAdditionalServicesKeyword_17_0; }

		//additionalServices=STRING
		public Assignment getAdditionalServicesAssignment_17_1() { return cAdditionalServicesAssignment_17_1; }

		//STRING
		public RuleCall getAdditionalServicesSTRINGTerminalRuleCall_17_1_0() { return cAdditionalServicesSTRINGTerminalRuleCall_17_1_0; }

		//escalationProcedure=Escalation?
		public Assignment getEscalationProcedureAssignment_18() { return cEscalationProcedureAssignment_18; }

		//Escalation
		public RuleCall getEscalationProcedureEscalationParserRuleCall_18_0() { return cEscalationProcedureEscalationParserRuleCall_18_0; }

		//("cancellation" cancellation=STRING)?
		public Group getGroup_19() { return cGroup_19; }

		//"cancellation"
		public Keyword getCancellationKeyword_19_0() { return cCancellationKeyword_19_0; }

		//cancellation=STRING
		public Assignment getCancellationAssignment_19_1() { return cCancellationAssignment_19_1; }

		//STRING
		public RuleCall getCancellationSTRINGTerminalRuleCall_19_1_0() { return cCancellationSTRINGTerminalRuleCall_19_1_0; }

		//("extraordinary-cancellation" extraordinaryCancellation=STRING)?
		public Group getGroup_20() { return cGroup_20; }

		//"extraordinary-cancellation"
		public Keyword getExtraordinaryCancellationKeyword_20_0() { return cExtraordinaryCancellationKeyword_20_0; }

		//extraordinaryCancellation=STRING
		public Assignment getExtraordinaryCancellationAssignment_20_1() { return cExtraordinaryCancellationAssignment_20_1; }

		//STRING
		public RuleCall getExtraordinaryCancellationSTRINGTerminalRuleCall_20_1_0() { return cExtraordinaryCancellationSTRINGTerminalRuleCall_20_1_0; }

		//reports+=Report*
		public Assignment getReportsAssignment_21() { return cReportsAssignment_21; }

		//Report
		public RuleCall getReportsReportParserRuleCall_21_0() { return cReportsReportParserRuleCall_21_0; }

		//("subscriptions" "{" subscriptions+=[basedsl::User|QualifiedName]* "}")?
		public Group getGroup_22() { return cGroup_22; }

		//"subscriptions"
		public Keyword getSubscriptionsKeyword_22_0() { return cSubscriptionsKeyword_22_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_22_1() { return cLeftCurlyBracketKeyword_22_1; }

		//subscriptions+=[basedsl::User|QualifiedName]*
		public Assignment getSubscriptionsAssignment_22_2() { return cSubscriptionsAssignment_22_2; }

		//[basedsl::User|QualifiedName]
		public CrossReference getSubscriptionsUserCrossReference_22_2_0() { return cSubscriptionsUserCrossReference_22_2_0; }

		//QualifiedName
		public RuleCall getSubscriptionsUserQualifiedNameParserRuleCall_22_2_0_1() { return cSubscriptionsUserQualifiedNameParserRuleCall_22_2_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_22_3() { return cRightCurlyBracketKeyword_22_3; }

		//("tags" tags+=[semanticsDsl::Tag]+)*
		public Group getGroup_23() { return cGroup_23; }

		//"tags"
		public Keyword getTagsKeyword_23_0() { return cTagsKeyword_23_0; }

		//tags+=[semanticsDsl::Tag]+
		public Assignment getTagsAssignment_23_1() { return cTagsAssignment_23_1; }

		//[semanticsDsl::Tag]
		public CrossReference getTagsTagCrossReference_23_1_0() { return cTagsTagCrossReference_23_1_0; }

		//ID
		public RuleCall getTagsTagIDTerminalRuleCall_23_1_0_1() { return cTagsTagIDTerminalRuleCall_23_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_24() { return cRightCurlyBracketKeyword_24; }
	}

	public class CostElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Cost");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCostsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAmountKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCostsAmountAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCostsAmountSTRINGTerminalRuleCall_3_0 = (RuleCall)cCostsAmountAssignment_3.eContents().get(0);
		private final Keyword cBilledPerUnitKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cBilledUnitAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cBilledUnitSTRINGTerminalRuleCall_5_0 = (RuleCall)cBilledUnitAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cEffortAccountingKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cEffortAccountingAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cEffortAccountingSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cEffortAccountingAssignment_6_1.eContents().get(0);
		private final Assignment cEscalationAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cEscalationEscalationParserRuleCall_7_0 = (RuleCall)cEscalationAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cPenaltyKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cPenaltyAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cPenaltySTRINGTerminalRuleCall_8_1_0 = (RuleCall)cPenaltyAssignment_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Cost:
		//	"costs" "{" "amount" costsAmount=STRING "billed-per-unit" billedUnit=STRING ("effort-accounting"
		//	effortAccounting=STRING)? escalation=Escalation? ("penalty" penalty=STRING)? "}";
		public ParserRule getRule() { return rule; }

		//"costs" "{" "amount" costsAmount=STRING "billed-per-unit" billedUnit=STRING ("effort-accounting"
		//effortAccounting=STRING)? escalation=Escalation? ("penalty" penalty=STRING)? "}"
		public Group getGroup() { return cGroup; }

		//"costs"
		public Keyword getCostsKeyword_0() { return cCostsKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"amount"
		public Keyword getAmountKeyword_2() { return cAmountKeyword_2; }

		//costsAmount=STRING
		public Assignment getCostsAmountAssignment_3() { return cCostsAmountAssignment_3; }

		//STRING
		public RuleCall getCostsAmountSTRINGTerminalRuleCall_3_0() { return cCostsAmountSTRINGTerminalRuleCall_3_0; }

		//"billed-per-unit"
		public Keyword getBilledPerUnitKeyword_4() { return cBilledPerUnitKeyword_4; }

		//billedUnit=STRING
		public Assignment getBilledUnitAssignment_5() { return cBilledUnitAssignment_5; }

		//STRING
		public RuleCall getBilledUnitSTRINGTerminalRuleCall_5_0() { return cBilledUnitSTRINGTerminalRuleCall_5_0; }

		//("effort-accounting" effortAccounting=STRING)?
		public Group getGroup_6() { return cGroup_6; }

		//"effort-accounting"
		public Keyword getEffortAccountingKeyword_6_0() { return cEffortAccountingKeyword_6_0; }

		//effortAccounting=STRING
		public Assignment getEffortAccountingAssignment_6_1() { return cEffortAccountingAssignment_6_1; }

		//STRING
		public RuleCall getEffortAccountingSTRINGTerminalRuleCall_6_1_0() { return cEffortAccountingSTRINGTerminalRuleCall_6_1_0; }

		//escalation=Escalation?
		public Assignment getEscalationAssignment_7() { return cEscalationAssignment_7; }

		//Escalation
		public RuleCall getEscalationEscalationParserRuleCall_7_0() { return cEscalationEscalationParserRuleCall_7_0; }

		//("penalty" penalty=STRING)?
		public Group getGroup_8() { return cGroup_8; }

		//"penalty"
		public Keyword getPenaltyKeyword_8_0() { return cPenaltyKeyword_8_0; }

		//penalty=STRING
		public Assignment getPenaltyAssignment_8_1() { return cPenaltyAssignment_8_1; }

		//STRING
		public RuleCall getPenaltySTRINGTerminalRuleCall_8_1_0() { return cPenaltySTRINGTerminalRuleCall_8_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class ServiceQualityPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ServiceQualityProperty");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAvailabilityParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cThroughputParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cLatencyParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cMaxDownTimeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cCapacityRequirementParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cAccuracyRequirementParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cReliablityRequirementParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cLogRequirementParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		
		//ServiceQualityProperty:
		//	Availability | Throughput | Latency | MaxDownTime | CapacityRequirement | AccuracyRequirement | ReliablityRequirement
		//	| LogRequirement;
		public ParserRule getRule() { return rule; }

		//Availability | Throughput | Latency | MaxDownTime | CapacityRequirement | AccuracyRequirement | ReliablityRequirement |
		//LogRequirement
		public Alternatives getAlternatives() { return cAlternatives; }

		//Availability
		public RuleCall getAvailabilityParserRuleCall_0() { return cAvailabilityParserRuleCall_0; }

		//Throughput
		public RuleCall getThroughputParserRuleCall_1() { return cThroughputParserRuleCall_1; }

		//Latency
		public RuleCall getLatencyParserRuleCall_2() { return cLatencyParserRuleCall_2; }

		//MaxDownTime
		public RuleCall getMaxDownTimeParserRuleCall_3() { return cMaxDownTimeParserRuleCall_3; }

		//CapacityRequirement
		public RuleCall getCapacityRequirementParserRuleCall_4() { return cCapacityRequirementParserRuleCall_4; }

		//AccuracyRequirement
		public RuleCall getAccuracyRequirementParserRuleCall_5() { return cAccuracyRequirementParserRuleCall_5; }

		//ReliablityRequirement
		public RuleCall getReliablityRequirementParserRuleCall_6() { return cReliablityRequirementParserRuleCall_6; }

		//LogRequirement
		public RuleCall getLogRequirementParserRuleCall_7() { return cLogRequirementParserRuleCall_7; }
	}

	public class AvailabilityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Availability");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAvailabilityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAvailabilityKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAvailabilityAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAvailabilitySTRINGTerminalRuleCall_3_0 = (RuleCall)cAvailabilityAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cMeanTimeBetweenFailureKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cMtbfAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cMtbfSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cMtbfAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cMeanTimeToRepairKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cMttrAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cMttrSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cMttrAssignment_5_1.eContents().get(0);
		private final Assignment cMttrPercentileAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cMttrPercentilePercentileParserRuleCall_5_2_0 = (RuleCall)cMttrPercentileAssignment_5_2.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cRegularDownTimesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cRegularDownTimesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cRegularDownTimesSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cRegularDownTimesAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Availability:
		//	"availability" "{" "availability" availability=STRING ("mean-time-between-failure" mtbf=STRING)?
		//	("mean-time-to-repair" mttr=STRING mttrPercentile=Percentile?)? ("regular-down-times" regularDownTimes=STRING)? "}";
		public ParserRule getRule() { return rule; }

		//"availability" "{" "availability" availability=STRING ("mean-time-between-failure" mtbf=STRING)? ("mean-time-to-repair"
		//mttr=STRING mttrPercentile=Percentile?)? ("regular-down-times" regularDownTimes=STRING)? "}"
		public Group getGroup() { return cGroup; }

		//"availability"
		public Keyword getAvailabilityKeyword_0() { return cAvailabilityKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"availability"
		public Keyword getAvailabilityKeyword_2() { return cAvailabilityKeyword_2; }

		//availability=STRING
		public Assignment getAvailabilityAssignment_3() { return cAvailabilityAssignment_3; }

		//STRING
		public RuleCall getAvailabilitySTRINGTerminalRuleCall_3_0() { return cAvailabilitySTRINGTerminalRuleCall_3_0; }

		//("mean-time-between-failure" mtbf=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"mean-time-between-failure"
		public Keyword getMeanTimeBetweenFailureKeyword_4_0() { return cMeanTimeBetweenFailureKeyword_4_0; }

		//mtbf=STRING
		public Assignment getMtbfAssignment_4_1() { return cMtbfAssignment_4_1; }

		//STRING
		public RuleCall getMtbfSTRINGTerminalRuleCall_4_1_0() { return cMtbfSTRINGTerminalRuleCall_4_1_0; }

		//("mean-time-to-repair" mttr=STRING mttrPercentile=Percentile?)?
		public Group getGroup_5() { return cGroup_5; }

		//"mean-time-to-repair"
		public Keyword getMeanTimeToRepairKeyword_5_0() { return cMeanTimeToRepairKeyword_5_0; }

		//mttr=STRING
		public Assignment getMttrAssignment_5_1() { return cMttrAssignment_5_1; }

		//STRING
		public RuleCall getMttrSTRINGTerminalRuleCall_5_1_0() { return cMttrSTRINGTerminalRuleCall_5_1_0; }

		//mttrPercentile=Percentile?
		public Assignment getMttrPercentileAssignment_5_2() { return cMttrPercentileAssignment_5_2; }

		//Percentile
		public RuleCall getMttrPercentilePercentileParserRuleCall_5_2_0() { return cMttrPercentilePercentileParserRuleCall_5_2_0; }

		//("regular-down-times" regularDownTimes=STRING)?
		public Group getGroup_6() { return cGroup_6; }

		//"regular-down-times"
		public Keyword getRegularDownTimesKeyword_6_0() { return cRegularDownTimesKeyword_6_0; }

		//regularDownTimes=STRING
		public Assignment getRegularDownTimesAssignment_6_1() { return cRegularDownTimesAssignment_6_1; }

		//STRING
		public RuleCall getRegularDownTimesSTRINGTerminalRuleCall_6_1_0() { return cRegularDownTimesSTRINGTerminalRuleCall_6_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class ThroughputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Throughput");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cThroughputKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cThroughputKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDefinitionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDefinitionSTRINGTerminalRuleCall_3_0 = (RuleCall)cDefinitionAssignment_3.eContents().get(0);
		private final Keyword cScoreToBeKeptKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cScoreAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cScoreSTRINGTerminalRuleCall_5_0 = (RuleCall)cScoreAssignment_5.eContents().get(0);
		private final Assignment cEscalationAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cEscalationEscalationParserRuleCall_6_0 = (RuleCall)cEscalationAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cPenaltyKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cPenaltyAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cPenaltySTRINGTerminalRuleCall_7_1_0 = (RuleCall)cPenaltyAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Throughput:
		//	"throughput" "{" "throughput" definition=STRING "score-to-be-kept" score=STRING escalation=Escalation? ("penalty"
		//	penalty=STRING)? "}";
		public ParserRule getRule() { return rule; }

		//"throughput" "{" "throughput" definition=STRING "score-to-be-kept" score=STRING escalation=Escalation? ("penalty"
		//penalty=STRING)? "}"
		public Group getGroup() { return cGroup; }

		//"throughput"
		public Keyword getThroughputKeyword_0() { return cThroughputKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"throughput"
		public Keyword getThroughputKeyword_2() { return cThroughputKeyword_2; }

		//definition=STRING
		public Assignment getDefinitionAssignment_3() { return cDefinitionAssignment_3; }

		//STRING
		public RuleCall getDefinitionSTRINGTerminalRuleCall_3_0() { return cDefinitionSTRINGTerminalRuleCall_3_0; }

		//"score-to-be-kept"
		public Keyword getScoreToBeKeptKeyword_4() { return cScoreToBeKeptKeyword_4; }

		//score=STRING
		public Assignment getScoreAssignment_5() { return cScoreAssignment_5; }

		//STRING
		public RuleCall getScoreSTRINGTerminalRuleCall_5_0() { return cScoreSTRINGTerminalRuleCall_5_0; }

		//escalation=Escalation?
		public Assignment getEscalationAssignment_6() { return cEscalationAssignment_6; }

		//Escalation
		public RuleCall getEscalationEscalationParserRuleCall_6_0() { return cEscalationEscalationParserRuleCall_6_0; }

		//("penalty" penalty=STRING)?
		public Group getGroup_7() { return cGroup_7; }

		//"penalty"
		public Keyword getPenaltyKeyword_7_0() { return cPenaltyKeyword_7_0; }

		//penalty=STRING
		public Assignment getPenaltyAssignment_7_1() { return cPenaltyAssignment_7_1; }

		//STRING
		public RuleCall getPenaltySTRINGTerminalRuleCall_7_1_0() { return cPenaltySTRINGTerminalRuleCall_7_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class LatencyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Latency");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLatencyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLatencyKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLatencyAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cLatencySTRINGKeyword_3_0 = (Keyword)cLatencyAssignment_3.eContents().get(0);
		private final Keyword cPercentileKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cPercentileAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPercentilePercentileParserRuleCall_5_0 = (RuleCall)cPercentileAssignment_5.eContents().get(0);
		private final Assignment cEscalationAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cEscalationEscalationParserRuleCall_6_0 = (RuleCall)cEscalationAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cPenaltyKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cPenaltyAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cPenaltySTRINGTerminalRuleCall_7_1_0 = (RuleCall)cPenaltyAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Latency:
		//	"latency" "{" "latency" latency="STRING" "percentile" percentile=Percentile escalation=Escalation? ("penalty"
		//	penalty=STRING)? "}";
		public ParserRule getRule() { return rule; }

		//"latency" "{" "latency" latency="STRING" "percentile" percentile=Percentile escalation=Escalation? ("penalty"
		//penalty=STRING)? "}"
		public Group getGroup() { return cGroup; }

		//"latency"
		public Keyword getLatencyKeyword_0() { return cLatencyKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"latency"
		public Keyword getLatencyKeyword_2() { return cLatencyKeyword_2; }

		//latency="STRING"
		public Assignment getLatencyAssignment_3() { return cLatencyAssignment_3; }

		//"STRING"
		public Keyword getLatencySTRINGKeyword_3_0() { return cLatencySTRINGKeyword_3_0; }

		//"percentile"
		public Keyword getPercentileKeyword_4() { return cPercentileKeyword_4; }

		//percentile=Percentile
		public Assignment getPercentileAssignment_5() { return cPercentileAssignment_5; }

		//Percentile
		public RuleCall getPercentilePercentileParserRuleCall_5_0() { return cPercentilePercentileParserRuleCall_5_0; }

		//escalation=Escalation?
		public Assignment getEscalationAssignment_6() { return cEscalationAssignment_6; }

		//Escalation
		public RuleCall getEscalationEscalationParserRuleCall_6_0() { return cEscalationEscalationParserRuleCall_6_0; }

		//("penalty" penalty=STRING)?
		public Group getGroup_7() { return cGroup_7; }

		//"penalty"
		public Keyword getPenaltyKeyword_7_0() { return cPenaltyKeyword_7_0; }

		//penalty=STRING
		public Assignment getPenaltyAssignment_7_1() { return cPenaltyAssignment_7_1; }

		//STRING
		public RuleCall getPenaltySTRINGTerminalRuleCall_7_1_0() { return cPenaltySTRINGTerminalRuleCall_7_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class MaxDownTimeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MaxDownTime");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMaxDowntimeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cDurationKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDefinitionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDefinitionSTRINGTerminalRuleCall_3_0 = (RuleCall)cDefinitionAssignment_3.eContents().get(0);
		private final Assignment cEscalationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cEscalationEscalationParserRuleCall_4_0 = (RuleCall)cEscalationAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cPenaltyKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cPenaltyAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cPenaltySTRINGTerminalRuleCall_5_1_0 = (RuleCall)cPenaltyAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//MaxDownTime:
		//	"max-downtime" "{" "duration" definition=STRING escalation=Escalation? ("penalty" penalty=STRING)? "}";
		public ParserRule getRule() { return rule; }

		//"max-downtime" "{" "duration" definition=STRING escalation=Escalation? ("penalty" penalty=STRING)? "}"
		public Group getGroup() { return cGroup; }

		//"max-downtime"
		public Keyword getMaxDowntimeKeyword_0() { return cMaxDowntimeKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"duration"
		public Keyword getDurationKeyword_2() { return cDurationKeyword_2; }

		//definition=STRING
		public Assignment getDefinitionAssignment_3() { return cDefinitionAssignment_3; }

		//STRING
		public RuleCall getDefinitionSTRINGTerminalRuleCall_3_0() { return cDefinitionSTRINGTerminalRuleCall_3_0; }

		//escalation=Escalation?
		public Assignment getEscalationAssignment_4() { return cEscalationAssignment_4; }

		//Escalation
		public RuleCall getEscalationEscalationParserRuleCall_4_0() { return cEscalationEscalationParserRuleCall_4_0; }

		//("penalty" penalty=STRING)?
		public Group getGroup_5() { return cGroup_5; }

		//"penalty"
		public Keyword getPenaltyKeyword_5_0() { return cPenaltyKeyword_5_0; }

		//penalty=STRING
		public Assignment getPenaltyAssignment_5_1() { return cPenaltyAssignment_5_1; }

		//STRING
		public RuleCall getPenaltySTRINGTerminalRuleCall_5_1_0() { return cPenaltySTRINGTerminalRuleCall_5_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class CapacityRequirementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CapacityRequirement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCapacityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Action cCapacityRequirementAction_2 = (Action)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNumOfRequestsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRequestNumAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRequestNumSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cRequestNumAssignment_3_1.eContents().get(0);
		private final Keyword cPerKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cTimeUnitAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cTimeUnitSTRINGTerminalRuleCall_3_3_0 = (RuleCall)cTimeUnitAssignment_3_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cMessageSizeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cMessageSizeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cMessageSizeSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cMessageSizeAssignment_4_1.eContents().get(0);
		private final Assignment cEscalationAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEscalationEscalationParserRuleCall_5_0 = (RuleCall)cEscalationAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cPenaltyKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cPenaltyAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cPenaltySTRINGTerminalRuleCall_6_1_0 = (RuleCall)cPenaltyAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//CapacityRequirement:
		//	"capacity" "{" {CapacityRequirement} ("num-of-requests" requestNum=STRING "per" timeUnit=STRING)? ("message-size"
		//	messageSize=STRING)? escalation=Escalation? ("penalty" penalty=STRING)? "}";
		public ParserRule getRule() { return rule; }

		//"capacity" "{" {CapacityRequirement} ("num-of-requests" requestNum=STRING "per" timeUnit=STRING)? ("message-size"
		//messageSize=STRING)? escalation=Escalation? ("penalty" penalty=STRING)? "}"
		public Group getGroup() { return cGroup; }

		//"capacity"
		public Keyword getCapacityKeyword_0() { return cCapacityKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//{CapacityRequirement}
		public Action getCapacityRequirementAction_2() { return cCapacityRequirementAction_2; }

		//("num-of-requests" requestNum=STRING "per" timeUnit=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"num-of-requests"
		public Keyword getNumOfRequestsKeyword_3_0() { return cNumOfRequestsKeyword_3_0; }

		//requestNum=STRING
		public Assignment getRequestNumAssignment_3_1() { return cRequestNumAssignment_3_1; }

		//STRING
		public RuleCall getRequestNumSTRINGTerminalRuleCall_3_1_0() { return cRequestNumSTRINGTerminalRuleCall_3_1_0; }

		//"per"
		public Keyword getPerKeyword_3_2() { return cPerKeyword_3_2; }

		//timeUnit=STRING
		public Assignment getTimeUnitAssignment_3_3() { return cTimeUnitAssignment_3_3; }

		//STRING
		public RuleCall getTimeUnitSTRINGTerminalRuleCall_3_3_0() { return cTimeUnitSTRINGTerminalRuleCall_3_3_0; }

		//("message-size" messageSize=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"message-size"
		public Keyword getMessageSizeKeyword_4_0() { return cMessageSizeKeyword_4_0; }

		//messageSize=STRING
		public Assignment getMessageSizeAssignment_4_1() { return cMessageSizeAssignment_4_1; }

		//STRING
		public RuleCall getMessageSizeSTRINGTerminalRuleCall_4_1_0() { return cMessageSizeSTRINGTerminalRuleCall_4_1_0; }

		//escalation=Escalation?
		public Assignment getEscalationAssignment_5() { return cEscalationAssignment_5; }

		//Escalation
		public RuleCall getEscalationEscalationParserRuleCall_5_0() { return cEscalationEscalationParserRuleCall_5_0; }

		//("penalty" penalty=STRING)?
		public Group getGroup_6() { return cGroup_6; }

		//"penalty"
		public Keyword getPenaltyKeyword_6_0() { return cPenaltyKeyword_6_0; }

		//penalty=STRING
		public Assignment getPenaltyAssignment_6_1() { return cPenaltyAssignment_6_1; }

		//STRING
		public RuleCall getPenaltySTRINGTerminalRuleCall_6_1_0() { return cPenaltySTRINGTerminalRuleCall_6_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class ReliablityRequirementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ReliablityRequirement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMessageExchangeReliabilityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cReliabilityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cReliabilityReliablilityKindEnumRuleCall_2_0 = (RuleCall)cReliabilityAssignment_2.eContents().get(0);
		private final Assignment cInOrderDeliveryAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cInOrderDeliveryInOrderDeliveryKeyword_3_0 = (Keyword)cInOrderDeliveryAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ReliablityRequirement:
		//	"message-exchange-reliability" "{" reliability=ReliablilityKind inOrderDelivery?="in-order-delivery"? "}";
		public ParserRule getRule() { return rule; }

		//"message-exchange-reliability" "{" reliability=ReliablilityKind inOrderDelivery?="in-order-delivery"? "}"
		public Group getGroup() { return cGroup; }

		//"message-exchange-reliability"
		public Keyword getMessageExchangeReliabilityKeyword_0() { return cMessageExchangeReliabilityKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//reliability=ReliablilityKind
		public Assignment getReliabilityAssignment_2() { return cReliabilityAssignment_2; }

		//ReliablilityKind
		public RuleCall getReliabilityReliablilityKindEnumRuleCall_2_0() { return cReliabilityReliablilityKindEnumRuleCall_2_0; }

		//inOrderDelivery?="in-order-delivery"?
		public Assignment getInOrderDeliveryAssignment_3() { return cInOrderDeliveryAssignment_3; }

		//"in-order-delivery"
		public Keyword getInOrderDeliveryInOrderDeliveryKeyword_3_0() { return cInOrderDeliveryInOrderDeliveryKeyword_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class AccuracyRequirementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AccuracyRequirement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAccuracyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cMaxErrorRateKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMaxErrorRateAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMaxErrorRateSTRINGTerminalRuleCall_3_0 = (RuleCall)cMaxErrorRateAssignment_3.eContents().get(0);
		private final Assignment cEscalationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cEscalationEscalationParserRuleCall_4_0 = (RuleCall)cEscalationAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cPenaltyKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cPenaltyAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cPenaltySTRINGTerminalRuleCall_5_1_0 = (RuleCall)cPenaltyAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//AccuracyRequirement:
		//	"accuracy" "{" "max-error-rate" maxErrorRate=STRING escalation=Escalation? ("penalty" penalty=STRING)? "}";
		public ParserRule getRule() { return rule; }

		//"accuracy" "{" "max-error-rate" maxErrorRate=STRING escalation=Escalation? ("penalty" penalty=STRING)? "}"
		public Group getGroup() { return cGroup; }

		//"accuracy"
		public Keyword getAccuracyKeyword_0() { return cAccuracyKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"max-error-rate"
		public Keyword getMaxErrorRateKeyword_2() { return cMaxErrorRateKeyword_2; }

		//maxErrorRate=STRING
		public Assignment getMaxErrorRateAssignment_3() { return cMaxErrorRateAssignment_3; }

		//STRING
		public RuleCall getMaxErrorRateSTRINGTerminalRuleCall_3_0() { return cMaxErrorRateSTRINGTerminalRuleCall_3_0; }

		//escalation=Escalation?
		public Assignment getEscalationAssignment_4() { return cEscalationAssignment_4; }

		//Escalation
		public RuleCall getEscalationEscalationParserRuleCall_4_0() { return cEscalationEscalationParserRuleCall_4_0; }

		//("penalty" penalty=STRING)?
		public Group getGroup_5() { return cGroup_5; }

		//"penalty"
		public Keyword getPenaltyKeyword_5_0() { return cPenaltyKeyword_5_0; }

		//penalty=STRING
		public Assignment getPenaltyAssignment_5_1() { return cPenaltyAssignment_5_1; }

		//STRING
		public RuleCall getPenaltySTRINGTerminalRuleCall_5_1_0() { return cPenaltySTRINGTerminalRuleCall_5_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class LogRequirementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LogRequirement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLoggingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cMessageLogLevelKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLogLevelAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLogLevelLogRequirementKindEnumRuleCall_3_0 = (RuleCall)cLogLevelAssignment_3.eContents().get(0);
		private final Keyword cAdditionalLoggingRequirementsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAdditionalLoggingRequirementAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAdditionalLoggingRequirementSTRINGTerminalRuleCall_5_0 = (RuleCall)cAdditionalLoggingRequirementAssignment_5.eContents().get(0);
		
		//LogRequirement:
		//	"logging" "{" "message-log-level" logLevel=LogRequirementKind "additional-logging-requirements"
		//	additionalLoggingRequirement=STRING;
		public ParserRule getRule() { return rule; }

		//"logging" "{" "message-log-level" logLevel=LogRequirementKind "additional-logging-requirements"
		//additionalLoggingRequirement=STRING
		public Group getGroup() { return cGroup; }

		//"logging"
		public Keyword getLoggingKeyword_0() { return cLoggingKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"message-log-level"
		public Keyword getMessageLogLevelKeyword_2() { return cMessageLogLevelKeyword_2; }

		//logLevel=LogRequirementKind
		public Assignment getLogLevelAssignment_3() { return cLogLevelAssignment_3; }

		//LogRequirementKind
		public RuleCall getLogLevelLogRequirementKindEnumRuleCall_3_0() { return cLogLevelLogRequirementKindEnumRuleCall_3_0; }

		//"additional-logging-requirements"
		public Keyword getAdditionalLoggingRequirementsKeyword_4() { return cAdditionalLoggingRequirementsKeyword_4; }

		//additionalLoggingRequirement=STRING
		public Assignment getAdditionalLoggingRequirementAssignment_5() { return cAdditionalLoggingRequirementAssignment_5; }

		//STRING
		public RuleCall getAdditionalLoggingRequirementSTRINGTerminalRuleCall_5_0() { return cAdditionalLoggingRequirementSTRINGTerminalRuleCall_5_0; }
	}

	public class PercentileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Percentile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPercentileAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPercentileINTTerminalRuleCall_0_0 = (RuleCall)cPercentileAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cPercentSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Percentile:
		//	percentile=INT ("." INT)* "%";
		public ParserRule getRule() { return rule; }

		//percentile=INT ("." INT)* "%"
		public Group getGroup() { return cGroup; }

		//percentile=INT
		public Assignment getPercentileAssignment_0() { return cPercentileAssignment_0; }

		//INT
		public RuleCall getPercentileINTTerminalRuleCall_0_0() { return cPercentileINTTerminalRuleCall_0_0; }

		//("." INT)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1_1() { return cINTTerminalRuleCall_1_1; }

		//"%"
		public Keyword getPercentSignKeyword_2() { return cPercentSignKeyword_2; }
	}

	public class SecurityRequirementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SecurityRequirement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAuthenticationRequirementParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSigningRequirementParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEncryptionRequirementParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		/// * Security policy to be applied to the services * / SecurityRequirement:
		//	AuthenticationRequirement | SigningRequirement | EncryptionRequirement;
		public ParserRule getRule() { return rule; }

		//AuthenticationRequirement | SigningRequirement | EncryptionRequirement
		public Alternatives getAlternatives() { return cAlternatives; }

		//AuthenticationRequirement
		public RuleCall getAuthenticationRequirementParserRuleCall_0() { return cAuthenticationRequirementParserRuleCall_0; }

		//SigningRequirement
		public RuleCall getSigningRequirementParserRuleCall_1() { return cSigningRequirementParserRuleCall_1; }

		//EncryptionRequirement
		public RuleCall getEncryptionRequirementParserRuleCall_2() { return cEncryptionRequirementParserRuleCall_2; }
	}

	public class AuthenticationRequirementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AuthenticationRequirement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAuthenticationRequirementAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAuthenticationProcedureKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOptionalAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cOptionalOptionalKeyword_2_0 = (Keyword)cOptionalAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cAuthTokensKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cAuthTokensAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAuthTokensAuthTokenParserRuleCall_6_0 = (RuleCall)cAuthTokensAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cHashAlgorithmsKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cHashAlgorithmsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cHashAlgorithmsHashAlgorithmParserRuleCall_10_0 = (RuleCall)cHashAlgorithmsAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cUseNonceAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final Keyword cUseNonceUseNonceKeyword_12_0 = (Keyword)cUseNonceAssignment_12.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cIssuerKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cIssuerAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cIssuerSTRINGTerminalRuleCall_13_1_0 = (RuleCall)cIssuerAssignment_13_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		/// * Requirement, that defines how consumer are authenticated * / AuthenticationRequirement:
		//	{AuthenticationRequirement} "authentication-procedure" optional?="optional"? "{" "auth-tokens" "{"
		//	authTokens+=AuthToken+ "}" "hash-algorithms" "{" hashAlgorithms+=HashAlgorithm* "}" useNonce?="use-nonce"? ("issuer"
		//	issuer=STRING)? "}";
		public ParserRule getRule() { return rule; }

		//{AuthenticationRequirement} "authentication-procedure" optional?="optional"? "{" "auth-tokens" "{"
		//authTokens+=AuthToken+ "}" "hash-algorithms" "{" hashAlgorithms+=HashAlgorithm* "}" useNonce?="use-nonce"? ("issuer"
		//issuer=STRING)? "}"
		public Group getGroup() { return cGroup; }

		//{AuthenticationRequirement}
		public Action getAuthenticationRequirementAction_0() { return cAuthenticationRequirementAction_0; }

		//"authentication-procedure"
		public Keyword getAuthenticationProcedureKeyword_1() { return cAuthenticationProcedureKeyword_1; }

		//optional?="optional"?
		public Assignment getOptionalAssignment_2() { return cOptionalAssignment_2; }

		//"optional"
		public Keyword getOptionalOptionalKeyword_2_0() { return cOptionalOptionalKeyword_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//"auth-tokens"
		public Keyword getAuthTokensKeyword_4() { return cAuthTokensKeyword_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//authTokens+=AuthToken+
		public Assignment getAuthTokensAssignment_6() { return cAuthTokensAssignment_6; }

		//AuthToken
		public RuleCall getAuthTokensAuthTokenParserRuleCall_6_0() { return cAuthTokensAuthTokenParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }

		//"hash-algorithms"
		public Keyword getHashAlgorithmsKeyword_8() { return cHashAlgorithmsKeyword_8; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }

		//hashAlgorithms+=HashAlgorithm*
		public Assignment getHashAlgorithmsAssignment_10() { return cHashAlgorithmsAssignment_10; }

		//HashAlgorithm
		public RuleCall getHashAlgorithmsHashAlgorithmParserRuleCall_10_0() { return cHashAlgorithmsHashAlgorithmParserRuleCall_10_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }

		//useNonce?="use-nonce"?
		public Assignment getUseNonceAssignment_12() { return cUseNonceAssignment_12; }

		//"use-nonce"
		public Keyword getUseNonceUseNonceKeyword_12_0() { return cUseNonceUseNonceKeyword_12_0; }

		//("issuer" issuer=STRING)?
		public Group getGroup_13() { return cGroup_13; }

		//"issuer"
		public Keyword getIssuerKeyword_13_0() { return cIssuerKeyword_13_0; }

		//issuer=STRING
		public Assignment getIssuerAssignment_13_1() { return cIssuerAssignment_13_1; }

		//STRING
		public RuleCall getIssuerSTRINGTerminalRuleCall_13_1_0() { return cIssuerSTRINGTerminalRuleCall_13_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
	}

	public class AuthTokenElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AuthToken");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOptionalAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cOptionalOptionalKeyword_0_0 = (Keyword)cOptionalAssignment_0.eContents().get(0);
		private final Assignment cKindAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKindAuthTokenKindEnumRuleCall_1_0 = (RuleCall)cKindAssignment_1.eContents().get(0);
		
		//AuthToken:
		//	optional?="optional"? kind=AuthTokenKind;
		public ParserRule getRule() { return rule; }

		//optional?="optional"? kind=AuthTokenKind
		public Group getGroup() { return cGroup; }

		//optional?="optional"?
		public Assignment getOptionalAssignment_0() { return cOptionalAssignment_0; }

		//"optional"
		public Keyword getOptionalOptionalKeyword_0_0() { return cOptionalOptionalKeyword_0_0; }

		//kind=AuthTokenKind
		public Assignment getKindAssignment_1() { return cKindAssignment_1; }

		//AuthTokenKind
		public RuleCall getKindAuthTokenKindEnumRuleCall_1_0() { return cKindAuthTokenKindEnumRuleCall_1_0; }
	}

	public class HashAlgorithmElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HashAlgorithm");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOptionalAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cOptionalOptionalKeyword_0_0 = (Keyword)cOptionalAssignment_0.eContents().get(0);
		private final Assignment cUseBase64Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cUseBase64Base64EncodedKeyword_1_0 = (Keyword)cUseBase64Assignment_1.eContents().get(0);
		private final Assignment cKindAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cKindHashAlgKindEnumRuleCall_2_0 = (RuleCall)cKindAssignment_2.eContents().get(0);
		
		//HashAlgorithm:
		//	optional?="optional"? useBase64?="Base64-encoded"? kind=HashAlgKind;
		public ParserRule getRule() { return rule; }

		//optional?="optional"? useBase64?="Base64-encoded"? kind=HashAlgKind
		public Group getGroup() { return cGroup; }

		//optional?="optional"?
		public Assignment getOptionalAssignment_0() { return cOptionalAssignment_0; }

		//"optional"
		public Keyword getOptionalOptionalKeyword_0_0() { return cOptionalOptionalKeyword_0_0; }

		//useBase64?="Base64-encoded"?
		public Assignment getUseBase64Assignment_1() { return cUseBase64Assignment_1; }

		//"Base64-encoded"
		public Keyword getUseBase64Base64EncodedKeyword_1_0() { return cUseBase64Base64EncodedKeyword_1_0; }

		//kind=HashAlgKind
		public Assignment getKindAssignment_2() { return cKindAssignment_2; }

		//HashAlgKind
		public RuleCall getKindHashAlgKindEnumRuleCall_2_0() { return cKindHashAlgKindEnumRuleCall_2_0; }
	}

	public class SigningRequirementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SigningRequirement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSigningRequirementAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSigningPolicyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSupportedAlgorithmsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSupportedSigningAlgorithmsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSupportedSigningAlgorithmsSigningAlgothmEnumRuleCall_3_1_0 = (RuleCall)cSupportedSigningAlgorithmsAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cRequiresAlgorithmKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cRequiredSigningAlgorithmAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cRequiredSigningAlgorithmSigningAlgothmEnumRuleCall_4_1_0 = (RuleCall)cRequiredSigningAlgorithmAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSignedMessagePartsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSignedPartsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cSignedPartsMessagePartRefParserRuleCall_5_1_0 = (RuleCall)cSignedPartsAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cSignedPartsAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cSignedPartsMessagePartRefParserRuleCall_5_2_1_0 = (RuleCall)cSignedPartsAssignment_5_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		/// * How messages are signed, to verify their authenticity * / SigningRequirement:
		//	{SigningRequirement} "signing-policy" "{" ("supported-algorithms" supportedSigningAlgorithms+=SigningAlgothm+)?
		//	("requires-algorithm" requiredSigningAlgorithm=SigningAlgothm)? ("signed-message-parts" signedParts+=MessagePartRef
		//	("," signedParts+=MessagePartRef)*)? "}";
		public ParserRule getRule() { return rule; }

		//{SigningRequirement} "signing-policy" "{" ("supported-algorithms" supportedSigningAlgorithms+=SigningAlgothm+)?
		//("requires-algorithm" requiredSigningAlgorithm=SigningAlgothm)? ("signed-message-parts" signedParts+=MessagePartRef
		//("," signedParts+=MessagePartRef)*)? "}"
		public Group getGroup() { return cGroup; }

		//{SigningRequirement}
		public Action getSigningRequirementAction_0() { return cSigningRequirementAction_0; }

		//"signing-policy"
		public Keyword getSigningPolicyKeyword_1() { return cSigningPolicyKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("supported-algorithms" supportedSigningAlgorithms+=SigningAlgothm+)?
		public Group getGroup_3() { return cGroup_3; }

		//"supported-algorithms"
		public Keyword getSupportedAlgorithmsKeyword_3_0() { return cSupportedAlgorithmsKeyword_3_0; }

		//supportedSigningAlgorithms+=SigningAlgothm+
		public Assignment getSupportedSigningAlgorithmsAssignment_3_1() { return cSupportedSigningAlgorithmsAssignment_3_1; }

		//SigningAlgothm
		public RuleCall getSupportedSigningAlgorithmsSigningAlgothmEnumRuleCall_3_1_0() { return cSupportedSigningAlgorithmsSigningAlgothmEnumRuleCall_3_1_0; }

		//("requires-algorithm" requiredSigningAlgorithm=SigningAlgothm)?
		public Group getGroup_4() { return cGroup_4; }

		//"requires-algorithm"
		public Keyword getRequiresAlgorithmKeyword_4_0() { return cRequiresAlgorithmKeyword_4_0; }

		//requiredSigningAlgorithm=SigningAlgothm
		public Assignment getRequiredSigningAlgorithmAssignment_4_1() { return cRequiredSigningAlgorithmAssignment_4_1; }

		//SigningAlgothm
		public RuleCall getRequiredSigningAlgorithmSigningAlgothmEnumRuleCall_4_1_0() { return cRequiredSigningAlgorithmSigningAlgothmEnumRuleCall_4_1_0; }

		//("signed-message-parts" signedParts+=MessagePartRef ("," signedParts+=MessagePartRef)*)?
		public Group getGroup_5() { return cGroup_5; }

		//"signed-message-parts"
		public Keyword getSignedMessagePartsKeyword_5_0() { return cSignedMessagePartsKeyword_5_0; }

		//signedParts+=MessagePartRef
		public Assignment getSignedPartsAssignment_5_1() { return cSignedPartsAssignment_5_1; }

		//MessagePartRef
		public RuleCall getSignedPartsMessagePartRefParserRuleCall_5_1_0() { return cSignedPartsMessagePartRefParserRuleCall_5_1_0; }

		//("," signedParts+=MessagePartRef)*
		public Group getGroup_5_2() { return cGroup_5_2; }

		//","
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }

		//signedParts+=MessagePartRef
		public Assignment getSignedPartsAssignment_5_2_1() { return cSignedPartsAssignment_5_2_1; }

		//MessagePartRef
		public RuleCall getSignedPartsMessagePartRefParserRuleCall_5_2_1_0() { return cSignedPartsMessagePartRefParserRuleCall_5_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class MessagePartRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MessagePartRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMessagePartRefAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMessagePartRefMessagePartRefKindEnumRuleCall_0_0 = (RuleCall)cMessagePartRefAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cExpressionKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cPartRefExpressionAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cPartRefExpressionSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cPartRefExpressionAssignment_1_1.eContents().get(0);
		
		//MessagePartRef:
		//	messagePartRef=MessagePartRefKind ("expression" partRefExpression=STRING)?;
		public ParserRule getRule() { return rule; }

		//messagePartRef=MessagePartRefKind ("expression" partRefExpression=STRING)?
		public Group getGroup() { return cGroup; }

		//messagePartRef=MessagePartRefKind
		public Assignment getMessagePartRefAssignment_0() { return cMessagePartRefAssignment_0; }

		//MessagePartRefKind
		public RuleCall getMessagePartRefMessagePartRefKindEnumRuleCall_0_0() { return cMessagePartRefMessagePartRefKindEnumRuleCall_0_0; }

		//("expression" partRefExpression=STRING)?
		public Group getGroup_1() { return cGroup_1; }

		//"expression"
		public Keyword getExpressionKeyword_1_0() { return cExpressionKeyword_1_0; }

		//partRefExpression=STRING
		public Assignment getPartRefExpressionAssignment_1_1() { return cPartRefExpressionAssignment_1_1; }

		//STRING
		public RuleCall getPartRefExpressionSTRINGTerminalRuleCall_1_1_0() { return cPartRefExpressionSTRINGTerminalRuleCall_1_1_0; }
	}

	public class EncryptionRequirementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EncryptionRequirement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEncryptionRequirementAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEncryptionPolicyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSupportedAlgorithmsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSupportedCipherAlgorithmsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSupportedCipherAlgorithmsCipherAlgorithmKindEnumRuleCall_3_1_0 = (RuleCall)cSupportedCipherAlgorithmsAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cRequiresAlgorithmKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cRequiredCipherAlgorithmAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cRequiredCipherAlgorithmCipherAlgorithmKindEnumRuleCall_4_1_0 = (RuleCall)cRequiredCipherAlgorithmAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cEncryptedMessagePartsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cEncryptedPartsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cEncryptedPartsMessagePartRefParserRuleCall_5_1_0 = (RuleCall)cEncryptedPartsAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cEncryptedPartsAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cEncryptedPartsMessagePartRefParserRuleCall_5_2_1_0 = (RuleCall)cEncryptedPartsAssignment_5_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		/// * How messages are encrypted * / EncryptionRequirement:
		//	{EncryptionRequirement} "encryption-policy" "{" ("supported-algorithms"
		//	supportedCipherAlgorithms+=CipherAlgorithmKind+)? ("requires-algorithm" requiredCipherAlgorithm=CipherAlgorithmKind)?
		//	("encrypted-message-parts" encryptedParts+=MessagePartRef ("," encryptedParts+=MessagePartRef)*)? "}";
		public ParserRule getRule() { return rule; }

		//{EncryptionRequirement} "encryption-policy" "{" ("supported-algorithms"
		//supportedCipherAlgorithms+=CipherAlgorithmKind+)? ("requires-algorithm" requiredCipherAlgorithm=CipherAlgorithmKind)?
		//("encrypted-message-parts" encryptedParts+=MessagePartRef ("," encryptedParts+=MessagePartRef)*)? "}"
		public Group getGroup() { return cGroup; }

		//{EncryptionRequirement}
		public Action getEncryptionRequirementAction_0() { return cEncryptionRequirementAction_0; }

		//"encryption-policy"
		public Keyword getEncryptionPolicyKeyword_1() { return cEncryptionPolicyKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("supported-algorithms" supportedCipherAlgorithms+=CipherAlgorithmKind+)?
		public Group getGroup_3() { return cGroup_3; }

		//"supported-algorithms"
		public Keyword getSupportedAlgorithmsKeyword_3_0() { return cSupportedAlgorithmsKeyword_3_0; }

		//supportedCipherAlgorithms+=CipherAlgorithmKind+
		public Assignment getSupportedCipherAlgorithmsAssignment_3_1() { return cSupportedCipherAlgorithmsAssignment_3_1; }

		//CipherAlgorithmKind
		public RuleCall getSupportedCipherAlgorithmsCipherAlgorithmKindEnumRuleCall_3_1_0() { return cSupportedCipherAlgorithmsCipherAlgorithmKindEnumRuleCall_3_1_0; }

		//("requires-algorithm" requiredCipherAlgorithm=CipherAlgorithmKind)?
		public Group getGroup_4() { return cGroup_4; }

		//"requires-algorithm"
		public Keyword getRequiresAlgorithmKeyword_4_0() { return cRequiresAlgorithmKeyword_4_0; }

		//requiredCipherAlgorithm=CipherAlgorithmKind
		public Assignment getRequiredCipherAlgorithmAssignment_4_1() { return cRequiredCipherAlgorithmAssignment_4_1; }

		//CipherAlgorithmKind
		public RuleCall getRequiredCipherAlgorithmCipherAlgorithmKindEnumRuleCall_4_1_0() { return cRequiredCipherAlgorithmCipherAlgorithmKindEnumRuleCall_4_1_0; }

		//("encrypted-message-parts" encryptedParts+=MessagePartRef ("," encryptedParts+=MessagePartRef)*)?
		public Group getGroup_5() { return cGroup_5; }

		//"encrypted-message-parts"
		public Keyword getEncryptedMessagePartsKeyword_5_0() { return cEncryptedMessagePartsKeyword_5_0; }

		//encryptedParts+=MessagePartRef
		public Assignment getEncryptedPartsAssignment_5_1() { return cEncryptedPartsAssignment_5_1; }

		//MessagePartRef
		public RuleCall getEncryptedPartsMessagePartRefParserRuleCall_5_1_0() { return cEncryptedPartsMessagePartRefParserRuleCall_5_1_0; }

		//("," encryptedParts+=MessagePartRef)*
		public Group getGroup_5_2() { return cGroup_5_2; }

		//","
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }

		//encryptedParts+=MessagePartRef
		public Assignment getEncryptedPartsAssignment_5_2_1() { return cEncryptedPartsAssignment_5_2_1; }

		//MessagePartRef
		public RuleCall getEncryptedPartsMessagePartRefParserRuleCall_5_2_1_0() { return cEncryptedPartsMessagePartRefParserRuleCall_5_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class PriorityDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PriorityDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPriorityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cDescriptionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDescriptionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_3_0 = (RuleCall)cDescriptionAssignment_3.eContents().get(0);
		
		//PriorityDeclaration:
		//	"priority" name=ID "description" description=STRING;
		public ParserRule getRule() { return rule; }

		//"priority" name=ID "description" description=STRING
		public Group getGroup() { return cGroup; }

		//"priority"
		public Keyword getPriorityKeyword_0() { return cPriorityKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"description"
		public Keyword getDescriptionKeyword_2() { return cDescriptionKeyword_2; }

		//description=STRING
		public Assignment getDescriptionAssignment_3() { return cDescriptionAssignment_3; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_3_0() { return cDescriptionSTRINGTerminalRuleCall_3_0; }
	}

	public class EscalationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Escalation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEscalationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCauseKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cCauseAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cCauseSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cCauseAssignment_2_1.eContents().get(0);
		private final Keyword cEscalateToKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cEscalationTargetsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cEscalationTargetsUserCrossReference_5_0 = (CrossReference)cEscalationTargetsAssignment_5.eContents().get(0);
		private final RuleCall cEscalationTargetsUserQualifiedNameParserRuleCall_5_0_1 = (RuleCall)cEscalationTargetsUserCrossReference_5_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cProcedureKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cProcedureAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cProcedureSTRINGTerminalRuleCall_7_1_0 = (RuleCall)cProcedureAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Escalation:
		//	"escalation" "{" ("cause" cause=STRING)? "escalate-to" "{" escalationTargets+=[basedsl::User|QualifiedName]+ "}"
		//	("procedure" procedure=STRING)? "}";
		public ParserRule getRule() { return rule; }

		//"escalation" "{" ("cause" cause=STRING)? "escalate-to" "{" escalationTargets+=[basedsl::User|QualifiedName]+ "}"
		//("procedure" procedure=STRING)? "}"
		public Group getGroup() { return cGroup; }

		//"escalation"
		public Keyword getEscalationKeyword_0() { return cEscalationKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//("cause" cause=STRING)?
		public Group getGroup_2() { return cGroup_2; }

		//"cause"
		public Keyword getCauseKeyword_2_0() { return cCauseKeyword_2_0; }

		//cause=STRING
		public Assignment getCauseAssignment_2_1() { return cCauseAssignment_2_1; }

		//STRING
		public RuleCall getCauseSTRINGTerminalRuleCall_2_1_0() { return cCauseSTRINGTerminalRuleCall_2_1_0; }

		//"escalate-to"
		public Keyword getEscalateToKeyword_3() { return cEscalateToKeyword_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//escalationTargets+=[basedsl::User|QualifiedName]+
		public Assignment getEscalationTargetsAssignment_5() { return cEscalationTargetsAssignment_5; }

		//[basedsl::User|QualifiedName]
		public CrossReference getEscalationTargetsUserCrossReference_5_0() { return cEscalationTargetsUserCrossReference_5_0; }

		//QualifiedName
		public RuleCall getEscalationTargetsUserQualifiedNameParserRuleCall_5_0_1() { return cEscalationTargetsUserQualifiedNameParserRuleCall_5_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }

		//("procedure" procedure=STRING)?
		public Group getGroup_7() { return cGroup_7; }

		//"procedure"
		public Keyword getProcedureKeyword_7_0() { return cProcedureKeyword_7_0; }

		//procedure=STRING
		public Assignment getProcedureAssignment_7_1() { return cProcedureAssignment_7_1; }

		//STRING
		public RuleCall getProcedureSTRINGTerminalRuleCall_7_1_0() { return cProcedureSTRINGTerminalRuleCall_7_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class PartyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Party");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCustomerPartyParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cProviderPartyParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cThirdPartyParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Party:
		//	CustomerParty | ProviderParty | ThirdParty;
		public ParserRule getRule() { return rule; }

		//CustomerParty | ProviderParty | ThirdParty
		public Alternatives getAlternatives() { return cAlternatives; }

		//CustomerParty
		public RuleCall getCustomerPartyParserRuleCall_0() { return cCustomerPartyParserRuleCall_0; }

		//ProviderParty
		public RuleCall getProviderPartyParserRuleCall_1() { return cProviderPartyParserRuleCall_1; }

		//ThirdParty
		public RuleCall getThirdPartyParserRuleCall_2() { return cThirdPartyParserRuleCall_2; }
	}

	public class CustomerPartyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CustomerParty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCustomerPartyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameQualifiedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRepresentativesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRepresentativesRepresentativeParserRuleCall_3_0 = (RuleCall)cRepresentativesAssignment_3.eContents().get(0);
		private final Assignment cResponsibilitiesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cResponsibilitiesResponsibilityParserRuleCall_4_0 = (RuleCall)cResponsibilitiesAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CustomerParty:
		//	"customer-party" name=QualifiedName "{" representatives+=Representative+ responsibilities+=Responsibility+ "}";
		public ParserRule getRule() { return rule; }

		//"customer-party" name=QualifiedName "{" representatives+=Representative+ responsibilities+=Responsibility+ "}"
		public Group getGroup() { return cGroup; }

		//"customer-party"
		public Keyword getCustomerPartyKeyword_0() { return cCustomerPartyKeyword_0; }

		//name=QualifiedName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_1_0() { return cNameQualifiedNameParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//representatives+=Representative+
		public Assignment getRepresentativesAssignment_3() { return cRepresentativesAssignment_3; }

		//Representative
		public RuleCall getRepresentativesRepresentativeParserRuleCall_3_0() { return cRepresentativesRepresentativeParserRuleCall_3_0; }

		//responsibilities+=Responsibility+
		public Assignment getResponsibilitiesAssignment_4() { return cResponsibilitiesAssignment_4; }

		//Responsibility
		public RuleCall getResponsibilitiesResponsibilityParserRuleCall_4_0() { return cResponsibilitiesResponsibilityParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ProviderPartyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ProviderParty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProviderPartyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameQualifiedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRepresentativesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRepresentativesRepresentativeParserRuleCall_3_0 = (RuleCall)cRepresentativesAssignment_3.eContents().get(0);
		private final Assignment cResponsibilitiesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cResponsibilitiesResponsibilityParserRuleCall_4_0 = (RuleCall)cResponsibilitiesAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ProviderParty:
		//	"provider-party" name=QualifiedName "{" representatives+=Representative+ responsibilities+=Responsibility+ "}";
		public ParserRule getRule() { return rule; }

		//"provider-party" name=QualifiedName "{" representatives+=Representative+ responsibilities+=Responsibility+ "}"
		public Group getGroup() { return cGroup; }

		//"provider-party"
		public Keyword getProviderPartyKeyword_0() { return cProviderPartyKeyword_0; }

		//name=QualifiedName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_1_0() { return cNameQualifiedNameParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//representatives+=Representative+
		public Assignment getRepresentativesAssignment_3() { return cRepresentativesAssignment_3; }

		//Representative
		public RuleCall getRepresentativesRepresentativeParserRuleCall_3_0() { return cRepresentativesRepresentativeParserRuleCall_3_0; }

		//responsibilities+=Responsibility+
		public Assignment getResponsibilitiesAssignment_4() { return cResponsibilitiesAssignment_4; }

		//Responsibility
		public RuleCall getResponsibilitiesResponsibilityParserRuleCall_4_0() { return cResponsibilitiesResponsibilityParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ThirdPartyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ThirdParty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cThirdPartyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameQualifiedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cParticipationRoleKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRoleAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRoleSTRINGTerminalRuleCall_4_0 = (RuleCall)cRoleAssignment_4.eContents().get(0);
		private final Assignment cRepresentativesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cRepresentativesRepresentativeParserRuleCall_5_0 = (RuleCall)cRepresentativesAssignment_5.eContents().get(0);
		private final Assignment cResponsibilitiesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cResponsibilitiesResponsibilityParserRuleCall_6_0 = (RuleCall)cResponsibilitiesAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ThirdParty:
		//	"third-party" name=QualifiedName "{" "participation-role" role=STRING representatives+=Representative+
		//	responsibilities+=Responsibility+ "}";
		public ParserRule getRule() { return rule; }

		//"third-party" name=QualifiedName "{" "participation-role" role=STRING representatives+=Representative+
		//responsibilities+=Responsibility+ "}"
		public Group getGroup() { return cGroup; }

		//"third-party"
		public Keyword getThirdPartyKeyword_0() { return cThirdPartyKeyword_0; }

		//name=QualifiedName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_1_0() { return cNameQualifiedNameParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"participation-role"
		public Keyword getParticipationRoleKeyword_3() { return cParticipationRoleKeyword_3; }

		//role=STRING
		public Assignment getRoleAssignment_4() { return cRoleAssignment_4; }

		//STRING
		public RuleCall getRoleSTRINGTerminalRuleCall_4_0() { return cRoleSTRINGTerminalRuleCall_4_0; }

		//representatives+=Representative+
		public Assignment getRepresentativesAssignment_5() { return cRepresentativesAssignment_5; }

		//Representative
		public RuleCall getRepresentativesRepresentativeParserRuleCall_5_0() { return cRepresentativesRepresentativeParserRuleCall_5_0; }

		//responsibilities+=Responsibility+
		public Assignment getResponsibilitiesAssignment_6() { return cResponsibilitiesAssignment_6; }

		//Responsibility
		public RuleCall getResponsibilitiesResponsibilityParserRuleCall_6_0() { return cResponsibilitiesResponsibilityParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class RepresentativeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Representative");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cUserRefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cInlineRepresentativeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Representative:
		//	UserRef | InlineRepresentative;
		public ParserRule getRule() { return rule; }

		//UserRef | InlineRepresentative
		public Alternatives getAlternatives() { return cAlternatives; }

		//UserRef
		public RuleCall getUserRefParserRuleCall_0() { return cUserRefParserRuleCall_0; }

		//InlineRepresentative
		public RuleCall getInlineRepresentativeParserRuleCall_1() { return cInlineRepresentativeParserRuleCall_1; }
	}

	public class UserRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UserRef");
		private final Assignment cRepresentativeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cRepresentativeUserCrossReference_0 = (CrossReference)cRepresentativeAssignment.eContents().get(0);
		private final RuleCall cRepresentativeUserQualifiedNameParserRuleCall_0_1 = (RuleCall)cRepresentativeUserCrossReference_0.eContents().get(1);
		
		//UserRef:
		//	representative=[basedsl::User|QualifiedName];
		public ParserRule getRule() { return rule; }

		//representative=[basedsl::User|QualifiedName]
		public Assignment getRepresentativeAssignment() { return cRepresentativeAssignment; }

		//[basedsl::User|QualifiedName]
		public CrossReference getRepresentativeUserCrossReference_0() { return cRepresentativeUserCrossReference_0; }

		//QualifiedName
		public RuleCall getRepresentativeUserQualifiedNameParserRuleCall_0_1() { return cRepresentativeUserQualifiedNameParserRuleCall_0_1; }
	}

	public class InlineRepresentativeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InlineRepresentative");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInlineRepresentativeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRepresentativeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cFirstNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cFirstnameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cFirstnameSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cFirstnameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLastNameKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cLastnameAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cLastnameSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cLastnameAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cOrgUnitKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cOrgUnitAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cOrgUnitSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cOrgUnitAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cEmailKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cEmailAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cEmailSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cEmailAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cPhoneKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cPhoneAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cPhoneSTRINGTerminalRuleCall_7_1_0 = (RuleCall)cPhoneAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//InlineRepresentative:
		//	{InlineRepresentative} "representative" "{" ("first-name" firstname=STRING)? ("last-name" lastname=STRING)?
		//	("org-unit" orgUnit=STRING)? ("email" email=STRING)? ("phone" phone=STRING)? "}";
		public ParserRule getRule() { return rule; }

		//{InlineRepresentative} "representative" "{" ("first-name" firstname=STRING)? ("last-name" lastname=STRING)? ("org-unit"
		//orgUnit=STRING)? ("email" email=STRING)? ("phone" phone=STRING)? "}"
		public Group getGroup() { return cGroup; }

		//{InlineRepresentative}
		public Action getInlineRepresentativeAction_0() { return cInlineRepresentativeAction_0; }

		//"representative"
		public Keyword getRepresentativeKeyword_1() { return cRepresentativeKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("first-name" firstname=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"first-name"
		public Keyword getFirstNameKeyword_3_0() { return cFirstNameKeyword_3_0; }

		//firstname=STRING
		public Assignment getFirstnameAssignment_3_1() { return cFirstnameAssignment_3_1; }

		//STRING
		public RuleCall getFirstnameSTRINGTerminalRuleCall_3_1_0() { return cFirstnameSTRINGTerminalRuleCall_3_1_0; }

		//("last-name" lastname=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"last-name"
		public Keyword getLastNameKeyword_4_0() { return cLastNameKeyword_4_0; }

		//lastname=STRING
		public Assignment getLastnameAssignment_4_1() { return cLastnameAssignment_4_1; }

		//STRING
		public RuleCall getLastnameSTRINGTerminalRuleCall_4_1_0() { return cLastnameSTRINGTerminalRuleCall_4_1_0; }

		//("org-unit" orgUnit=STRING)?
		public Group getGroup_5() { return cGroup_5; }

		//"org-unit"
		public Keyword getOrgUnitKeyword_5_0() { return cOrgUnitKeyword_5_0; }

		//orgUnit=STRING
		public Assignment getOrgUnitAssignment_5_1() { return cOrgUnitAssignment_5_1; }

		//STRING
		public RuleCall getOrgUnitSTRINGTerminalRuleCall_5_1_0() { return cOrgUnitSTRINGTerminalRuleCall_5_1_0; }

		//("email" email=STRING)?
		public Group getGroup_6() { return cGroup_6; }

		//"email"
		public Keyword getEmailKeyword_6_0() { return cEmailKeyword_6_0; }

		//email=STRING
		public Assignment getEmailAssignment_6_1() { return cEmailAssignment_6_1; }

		//STRING
		public RuleCall getEmailSTRINGTerminalRuleCall_6_1_0() { return cEmailSTRINGTerminalRuleCall_6_1_0; }

		//("phone" phone=STRING)?
		public Group getGroup_7() { return cGroup_7; }

		//"phone"
		public Keyword getPhoneKeyword_7_0() { return cPhoneKeyword_7_0; }

		//phone=STRING
		public Assignment getPhoneAssignment_7_1() { return cPhoneAssignment_7_1; }

		//STRING
		public RuleCall getPhoneSTRINGTerminalRuleCall_7_1_0() { return cPhoneSTRINGTerminalRuleCall_7_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class ResponsibilityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Responsibility");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cResponsibilityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDescriptionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_1_0 = (RuleCall)cDescriptionAssignment_1.eContents().get(0);
		
		//Responsibility:
		//	"responsibility" description=STRING;
		public ParserRule getRule() { return rule; }

		//"responsibility" description=STRING
		public Group getGroup() { return cGroup; }

		//"responsibility"
		public Keyword getResponsibilityKeyword_0() { return cResponsibilityKeyword_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_1() { return cDescriptionAssignment_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_1_0() { return cDescriptionSTRINGTerminalRuleCall_1_0; }
	}

	public class ReportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Report");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cReportToKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cReportToAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cReportToUserCrossReference_4_0 = (CrossReference)cReportToAssignment_4.eContents().get(0);
		private final RuleCall cReportToUserQualifiedNameParserRuleCall_4_0_1 = (RuleCall)cReportToUserCrossReference_4_0.eContents().get(1);
		private final Keyword cContentsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cContentAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cContentSTRINGTerminalRuleCall_6_0 = (RuleCall)cContentAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Report:
		//	"report" name=ID "{" "report-to" reportTo=[basedsl::User|QualifiedName] "contents" content=STRING "}";
		public ParserRule getRule() { return rule; }

		//"report" name=ID "{" "report-to" reportTo=[basedsl::User|QualifiedName] "contents" content=STRING "}"
		public Group getGroup() { return cGroup; }

		//"report"
		public Keyword getReportKeyword_0() { return cReportKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"report-to"
		public Keyword getReportToKeyword_3() { return cReportToKeyword_3; }

		//reportTo=[basedsl::User|QualifiedName]
		public Assignment getReportToAssignment_4() { return cReportToAssignment_4; }

		//[basedsl::User|QualifiedName]
		public CrossReference getReportToUserCrossReference_4_0() { return cReportToUserCrossReference_4_0; }

		//QualifiedName
		public RuleCall getReportToUserQualifiedNameParserRuleCall_4_0_1() { return cReportToUserQualifiedNameParserRuleCall_4_0_1; }

		//"contents"
		public Keyword getContentsKeyword_5() { return cContentsKeyword_5; }

		//content=STRING
		public Assignment getContentAssignment_6() { return cContentAssignment_6; }

		//STRING
		public RuleCall getContentSTRINGTerminalRuleCall_6_0() { return cContentSTRINGTerminalRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	
	
	public class HashAlgKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "HashAlgKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMD5EnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMD5MD5Keyword_0_0 = (Keyword)cMD5EnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSHA1EnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSHA1SHA1Keyword_1_0 = (Keyword)cSHA1EnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSHA256EnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSHA256SHA256Keyword_2_0 = (Keyword)cSHA256EnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cRSAEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cRSARSAKeyword_3_0 = (Keyword)cRSAEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cPlainTextEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cPlainTextPlainTextKeyword_4_0 = (Keyword)cPlainTextEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum HashAlgKind:
		//	MD5 | SHA1 | SHA256 | RSA | PlainText;
		public EnumRule getRule() { return rule; }

		//MD5 | SHA1 | SHA256 | RSA | PlainText
		public Alternatives getAlternatives() { return cAlternatives; }

		//MD5
		public EnumLiteralDeclaration getMD5EnumLiteralDeclaration_0() { return cMD5EnumLiteralDeclaration_0; }

		//"MD5"
		public Keyword getMD5MD5Keyword_0_0() { return cMD5MD5Keyword_0_0; }

		//SHA1
		public EnumLiteralDeclaration getSHA1EnumLiteralDeclaration_1() { return cSHA1EnumLiteralDeclaration_1; }

		//"SHA1"
		public Keyword getSHA1SHA1Keyword_1_0() { return cSHA1SHA1Keyword_1_0; }

		//SHA256
		public EnumLiteralDeclaration getSHA256EnumLiteralDeclaration_2() { return cSHA256EnumLiteralDeclaration_2; }

		//"SHA256"
		public Keyword getSHA256SHA256Keyword_2_0() { return cSHA256SHA256Keyword_2_0; }

		//RSA
		public EnumLiteralDeclaration getRSAEnumLiteralDeclaration_3() { return cRSAEnumLiteralDeclaration_3; }

		//"RSA"
		public Keyword getRSARSAKeyword_3_0() { return cRSARSAKeyword_3_0; }

		//PlainText
		public EnumLiteralDeclaration getPlainTextEnumLiteralDeclaration_4() { return cPlainTextEnumLiteralDeclaration_4; }

		//"PlainText"
		public Keyword getPlainTextPlainTextKeyword_4_0() { return cPlainTextPlainTextKeyword_4_0; }
	}

	public class MessagePartRefKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "MessagePartRefKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cHeaderEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cHeaderHeaderKeyword_0_0 = (Keyword)cHeaderEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cBodyEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cBodyBodyKeyword_1_0 = (Keyword)cBodyEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cAttachmentsEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cAttachmentsAttachmentsKeyword_2_0 = (Keyword)cAttachmentsEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cAllEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cAllAllKeyword_3_0 = (Keyword)cAllEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cExpressionEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cExpressionExpressionKeyword_4_0 = (Keyword)cExpressionEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum MessagePartRefKind:
		//	header | body | attachments | all | expression;
		public EnumRule getRule() { return rule; }

		//header | body | attachments | all | expression
		public Alternatives getAlternatives() { return cAlternatives; }

		//header
		public EnumLiteralDeclaration getHeaderEnumLiteralDeclaration_0() { return cHeaderEnumLiteralDeclaration_0; }

		//"header"
		public Keyword getHeaderHeaderKeyword_0_0() { return cHeaderHeaderKeyword_0_0; }

		//body
		public EnumLiteralDeclaration getBodyEnumLiteralDeclaration_1() { return cBodyEnumLiteralDeclaration_1; }

		//"body"
		public Keyword getBodyBodyKeyword_1_0() { return cBodyBodyKeyword_1_0; }

		//attachments
		public EnumLiteralDeclaration getAttachmentsEnumLiteralDeclaration_2() { return cAttachmentsEnumLiteralDeclaration_2; }

		//"attachments"
		public Keyword getAttachmentsAttachmentsKeyword_2_0() { return cAttachmentsAttachmentsKeyword_2_0; }

		//all
		public EnumLiteralDeclaration getAllEnumLiteralDeclaration_3() { return cAllEnumLiteralDeclaration_3; }

		//"all"
		public Keyword getAllAllKeyword_3_0() { return cAllAllKeyword_3_0; }

		//expression
		public EnumLiteralDeclaration getExpressionEnumLiteralDeclaration_4() { return cExpressionEnumLiteralDeclaration_4; }

		//"expression"
		public Keyword getExpressionExpressionKeyword_4_0() { return cExpressionExpressionKeyword_4_0; }
	}

	public class SigningAlgothmElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "SigningAlgothm");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNONEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNONENONEKeyword_0_0 = (Keyword)cNONEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSHA1EnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSHA1SHA1Keyword_1_0 = (Keyword)cSHA1EnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSHA256EnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSHA256SHA256Keyword_2_0 = (Keyword)cSHA256EnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cMD5EnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cMD5MD5Keyword_3_0 = (Keyword)cMD5EnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cRSA_1_5EnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cRSA_1_5RSA_1_5Keyword_4_0 = (Keyword)cRSA_1_5EnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cAES128EnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cAES128AES128Keyword_5_0 = (Keyword)cAES128EnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cAES192EnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cAES192AES192Keyword_6_0 = (Keyword)cAES192EnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cAES256EnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cAES256AES256Keyword_7_0 = (Keyword)cAES256EnumLiteralDeclaration_7.eContents().get(0);
		
		//enum SigningAlgothm:
		//	NONE | SHA1 | SHA256 | MD5 | RSA_1_5 | AES128 | AES192 | AES256;
		public EnumRule getRule() { return rule; }

		//NONE | SHA1 | SHA256 | MD5 | RSA_1_5 | AES128 | AES192 | AES256
		public Alternatives getAlternatives() { return cAlternatives; }

		//NONE
		public EnumLiteralDeclaration getNONEEnumLiteralDeclaration_0() { return cNONEEnumLiteralDeclaration_0; }

		//"NONE"
		public Keyword getNONENONEKeyword_0_0() { return cNONENONEKeyword_0_0; }

		//SHA1
		public EnumLiteralDeclaration getSHA1EnumLiteralDeclaration_1() { return cSHA1EnumLiteralDeclaration_1; }

		//"SHA1"
		public Keyword getSHA1SHA1Keyword_1_0() { return cSHA1SHA1Keyword_1_0; }

		//SHA256
		public EnumLiteralDeclaration getSHA256EnumLiteralDeclaration_2() { return cSHA256EnumLiteralDeclaration_2; }

		//"SHA256"
		public Keyword getSHA256SHA256Keyword_2_0() { return cSHA256SHA256Keyword_2_0; }

		//MD5
		public EnumLiteralDeclaration getMD5EnumLiteralDeclaration_3() { return cMD5EnumLiteralDeclaration_3; }

		//"MD5"
		public Keyword getMD5MD5Keyword_3_0() { return cMD5MD5Keyword_3_0; }

		//RSA_1_5
		public EnumLiteralDeclaration getRSA_1_5EnumLiteralDeclaration_4() { return cRSA_1_5EnumLiteralDeclaration_4; }

		//"RSA_1_5"
		public Keyword getRSA_1_5RSA_1_5Keyword_4_0() { return cRSA_1_5RSA_1_5Keyword_4_0; }

		//AES128
		public EnumLiteralDeclaration getAES128EnumLiteralDeclaration_5() { return cAES128EnumLiteralDeclaration_5; }

		//"AES128"
		public Keyword getAES128AES128Keyword_5_0() { return cAES128AES128Keyword_5_0; }

		//AES192
		public EnumLiteralDeclaration getAES192EnumLiteralDeclaration_6() { return cAES192EnumLiteralDeclaration_6; }

		//"AES192"
		public Keyword getAES192AES192Keyword_6_0() { return cAES192AES192Keyword_6_0; }

		//AES256
		public EnumLiteralDeclaration getAES256EnumLiteralDeclaration_7() { return cAES256EnumLiteralDeclaration_7; }

		//"AES256"
		public Keyword getAES256AES256Keyword_7_0() { return cAES256AES256Keyword_7_0; }
	}

	public class CipherAlgorithmKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "CipherAlgorithmKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNONEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNONENONEKeyword_0_0 = (Keyword)cNONEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cBasic128EnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cBasic128Basic128Keyword_1_0 = (Keyword)cBasic128EnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBasic192EnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBasic192Basic192Keyword_2_0 = (Keyword)cBasic192EnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cBasic256EnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cBasic256Basic256Keyword_3_0 = (Keyword)cBasic256EnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDESEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDESDESKeyword_4_0 = (Keyword)cDESEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cTRIPLE_DESEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cTRIPLE_DES3DESKeyword_5_0 = (Keyword)cTRIPLE_DESEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cAES128EnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cAES128AES128Keyword_6_0 = (Keyword)cAES128EnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cAES256EnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cAES256AES256Keyword_7_0 = (Keyword)cAES256EnumLiteralDeclaration_7.eContents().get(0);
		
		//enum CipherAlgorithmKind:
		//	NONE | Basic128 | Basic192 | Basic256 | DES | TRIPLE_DES="3DES" | AES128 | AES256;
		public EnumRule getRule() { return rule; }

		//NONE | Basic128 | Basic192 | Basic256 | DES | TRIPLE_DES="3DES" | AES128 | AES256
		public Alternatives getAlternatives() { return cAlternatives; }

		//NONE
		public EnumLiteralDeclaration getNONEEnumLiteralDeclaration_0() { return cNONEEnumLiteralDeclaration_0; }

		//"NONE"
		public Keyword getNONENONEKeyword_0_0() { return cNONENONEKeyword_0_0; }

		//Basic128
		public EnumLiteralDeclaration getBasic128EnumLiteralDeclaration_1() { return cBasic128EnumLiteralDeclaration_1; }

		//"Basic128"
		public Keyword getBasic128Basic128Keyword_1_0() { return cBasic128Basic128Keyword_1_0; }

		//Basic192
		public EnumLiteralDeclaration getBasic192EnumLiteralDeclaration_2() { return cBasic192EnumLiteralDeclaration_2; }

		//"Basic192"
		public Keyword getBasic192Basic192Keyword_2_0() { return cBasic192Basic192Keyword_2_0; }

		//Basic256
		public EnumLiteralDeclaration getBasic256EnumLiteralDeclaration_3() { return cBasic256EnumLiteralDeclaration_3; }

		//"Basic256"
		public Keyword getBasic256Basic256Keyword_3_0() { return cBasic256Basic256Keyword_3_0; }

		//DES
		public EnumLiteralDeclaration getDESEnumLiteralDeclaration_4() { return cDESEnumLiteralDeclaration_4; }

		//"DES"
		public Keyword getDESDESKeyword_4_0() { return cDESDESKeyword_4_0; }

		//TRIPLE_DES="3DES"
		public EnumLiteralDeclaration getTRIPLE_DESEnumLiteralDeclaration_5() { return cTRIPLE_DESEnumLiteralDeclaration_5; }

		//"3DES"
		public Keyword getTRIPLE_DES3DESKeyword_5_0() { return cTRIPLE_DES3DESKeyword_5_0; }

		//AES128
		public EnumLiteralDeclaration getAES128EnumLiteralDeclaration_6() { return cAES128EnumLiteralDeclaration_6; }

		//"AES128"
		public Keyword getAES128AES128Keyword_6_0() { return cAES128AES128Keyword_6_0; }

		//AES256
		public EnumLiteralDeclaration getAES256EnumLiteralDeclaration_7() { return cAES256EnumLiteralDeclaration_7; }

		//"AES256"
		public Keyword getAES256AES256Keyword_7_0() { return cAES256AES256Keyword_7_0; }
	}

	public class AuthTokenKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "AuthTokenKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cUsernamePasswordEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cUsernamePasswordUsernamePasswordKeyword_0_0 = (Keyword)cUsernamePasswordEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSAMLEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSAMLSAMLKeyword_1_0 = (Keyword)cSAMLEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSAML2EnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSAML2SAML2Keyword_2_0 = (Keyword)cSAML2EnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cKerberosEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cKerberosKerberosKeyword_3_0 = (Keyword)cKerberosEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cSPNEGOEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cSPNEGOSPNEGOKeyword_4_0 = (Keyword)cSPNEGOEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cRELTokenEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cRELTokenRELTokenKeyword_5_0 = (Keyword)cRELTokenEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cX509CertificateEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cX509CertificateX509CertificateKeyword_6_0 = (Keyword)cX509CertificateEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cOAuthEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cOAuthOAuthKeyword_7_0 = (Keyword)cOAuthEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cOAuth2EnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cOAuth2OAuth2Keyword_8_0 = (Keyword)cOAuth2EnumLiteralDeclaration_8.eContents().get(0);
		
		//enum AuthTokenKind:
		//	UsernamePassword | SAML | SAML2 | Kerberos | SPNEGO | RELToken | X509Certificate | OAuth | OAuth2;
		public EnumRule getRule() { return rule; }

		//UsernamePassword | SAML | SAML2 | Kerberos | SPNEGO | RELToken | X509Certificate | OAuth | OAuth2
		public Alternatives getAlternatives() { return cAlternatives; }

		//UsernamePassword
		public EnumLiteralDeclaration getUsernamePasswordEnumLiteralDeclaration_0() { return cUsernamePasswordEnumLiteralDeclaration_0; }

		//"UsernamePassword"
		public Keyword getUsernamePasswordUsernamePasswordKeyword_0_0() { return cUsernamePasswordUsernamePasswordKeyword_0_0; }

		//SAML
		public EnumLiteralDeclaration getSAMLEnumLiteralDeclaration_1() { return cSAMLEnumLiteralDeclaration_1; }

		//"SAML"
		public Keyword getSAMLSAMLKeyword_1_0() { return cSAMLSAMLKeyword_1_0; }

		//SAML2
		public EnumLiteralDeclaration getSAML2EnumLiteralDeclaration_2() { return cSAML2EnumLiteralDeclaration_2; }

		//"SAML2"
		public Keyword getSAML2SAML2Keyword_2_0() { return cSAML2SAML2Keyword_2_0; }

		//Kerberos
		public EnumLiteralDeclaration getKerberosEnumLiteralDeclaration_3() { return cKerberosEnumLiteralDeclaration_3; }

		//"Kerberos"
		public Keyword getKerberosKerberosKeyword_3_0() { return cKerberosKerberosKeyword_3_0; }

		//SPNEGO
		public EnumLiteralDeclaration getSPNEGOEnumLiteralDeclaration_4() { return cSPNEGOEnumLiteralDeclaration_4; }

		//"SPNEGO"
		public Keyword getSPNEGOSPNEGOKeyword_4_0() { return cSPNEGOSPNEGOKeyword_4_0; }

		//RELToken
		public EnumLiteralDeclaration getRELTokenEnumLiteralDeclaration_5() { return cRELTokenEnumLiteralDeclaration_5; }

		//"RELToken"
		public Keyword getRELTokenRELTokenKeyword_5_0() { return cRELTokenRELTokenKeyword_5_0; }

		//X509Certificate
		public EnumLiteralDeclaration getX509CertificateEnumLiteralDeclaration_6() { return cX509CertificateEnumLiteralDeclaration_6; }

		//"X509Certificate"
		public Keyword getX509CertificateX509CertificateKeyword_6_0() { return cX509CertificateX509CertificateKeyword_6_0; }

		//OAuth
		public EnumLiteralDeclaration getOAuthEnumLiteralDeclaration_7() { return cOAuthEnumLiteralDeclaration_7; }

		//"OAuth"
		public Keyword getOAuthOAuthKeyword_7_0() { return cOAuthOAuthKeyword_7_0; }

		//OAuth2
		public EnumLiteralDeclaration getOAuth2EnumLiteralDeclaration_8() { return cOAuth2EnumLiteralDeclaration_8; }

		//"OAuth2"
		public Keyword getOAuth2OAuth2Keyword_8_0() { return cOAuth2OAuth2Keyword_8_0; }
	}

	public class LogRequirementKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "LogRequirementKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNoneEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNoneNoneKeyword_0_0 = (Keyword)cNoneEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cHeaderEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cHeaderHeaderKeyword_1_0 = (Keyword)cHeaderEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cAllEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cAllAllKeyword_2_0 = (Keyword)cAllEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum LogRequirementKind:
		//	none | header | all;
		public EnumRule getRule() { return rule; }

		//none | header | all
		public Alternatives getAlternatives() { return cAlternatives; }

		//none
		public EnumLiteralDeclaration getNoneEnumLiteralDeclaration_0() { return cNoneEnumLiteralDeclaration_0; }

		//"none"
		public Keyword getNoneNoneKeyword_0_0() { return cNoneNoneKeyword_0_0; }

		//header
		public EnumLiteralDeclaration getHeaderEnumLiteralDeclaration_1() { return cHeaderEnumLiteralDeclaration_1; }

		//"header"
		public Keyword getHeaderHeaderKeyword_1_0() { return cHeaderHeaderKeyword_1_0; }

		//all
		public EnumLiteralDeclaration getAllEnumLiteralDeclaration_2() { return cAllEnumLiteralDeclaration_2; }

		//"all"
		public Keyword getAllAllKeyword_2_0() { return cAllAllKeyword_2_0; }
	}

	public class ReliablilityKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ReliablilityKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEXACTLY_ONCEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEXACTLY_ONCEExactlyOnceKeyword_0_0 = (Keyword)cEXACTLY_ONCEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cAT_MOST_ONCEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cAT_MOST_ONCEAtMostOnceKeyword_1_0 = (Keyword)cAT_MOST_ONCEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cAT_LEAST_ONCEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cAT_LEAST_ONCEAtLeastOnceKeyword_2_0 = (Keyword)cAT_LEAST_ONCEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cBEST_EFFORTEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cBEST_EFFORTBestEffortKeyword_3_0 = (Keyword)cBEST_EFFORTEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum ReliablilityKind:
		//	EXACTLY_ONCE="exactly-once" | AT_MOST_ONCE="at-most-once" | AT_LEAST_ONCE="at-least-once" | BEST_EFFORT="best-effort";
		public EnumRule getRule() { return rule; }

		//EXACTLY_ONCE="exactly-once" | AT_MOST_ONCE="at-most-once" | AT_LEAST_ONCE="at-least-once" | BEST_EFFORT="best-effort"
		public Alternatives getAlternatives() { return cAlternatives; }

		//EXACTLY_ONCE="exactly-once"
		public EnumLiteralDeclaration getEXACTLY_ONCEEnumLiteralDeclaration_0() { return cEXACTLY_ONCEEnumLiteralDeclaration_0; }

		//"exactly-once"
		public Keyword getEXACTLY_ONCEExactlyOnceKeyword_0_0() { return cEXACTLY_ONCEExactlyOnceKeyword_0_0; }

		//AT_MOST_ONCE="at-most-once"
		public EnumLiteralDeclaration getAT_MOST_ONCEEnumLiteralDeclaration_1() { return cAT_MOST_ONCEEnumLiteralDeclaration_1; }

		//"at-most-once"
		public Keyword getAT_MOST_ONCEAtMostOnceKeyword_1_0() { return cAT_MOST_ONCEAtMostOnceKeyword_1_0; }

		//AT_LEAST_ONCE="at-least-once"
		public EnumLiteralDeclaration getAT_LEAST_ONCEEnumLiteralDeclaration_2() { return cAT_LEAST_ONCEEnumLiteralDeclaration_2; }

		//"at-least-once"
		public Keyword getAT_LEAST_ONCEAtLeastOnceKeyword_2_0() { return cAT_LEAST_ONCEAtLeastOnceKeyword_2_0; }

		//BEST_EFFORT="best-effort"
		public EnumLiteralDeclaration getBEST_EFFORTEnumLiteralDeclaration_3() { return cBEST_EFFORTEnumLiteralDeclaration_3; }

		//"best-effort"
		public Keyword getBEST_EFFORTBestEffortKeyword_3_0() { return cBEST_EFFORTBestEffortKeyword_3_0; }
	}
	
	private SlaModelElements pSlaModel;
	private SLAElements pSLA;
	private CostElements pCost;
	private ServiceQualityPropertyElements pServiceQualityProperty;
	private AvailabilityElements pAvailability;
	private ThroughputElements pThroughput;
	private LatencyElements pLatency;
	private MaxDownTimeElements pMaxDownTime;
	private CapacityRequirementElements pCapacityRequirement;
	private ReliablityRequirementElements pReliablityRequirement;
	private AccuracyRequirementElements pAccuracyRequirement;
	private LogRequirementElements pLogRequirement;
	private PercentileElements pPercentile;
	private SecurityRequirementElements pSecurityRequirement;
	private AuthenticationRequirementElements pAuthenticationRequirement;
	private AuthTokenElements pAuthToken;
	private HashAlgorithmElements pHashAlgorithm;
	private HashAlgKindElements unknownRuleHashAlgKind;
	private SigningRequirementElements pSigningRequirement;
	private MessagePartRefElements pMessagePartRef;
	private MessagePartRefKindElements unknownRuleMessagePartRefKind;
	private SigningAlgothmElements unknownRuleSigningAlgothm;
	private EncryptionRequirementElements pEncryptionRequirement;
	private CipherAlgorithmKindElements unknownRuleCipherAlgorithmKind;
	private AuthTokenKindElements unknownRuleAuthTokenKind;
	private LogRequirementKindElements unknownRuleLogRequirementKind;
	private ReliablilityKindElements unknownRuleReliablilityKind;
	private PriorityDeclarationElements pPriorityDeclaration;
	private EscalationElements pEscalation;
	private PartyElements pParty;
	private CustomerPartyElements pCustomerParty;
	private ProviderPartyElements pProviderParty;
	private ThirdPartyElements pThirdParty;
	private RepresentativeElements pRepresentative;
	private UserRefElements pUserRef;
	private InlineRepresentativeElements pInlineRepresentative;
	private ResponsibilityElements pResponsibility;
	private ReportElements pReport;
	
	private final Grammar grammar;

	private SOABaseDslGrammarAccess gaSOABaseDsl;

	@Inject
	public SLADslGrammarAccess(GrammarProvider grammarProvider,
		SOABaseDslGrammarAccess gaSOABaseDsl) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaSOABaseDsl = gaSOABaseDsl;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.fornax.soa.sladsl.SLADsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public SOABaseDslGrammarAccess getSOABaseDslGrammarAccess() {
		return gaSOABaseDsl;
	}

	
	//SlaModel:
	//	agreements+=SLA*;
	public SlaModelElements getSlaModelAccess() {
		return (pSlaModel != null) ? pSlaModel : (pSlaModel = new SlaModelElements());
	}
	
	public ParserRule getSlaModelRule() {
		return getSlaModelAccess().getRule();
	}

	//SLA:
	//	"service-level-agreement" name=QualifiedName version=Version? "{" "effective-date" effectiveDate=STRING
	//	("effective-until" effectiveUntil=STRING)? parties+=Party* ("scope" scope=STRING)? ("preample" preample=STRING)?
	//	("description" description=STRING)? ("restrictions" restrictions=STRING)? priorities+=PriorityDeclaration*
	//	("applies-to" "{" appliesTo+=AssetRef* "}")? costs=Cost? ("service-quality-requirements" "{"
	//	serviceQualityProperties+=ServiceQualityProperty* "}") ("data-security-and-protection" "{" ("general-security-terms"
	//	dataSecProtClause=STRING)? ("security-requirements" "{" securityRequirements+=SecurityRequirement* "}") "}")?
	//	("additional-services" additionalServices=STRING)? escalationProcedure=Escalation? ("cancellation"
	//	cancellation=STRING)? ("extraordinary-cancellation" extraordinaryCancellation=STRING)? reports+=Report*
	//	("subscriptions" "{" subscriptions+=[basedsl::User|QualifiedName]* "}")? ("tags" tags+=[semanticsDsl::Tag]+)* "}";
	public SLAElements getSLAAccess() {
		return (pSLA != null) ? pSLA : (pSLA = new SLAElements());
	}
	
	public ParserRule getSLARule() {
		return getSLAAccess().getRule();
	}

	//Cost:
	//	"costs" "{" "amount" costsAmount=STRING "billed-per-unit" billedUnit=STRING ("effort-accounting"
	//	effortAccounting=STRING)? escalation=Escalation? ("penalty" penalty=STRING)? "}";
	public CostElements getCostAccess() {
		return (pCost != null) ? pCost : (pCost = new CostElements());
	}
	
	public ParserRule getCostRule() {
		return getCostAccess().getRule();
	}

	//ServiceQualityProperty:
	//	Availability | Throughput | Latency | MaxDownTime | CapacityRequirement | AccuracyRequirement | ReliablityRequirement
	//	| LogRequirement;
	public ServiceQualityPropertyElements getServiceQualityPropertyAccess() {
		return (pServiceQualityProperty != null) ? pServiceQualityProperty : (pServiceQualityProperty = new ServiceQualityPropertyElements());
	}
	
	public ParserRule getServiceQualityPropertyRule() {
		return getServiceQualityPropertyAccess().getRule();
	}

	//Availability:
	//	"availability" "{" "availability" availability=STRING ("mean-time-between-failure" mtbf=STRING)?
	//	("mean-time-to-repair" mttr=STRING mttrPercentile=Percentile?)? ("regular-down-times" regularDownTimes=STRING)? "}";
	public AvailabilityElements getAvailabilityAccess() {
		return (pAvailability != null) ? pAvailability : (pAvailability = new AvailabilityElements());
	}
	
	public ParserRule getAvailabilityRule() {
		return getAvailabilityAccess().getRule();
	}

	//Throughput:
	//	"throughput" "{" "throughput" definition=STRING "score-to-be-kept" score=STRING escalation=Escalation? ("penalty"
	//	penalty=STRING)? "}";
	public ThroughputElements getThroughputAccess() {
		return (pThroughput != null) ? pThroughput : (pThroughput = new ThroughputElements());
	}
	
	public ParserRule getThroughputRule() {
		return getThroughputAccess().getRule();
	}

	//Latency:
	//	"latency" "{" "latency" latency="STRING" "percentile" percentile=Percentile escalation=Escalation? ("penalty"
	//	penalty=STRING)? "}";
	public LatencyElements getLatencyAccess() {
		return (pLatency != null) ? pLatency : (pLatency = new LatencyElements());
	}
	
	public ParserRule getLatencyRule() {
		return getLatencyAccess().getRule();
	}

	//MaxDownTime:
	//	"max-downtime" "{" "duration" definition=STRING escalation=Escalation? ("penalty" penalty=STRING)? "}";
	public MaxDownTimeElements getMaxDownTimeAccess() {
		return (pMaxDownTime != null) ? pMaxDownTime : (pMaxDownTime = new MaxDownTimeElements());
	}
	
	public ParserRule getMaxDownTimeRule() {
		return getMaxDownTimeAccess().getRule();
	}

	//CapacityRequirement:
	//	"capacity" "{" {CapacityRequirement} ("num-of-requests" requestNum=STRING "per" timeUnit=STRING)? ("message-size"
	//	messageSize=STRING)? escalation=Escalation? ("penalty" penalty=STRING)? "}";
	public CapacityRequirementElements getCapacityRequirementAccess() {
		return (pCapacityRequirement != null) ? pCapacityRequirement : (pCapacityRequirement = new CapacityRequirementElements());
	}
	
	public ParserRule getCapacityRequirementRule() {
		return getCapacityRequirementAccess().getRule();
	}

	//ReliablityRequirement:
	//	"message-exchange-reliability" "{" reliability=ReliablilityKind inOrderDelivery?="in-order-delivery"? "}";
	public ReliablityRequirementElements getReliablityRequirementAccess() {
		return (pReliablityRequirement != null) ? pReliablityRequirement : (pReliablityRequirement = new ReliablityRequirementElements());
	}
	
	public ParserRule getReliablityRequirementRule() {
		return getReliablityRequirementAccess().getRule();
	}

	//AccuracyRequirement:
	//	"accuracy" "{" "max-error-rate" maxErrorRate=STRING escalation=Escalation? ("penalty" penalty=STRING)? "}";
	public AccuracyRequirementElements getAccuracyRequirementAccess() {
		return (pAccuracyRequirement != null) ? pAccuracyRequirement : (pAccuracyRequirement = new AccuracyRequirementElements());
	}
	
	public ParserRule getAccuracyRequirementRule() {
		return getAccuracyRequirementAccess().getRule();
	}

	//LogRequirement:
	//	"logging" "{" "message-log-level" logLevel=LogRequirementKind "additional-logging-requirements"
	//	additionalLoggingRequirement=STRING;
	public LogRequirementElements getLogRequirementAccess() {
		return (pLogRequirement != null) ? pLogRequirement : (pLogRequirement = new LogRequirementElements());
	}
	
	public ParserRule getLogRequirementRule() {
		return getLogRequirementAccess().getRule();
	}

	//Percentile:
	//	percentile=INT ("." INT)* "%";
	public PercentileElements getPercentileAccess() {
		return (pPercentile != null) ? pPercentile : (pPercentile = new PercentileElements());
	}
	
	public ParserRule getPercentileRule() {
		return getPercentileAccess().getRule();
	}

	/// * Security policy to be applied to the services * / SecurityRequirement:
	//	AuthenticationRequirement | SigningRequirement | EncryptionRequirement;
	public SecurityRequirementElements getSecurityRequirementAccess() {
		return (pSecurityRequirement != null) ? pSecurityRequirement : (pSecurityRequirement = new SecurityRequirementElements());
	}
	
	public ParserRule getSecurityRequirementRule() {
		return getSecurityRequirementAccess().getRule();
	}

	/// * Requirement, that defines how consumer are authenticated * / AuthenticationRequirement:
	//	{AuthenticationRequirement} "authentication-procedure" optional?="optional"? "{" "auth-tokens" "{"
	//	authTokens+=AuthToken+ "}" "hash-algorithms" "{" hashAlgorithms+=HashAlgorithm* "}" useNonce?="use-nonce"? ("issuer"
	//	issuer=STRING)? "}";
	public AuthenticationRequirementElements getAuthenticationRequirementAccess() {
		return (pAuthenticationRequirement != null) ? pAuthenticationRequirement : (pAuthenticationRequirement = new AuthenticationRequirementElements());
	}
	
	public ParserRule getAuthenticationRequirementRule() {
		return getAuthenticationRequirementAccess().getRule();
	}

	//AuthToken:
	//	optional?="optional"? kind=AuthTokenKind;
	public AuthTokenElements getAuthTokenAccess() {
		return (pAuthToken != null) ? pAuthToken : (pAuthToken = new AuthTokenElements());
	}
	
	public ParserRule getAuthTokenRule() {
		return getAuthTokenAccess().getRule();
	}

	//HashAlgorithm:
	//	optional?="optional"? useBase64?="Base64-encoded"? kind=HashAlgKind;
	public HashAlgorithmElements getHashAlgorithmAccess() {
		return (pHashAlgorithm != null) ? pHashAlgorithm : (pHashAlgorithm = new HashAlgorithmElements());
	}
	
	public ParserRule getHashAlgorithmRule() {
		return getHashAlgorithmAccess().getRule();
	}

	//enum HashAlgKind:
	//	MD5 | SHA1 | SHA256 | RSA | PlainText;
	public HashAlgKindElements getHashAlgKindAccess() {
		return (unknownRuleHashAlgKind != null) ? unknownRuleHashAlgKind : (unknownRuleHashAlgKind = new HashAlgKindElements());
	}
	
	public EnumRule getHashAlgKindRule() {
		return getHashAlgKindAccess().getRule();
	}

	/// * How messages are signed, to verify their authenticity * / SigningRequirement:
	//	{SigningRequirement} "signing-policy" "{" ("supported-algorithms" supportedSigningAlgorithms+=SigningAlgothm+)?
	//	("requires-algorithm" requiredSigningAlgorithm=SigningAlgothm)? ("signed-message-parts" signedParts+=MessagePartRef
	//	("," signedParts+=MessagePartRef)*)? "}";
	public SigningRequirementElements getSigningRequirementAccess() {
		return (pSigningRequirement != null) ? pSigningRequirement : (pSigningRequirement = new SigningRequirementElements());
	}
	
	public ParserRule getSigningRequirementRule() {
		return getSigningRequirementAccess().getRule();
	}

	//MessagePartRef:
	//	messagePartRef=MessagePartRefKind ("expression" partRefExpression=STRING)?;
	public MessagePartRefElements getMessagePartRefAccess() {
		return (pMessagePartRef != null) ? pMessagePartRef : (pMessagePartRef = new MessagePartRefElements());
	}
	
	public ParserRule getMessagePartRefRule() {
		return getMessagePartRefAccess().getRule();
	}

	//enum MessagePartRefKind:
	//	header | body | attachments | all | expression;
	public MessagePartRefKindElements getMessagePartRefKindAccess() {
		return (unknownRuleMessagePartRefKind != null) ? unknownRuleMessagePartRefKind : (unknownRuleMessagePartRefKind = new MessagePartRefKindElements());
	}
	
	public EnumRule getMessagePartRefKindRule() {
		return getMessagePartRefKindAccess().getRule();
	}

	//enum SigningAlgothm:
	//	NONE | SHA1 | SHA256 | MD5 | RSA_1_5 | AES128 | AES192 | AES256;
	public SigningAlgothmElements getSigningAlgothmAccess() {
		return (unknownRuleSigningAlgothm != null) ? unknownRuleSigningAlgothm : (unknownRuleSigningAlgothm = new SigningAlgothmElements());
	}
	
	public EnumRule getSigningAlgothmRule() {
		return getSigningAlgothmAccess().getRule();
	}

	/// * How messages are encrypted * / EncryptionRequirement:
	//	{EncryptionRequirement} "encryption-policy" "{" ("supported-algorithms"
	//	supportedCipherAlgorithms+=CipherAlgorithmKind+)? ("requires-algorithm" requiredCipherAlgorithm=CipherAlgorithmKind)?
	//	("encrypted-message-parts" encryptedParts+=MessagePartRef ("," encryptedParts+=MessagePartRef)*)? "}";
	public EncryptionRequirementElements getEncryptionRequirementAccess() {
		return (pEncryptionRequirement != null) ? pEncryptionRequirement : (pEncryptionRequirement = new EncryptionRequirementElements());
	}
	
	public ParserRule getEncryptionRequirementRule() {
		return getEncryptionRequirementAccess().getRule();
	}

	//enum CipherAlgorithmKind:
	//	NONE | Basic128 | Basic192 | Basic256 | DES | TRIPLE_DES="3DES" | AES128 | AES256;
	public CipherAlgorithmKindElements getCipherAlgorithmKindAccess() {
		return (unknownRuleCipherAlgorithmKind != null) ? unknownRuleCipherAlgorithmKind : (unknownRuleCipherAlgorithmKind = new CipherAlgorithmKindElements());
	}
	
	public EnumRule getCipherAlgorithmKindRule() {
		return getCipherAlgorithmKindAccess().getRule();
	}

	//enum AuthTokenKind:
	//	UsernamePassword | SAML | SAML2 | Kerberos | SPNEGO | RELToken | X509Certificate | OAuth | OAuth2;
	public AuthTokenKindElements getAuthTokenKindAccess() {
		return (unknownRuleAuthTokenKind != null) ? unknownRuleAuthTokenKind : (unknownRuleAuthTokenKind = new AuthTokenKindElements());
	}
	
	public EnumRule getAuthTokenKindRule() {
		return getAuthTokenKindAccess().getRule();
	}

	//enum LogRequirementKind:
	//	none | header | all;
	public LogRequirementKindElements getLogRequirementKindAccess() {
		return (unknownRuleLogRequirementKind != null) ? unknownRuleLogRequirementKind : (unknownRuleLogRequirementKind = new LogRequirementKindElements());
	}
	
	public EnumRule getLogRequirementKindRule() {
		return getLogRequirementKindAccess().getRule();
	}

	//enum ReliablilityKind:
	//	EXACTLY_ONCE="exactly-once" | AT_MOST_ONCE="at-most-once" | AT_LEAST_ONCE="at-least-once" | BEST_EFFORT="best-effort";
	public ReliablilityKindElements getReliablilityKindAccess() {
		return (unknownRuleReliablilityKind != null) ? unknownRuleReliablilityKind : (unknownRuleReliablilityKind = new ReliablilityKindElements());
	}
	
	public EnumRule getReliablilityKindRule() {
		return getReliablilityKindAccess().getRule();
	}

	//PriorityDeclaration:
	//	"priority" name=ID "description" description=STRING;
	public PriorityDeclarationElements getPriorityDeclarationAccess() {
		return (pPriorityDeclaration != null) ? pPriorityDeclaration : (pPriorityDeclaration = new PriorityDeclarationElements());
	}
	
	public ParserRule getPriorityDeclarationRule() {
		return getPriorityDeclarationAccess().getRule();
	}

	//Escalation:
	//	"escalation" "{" ("cause" cause=STRING)? "escalate-to" "{" escalationTargets+=[basedsl::User|QualifiedName]+ "}"
	//	("procedure" procedure=STRING)? "}";
	public EscalationElements getEscalationAccess() {
		return (pEscalation != null) ? pEscalation : (pEscalation = new EscalationElements());
	}
	
	public ParserRule getEscalationRule() {
		return getEscalationAccess().getRule();
	}

	//Party:
	//	CustomerParty | ProviderParty | ThirdParty;
	public PartyElements getPartyAccess() {
		return (pParty != null) ? pParty : (pParty = new PartyElements());
	}
	
	public ParserRule getPartyRule() {
		return getPartyAccess().getRule();
	}

	//CustomerParty:
	//	"customer-party" name=QualifiedName "{" representatives+=Representative+ responsibilities+=Responsibility+ "}";
	public CustomerPartyElements getCustomerPartyAccess() {
		return (pCustomerParty != null) ? pCustomerParty : (pCustomerParty = new CustomerPartyElements());
	}
	
	public ParserRule getCustomerPartyRule() {
		return getCustomerPartyAccess().getRule();
	}

	//ProviderParty:
	//	"provider-party" name=QualifiedName "{" representatives+=Representative+ responsibilities+=Responsibility+ "}";
	public ProviderPartyElements getProviderPartyAccess() {
		return (pProviderParty != null) ? pProviderParty : (pProviderParty = new ProviderPartyElements());
	}
	
	public ParserRule getProviderPartyRule() {
		return getProviderPartyAccess().getRule();
	}

	//ThirdParty:
	//	"third-party" name=QualifiedName "{" "participation-role" role=STRING representatives+=Representative+
	//	responsibilities+=Responsibility+ "}";
	public ThirdPartyElements getThirdPartyAccess() {
		return (pThirdParty != null) ? pThirdParty : (pThirdParty = new ThirdPartyElements());
	}
	
	public ParserRule getThirdPartyRule() {
		return getThirdPartyAccess().getRule();
	}

	//Representative:
	//	UserRef | InlineRepresentative;
	public RepresentativeElements getRepresentativeAccess() {
		return (pRepresentative != null) ? pRepresentative : (pRepresentative = new RepresentativeElements());
	}
	
	public ParserRule getRepresentativeRule() {
		return getRepresentativeAccess().getRule();
	}

	//UserRef:
	//	representative=[basedsl::User|QualifiedName];
	public UserRefElements getUserRefAccess() {
		return (pUserRef != null) ? pUserRef : (pUserRef = new UserRefElements());
	}
	
	public ParserRule getUserRefRule() {
		return getUserRefAccess().getRule();
	}

	//InlineRepresentative:
	//	{InlineRepresentative} "representative" "{" ("first-name" firstname=STRING)? ("last-name" lastname=STRING)?
	//	("org-unit" orgUnit=STRING)? ("email" email=STRING)? ("phone" phone=STRING)? "}";
	public InlineRepresentativeElements getInlineRepresentativeAccess() {
		return (pInlineRepresentative != null) ? pInlineRepresentative : (pInlineRepresentative = new InlineRepresentativeElements());
	}
	
	public ParserRule getInlineRepresentativeRule() {
		return getInlineRepresentativeAccess().getRule();
	}

	//Responsibility:
	//	"responsibility" description=STRING;
	public ResponsibilityElements getResponsibilityAccess() {
		return (pResponsibility != null) ? pResponsibility : (pResponsibility = new ResponsibilityElements());
	}
	
	public ParserRule getResponsibilityRule() {
		return getResponsibilityAccess().getRule();
	}

	//Report:
	//	"report" name=ID "{" "report-to" reportTo=[basedsl::User|QualifiedName] "contents" content=STRING "}";
	public ReportElements getReportAccess() {
		return (pReport != null) ? pReport : (pReport = new ReportElements());
	}
	
	public ParserRule getReportRule() {
		return getReportAccess().getRule();
	}

	/// * Java like imports * / Import:
	//	"import" importedNamespace=QualifiedNameWithWildCard;
	public SOABaseDslGrammarAccess.ImportElements getImportAccess() {
		return gaSOABaseDsl.getImportAccess();
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}

	/// * 
	// * Version numbers, some postfixes are treated in a special way:
	// * <ul>
	// * 	<li>Final:		treated as if the version number ends with ".0"</li>
	// * 	<li>RC:			release candidate, may end with a number</li>
	// * 	<li>CR:			release candidate (snynonym for RC), may end with a number</li></li>
	// * 	<li>Beta:		beta, may end with a number</li>
	// * 	<li>Alpha:		alpha, may end with a number</li>
	// * 	<li>Milestone:	milestone release, may end with a number</li>
	// * </ul>
	// * / VersionId:
	//	INT ("." INT)* (("." | "-") ID)*;
	public SOABaseDslGrammarAccess.VersionIdElements getVersionIdAccess() {
		return gaSOABaseDsl.getVersionIdAccess();
	}
	
	public ParserRule getVersionIdRule() {
		return getVersionIdAccess().getRule();
	}

	//VersionedName:
	//	{VersionedName} QualifiedName | ID WS* version=VersionId;
	public SOABaseDslGrammarAccess.VersionedNameElements getVersionedNameAccess() {
		return gaSOABaseDsl.getVersionedNameAccess();
	}
	
	public ParserRule getVersionedNameRule() {
		return getVersionedNameAccess().getRule();
	}

	/// *
	// * A version qualifier for versioned assets
	// * / Version:
	//	"version" version=VersionId;
	public SOABaseDslGrammarAccess.VersionElements getVersionAccess() {
		return gaSOABaseDsl.getVersionAccess();
	}
	
	public ParserRule getVersionRule() {
		return getVersionAccess().getRule();
	}

	/// *
	// * Version constraints applied to referenced assets
	// * / VersionRef:
	//	MinVersionRef | MaxVersionRef | LowerBoundRangeVersionRef | MajorVersionRef | FixedVersionRef;
	public SOABaseDslGrammarAccess.VersionRefElements getVersionRefAccess() {
		return gaSOABaseDsl.getVersionRefAccess();
	}
	
	public ParserRule getVersionRefRule() {
		return getVersionRefAccess().getRule();
	}

	/// *
	// * Assets, where the version is lesser than maximal version: asset version >= minVersion
	// * / MinVersionRef:
	//	"minVersion" minVersion=VersionId;
	public SOABaseDslGrammarAccess.MinVersionRefElements getMinVersionRefAccess() {
		return gaSOABaseDsl.getMinVersionRefAccess();
	}
	
	public ParserRule getMinVersionRefRule() {
		return getMinVersionRefAccess().getRule();
	}

	/// *
	// * Assets, that match a minimal version: asset version >= minVersion
	// * / MaxVersionRef:
	//	"maxVersion" maxVersion=VersionId;
	public SOABaseDslGrammarAccess.MaxVersionRefElements getMaxVersionRefAccess() {
		return gaSOABaseDsl.getMaxVersionRefAccess();
	}
	
	public ParserRule getMaxVersionRefRule() {
		return getMaxVersionRefAccess().getRule();
	}

	/// *
	// * Matches version in the half open range [minVersion, maxVersion)
	// * / LowerBoundRangeVersionRef:
	//	("minVersion" ">=") minVersion=VersionId "," ("maxVersion" "<") maxVersion=VersionId;
	public SOABaseDslGrammarAccess.LowerBoundRangeVersionRefElements getLowerBoundRangeVersionRefAccess() {
		return gaSOABaseDsl.getLowerBoundRangeVersionRefAccess();
	}
	
	public ParserRule getLowerBoundRangeVersionRefRule() {
		return getLowerBoundRangeVersionRefAccess().getRule();
	}

	/// *
	// * Constraint matches assets with any version with the same major version, i.e. the first INT until the first '.' is equal
	// * / MajorVersionRef:
	//	"majorVersion" majorVersion=INT;
	public SOABaseDslGrammarAccess.MajorVersionRefElements getMajorVersionRefAccess() {
		return gaSOABaseDsl.getMajorVersionRefAccess();
	}
	
	public ParserRule getMajorVersionRefRule() {
		return getMajorVersionRefAccess().getRule();
	}

	/// *
	// * Constraint that matches an asset version  explicitely
	// * / FixedVersionRef:
	//	"fixedVersion" fixedVersion=VersionId;
	public SOABaseDslGrammarAccess.FixedVersionRefElements getFixedVersionRefAccess() {
		return gaSOABaseDsl.getFixedVersionRefAccess();
	}
	
	public ParserRule getFixedVersionRefRule() {
		return getFixedVersionRefAccess().getRule();
	}

	//QualifiedNameWithWildCard:
	//	QualifiedName ".*"?;
	public SOABaseDslGrammarAccess.QualifiedNameWithWildCardElements getQualifiedNameWithWildCardAccess() {
		return gaSOABaseDsl.getQualifiedNameWithWildCardAccess();
	}
	
	public ParserRule getQualifiedNameWithWildCardRule() {
		return getQualifiedNameWithWildCardAccess().getRule();
	}

	//QualifiedName:
	//	ID ("." ID)*;
	public SOABaseDslGrammarAccess.QualifiedNameElements getQualifiedNameAccess() {
		return gaSOABaseDsl.getQualifiedNameAccess();
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	/// *
	// * Expresses SOA governance decisions
	// * voteing until date will be part of the review ballots captured in the side store
	// * / GovernanceDecision:
	//	"governance-decision" "{" ("subject" subject=STRING) ("decision-result" decisionResult=GovernanceDecisionResult)
	//	("specific-result" specificResult=STRING)? ("justification-doc" justificationOrDocURL=STRING)? ("decision-date"
	//	approvalDate=STRING)? ("decision-by" approvedBy=STRING)? ("effective-date" effectiveDate=STRING)? "}";
	public SOABaseDslGrammarAccess.GovernanceDecisionElements getGovernanceDecisionAccess() {
		return gaSOABaseDsl.getGovernanceDecisionAccess();
	}
	
	public ParserRule getGovernanceDecisionRule() {
		return getGovernanceDecisionAccess().getRule();
	}

	//enum GovernanceDecisionResult:
	//	pending | accepted | denied | specific;
	public SOABaseDslGrammarAccess.GovernanceDecisionResultElements getGovernanceDecisionResultAccess() {
		return gaSOABaseDsl.getGovernanceDecisionResultAccess();
	}
	
	public EnumRule getGovernanceDecisionResultRule() {
		return getGovernanceDecisionResultAccess().getRule();
	}

	//AbstractType:
	//	{AbstractType} name=ID;
	public SOABaseDslGrammarAccess.AbstractTypeElements getAbstractTypeAccess() {
		return gaSOABaseDsl.getAbstractTypeAccess();
	}
	
	public ParserRule getAbstractTypeRule() {
		return getAbstractTypeAccess().getRule();
	}

	//AdditionalInformation:
	//	"additional-information" "{" infoItems+=InfoItem+ "}";
	public SOABaseDslGrammarAccess.AdditionalInformationElements getAdditionalInformationAccess() {
		return gaSOABaseDsl.getAdditionalInformationAccess();
	}
	
	public ParserRule getAdditionalInformationRule() {
		return getAdditionalInformationAccess().getRule();
	}

	//InfoItem:
	//	"location" documentLocation=STRING ("reference" reference=STRING)?;
	public SOABaseDslGrammarAccess.InfoItemElements getInfoItemAccess() {
		return gaSOABaseDsl.getInfoItemAccess();
	}
	
	public ParserRule getInfoItemRule() {
		return getInfoItemAccess().getRule();
	}

	//User:
	//	name=QualifiedName firstname=STRING? lastname=STRING? org=STRING? orgUnit=STRING? email=STRING? phone=STRING?
	//	roles+=RoleRef*;
	public SOABaseDslGrammarAccess.UserElements getUserAccess() {
		return gaSOABaseDsl.getUserAccess();
	}
	
	public ParserRule getUserRule() {
		return getUserAccess().getRule();
	}

	//RoleRef:
	//	role=[Role|QualifiedName];
	public SOABaseDslGrammarAccess.RoleRefElements getRoleRefAccess() {
		return gaSOABaseDsl.getRoleRefAccess();
	}
	
	public ParserRule getRoleRefRule() {
		return getRoleRefAccess().getRule();
	}

	//Role:
	//	name=STRING grants+=PrivilegeRef*;
	public SOABaseDslGrammarAccess.RoleElements getRoleAccess() {
		return gaSOABaseDsl.getRoleAccess();
	}
	
	public ParserRule getRoleRule() {
		return getRoleAccess().getRule();
	}

	//PrivilegeRef:
	//	privilege=[Privilege|QualifiedName];
	public SOABaseDslGrammarAccess.PrivilegeRefElements getPrivilegeRefAccess() {
		return gaSOABaseDsl.getPrivilegeRefAccess();
	}
	
	public ParserRule getPrivilegeRefRule() {
		return getPrivilegeRefAccess().getRule();
	}

	//Privilege:
	//	name=QualifiedName readACL+=QualifiedName* writeACL+=QualifiedName* executeACL+=QualifiedName*;
	public SOABaseDslGrammarAccess.PrivilegeElements getPrivilegeAccess() {
		return gaSOABaseDsl.getPrivilegeAccess();
	}
	
	public ParserRule getPrivilegeRule() {
		return getPrivilegeAccess().getRule();
	}

	//AssetRef:
	//	asset=[ecore::EObject|QualifiedName] versionRef=VersionRef?;
	public SOABaseDslGrammarAccess.AssetRefElements getAssetRefAccess() {
		return gaSOABaseDsl.getAssetRefAccess();
	}
	
	public ParserRule getAssetRefRule() {
		return getAssetRefAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaSOABaseDsl.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaSOABaseDsl.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaSOABaseDsl.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaSOABaseDsl.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaSOABaseDsl.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaSOABaseDsl.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaSOABaseDsl.getANY_OTHERRule();
	} 
}
