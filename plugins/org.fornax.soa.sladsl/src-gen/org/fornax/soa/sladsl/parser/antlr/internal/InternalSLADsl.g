/*
* generated by Xtext
*/
grammar InternalSLADsl;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	
}

@lexer::header {
package org.fornax.soa.sladsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.fornax.soa.sladsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.fornax.soa.sladsl.services.SLADslGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 
 	private SLADslGrammarAccess grammarAccess;
 	
    public InternalSLADslParser(TokenStream input, SLADslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "SlaModel";	
   	}
   	
   	@Override
   	protected SLADslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleSlaModel
entryRuleSlaModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSlaModelRule()); }
	 iv_ruleSlaModel=ruleSlaModel 
	 { $current=$iv_ruleSlaModel.current; } 
	 EOF 
;

// Rule SlaModel
ruleSlaModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getSlaModelAccess().getAgreementsSLAParserRuleCall_0()); 
	    }
		lv_agreements_0_0=ruleSLA		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSlaModelRule());
	        }
       		add(
       			$current, 
       			"agreements",
        		lv_agreements_0_0, 
        		"SLA");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleSLA
entryRuleSLA returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSLARule()); }
	 iv_ruleSLA=ruleSLA 
	 { $current=$iv_ruleSLA.current; } 
	 EOF 
;

// Rule SLA
ruleSLA returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='service-level-agreement' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSLAAccess().getServiceLevelAgreementKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSLAAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSLARule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSLAAccess().getVersionVersionParserRuleCall_2_0()); 
	    }
		lv_version_2_0=ruleVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSLARule());
	        }
       		set(
       			$current, 
       			"version",
        		lv_version_2_0, 
        		"Version");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSLAAccess().getLeftCurlyBracketKeyword_3());
    }
	otherlv_4='effective-date' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSLAAccess().getEffectiveDateKeyword_4());
    }
(
(
		lv_effectiveDate_5_0=RULE_STRING
		{
			newLeafNode(lv_effectiveDate_5_0, grammarAccess.getSLAAccess().getEffectiveDateSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSLARule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"effectiveDate",
        		lv_effectiveDate_5_0, 
        		"STRING");
	    }

)
)(	otherlv_6='effective-until' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSLAAccess().getEffectiveUntilKeyword_6_0());
    }
(
(
		lv_effectiveUntil_7_0=RULE_STRING
		{
			newLeafNode(lv_effectiveUntil_7_0, grammarAccess.getSLAAccess().getEffectiveUntilSTRINGTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSLARule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"effectiveUntil",
        		lv_effectiveUntil_7_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getSLAAccess().getPartiesPartyParserRuleCall_7_0()); 
	    }
		lv_parties_8_0=ruleParty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSLARule());
	        }
       		add(
       			$current, 
       			"parties",
        		lv_parties_8_0, 
        		"Party");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_9='scope' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSLAAccess().getScopeKeyword_8_0());
    }
(
(
		lv_scope_10_0=RULE_STRING
		{
			newLeafNode(lv_scope_10_0, grammarAccess.getSLAAccess().getScopeSTRINGTerminalRuleCall_8_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSLARule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"scope",
        		lv_scope_10_0, 
        		"STRING");
	    }

)
))?(	otherlv_11='preample' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSLAAccess().getPreampleKeyword_9_0());
    }
(
(
		lv_preample_12_0=RULE_STRING
		{
			newLeafNode(lv_preample_12_0, grammarAccess.getSLAAccess().getPreampleSTRINGTerminalRuleCall_9_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSLARule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"preample",
        		lv_preample_12_0, 
        		"STRING");
	    }

)
))?(	otherlv_13='description' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSLAAccess().getDescriptionKeyword_10_0());
    }
(
(
		lv_description_14_0=RULE_STRING
		{
			newLeafNode(lv_description_14_0, grammarAccess.getSLAAccess().getDescriptionSTRINGTerminalRuleCall_10_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSLARule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_14_0, 
        		"STRING");
	    }

)
))?(	otherlv_15='restrictions' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getSLAAccess().getRestrictionsKeyword_11_0());
    }
(
(
		lv_restrictions_16_0=RULE_STRING
		{
			newLeafNode(lv_restrictions_16_0, grammarAccess.getSLAAccess().getRestrictionsSTRINGTerminalRuleCall_11_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSLARule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"restrictions",
        		lv_restrictions_16_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getSLAAccess().getPrioritiesPriorityDeclarationParserRuleCall_12_0()); 
	    }
		lv_priorities_17_0=rulePriorityDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSLARule());
	        }
       		add(
       			$current, 
       			"priorities",
        		lv_priorities_17_0, 
        		"PriorityDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_18='applies-to' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getSLAAccess().getAppliesToKeyword_13_0());
    }
	otherlv_19='{' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getSLAAccess().getLeftCurlyBracketKeyword_13_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSLAAccess().getAppliesToAssetRefParserRuleCall_13_2_0()); 
	    }
		lv_appliesTo_20_0=ruleAssetRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSLARule());
	        }
       		add(
       			$current, 
       			"appliesTo",
        		lv_appliesTo_20_0, 
        		"AssetRef");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_21='}' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getSLAAccess().getRightCurlyBracketKeyword_13_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSLAAccess().getCostsCostParserRuleCall_14_0()); 
	    }
		lv_costs_22_0=ruleCost		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSLARule());
	        }
       		set(
       			$current, 
       			"costs",
        		lv_costs_22_0, 
        		"Cost");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_23='service-quality-requirements' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getSLAAccess().getServiceQualityRequirementsKeyword_15_0());
    }
	otherlv_24='{' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getSLAAccess().getLeftCurlyBracketKeyword_15_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSLAAccess().getServiceQualityPropertiesServiceQualityPropertyParserRuleCall_15_2_0()); 
	    }
		lv_serviceQualityProperties_25_0=ruleServiceQualityProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSLARule());
	        }
       		add(
       			$current, 
       			"serviceQualityProperties",
        		lv_serviceQualityProperties_25_0, 
        		"ServiceQualityProperty");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_26='}' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getSLAAccess().getRightCurlyBracketKeyword_15_3());
    }
)(	otherlv_27='data-security-and-protection' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getSLAAccess().getDataSecurityAndProtectionKeyword_16_0());
    }
	otherlv_28='{' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getSLAAccess().getLeftCurlyBracketKeyword_16_1());
    }
(	otherlv_29='general-security-terms' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getSLAAccess().getGeneralSecurityTermsKeyword_16_2_0());
    }
(
(
		lv_dataSecProtClause_30_0=RULE_STRING
		{
			newLeafNode(lv_dataSecProtClause_30_0, grammarAccess.getSLAAccess().getDataSecProtClauseSTRINGTerminalRuleCall_16_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSLARule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dataSecProtClause",
        		lv_dataSecProtClause_30_0, 
        		"STRING");
	    }

)
))?(	otherlv_31='security-requirements' 
    {
    	newLeafNode(otherlv_31, grammarAccess.getSLAAccess().getSecurityRequirementsKeyword_16_3_0());
    }
	otherlv_32='{' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getSLAAccess().getLeftCurlyBracketKeyword_16_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSLAAccess().getSecurityRequirementsSecurityRequirementParserRuleCall_16_3_2_0()); 
	    }
		lv_securityRequirements_33_0=ruleSecurityRequirement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSLARule());
	        }
       		add(
       			$current, 
       			"securityRequirements",
        		lv_securityRequirements_33_0, 
        		"SecurityRequirement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_34='}' 
    {
    	newLeafNode(otherlv_34, grammarAccess.getSLAAccess().getRightCurlyBracketKeyword_16_3_3());
    }
)	otherlv_35='}' 
    {
    	newLeafNode(otherlv_35, grammarAccess.getSLAAccess().getRightCurlyBracketKeyword_16_4());
    }
)?(	otherlv_36='additional-services' 
    {
    	newLeafNode(otherlv_36, grammarAccess.getSLAAccess().getAdditionalServicesKeyword_17_0());
    }
(
(
		lv_additionalServices_37_0=RULE_STRING
		{
			newLeafNode(lv_additionalServices_37_0, grammarAccess.getSLAAccess().getAdditionalServicesSTRINGTerminalRuleCall_17_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSLARule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"additionalServices",
        		lv_additionalServices_37_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getSLAAccess().getEscalationProcedureEscalationParserRuleCall_18_0()); 
	    }
		lv_escalationProcedure_38_0=ruleEscalation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSLARule());
	        }
       		set(
       			$current, 
       			"escalationProcedure",
        		lv_escalationProcedure_38_0, 
        		"Escalation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_39='cancellation' 
    {
    	newLeafNode(otherlv_39, grammarAccess.getSLAAccess().getCancellationKeyword_19_0());
    }
(
(
		lv_cancellation_40_0=RULE_STRING
		{
			newLeafNode(lv_cancellation_40_0, grammarAccess.getSLAAccess().getCancellationSTRINGTerminalRuleCall_19_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSLARule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"cancellation",
        		lv_cancellation_40_0, 
        		"STRING");
	    }

)
))?(	otherlv_41='extraordinary-cancellation' 
    {
    	newLeafNode(otherlv_41, grammarAccess.getSLAAccess().getExtraordinaryCancellationKeyword_20_0());
    }
(
(
		lv_extraordinaryCancellation_42_0=RULE_STRING
		{
			newLeafNode(lv_extraordinaryCancellation_42_0, grammarAccess.getSLAAccess().getExtraordinaryCancellationSTRINGTerminalRuleCall_20_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSLARule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"extraordinaryCancellation",
        		lv_extraordinaryCancellation_42_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getSLAAccess().getReportsReportParserRuleCall_21_0()); 
	    }
		lv_reports_43_0=ruleReport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSLARule());
	        }
       		add(
       			$current, 
       			"reports",
        		lv_reports_43_0, 
        		"Report");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_44='subscriptions' 
    {
    	newLeafNode(otherlv_44, grammarAccess.getSLAAccess().getSubscriptionsKeyword_22_0());
    }
	otherlv_45='{' 
    {
    	newLeafNode(otherlv_45, grammarAccess.getSLAAccess().getLeftCurlyBracketKeyword_22_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSLARule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSLAAccess().getSubscriptionsUserCrossReference_22_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_47='}' 
    {
    	newLeafNode(otherlv_47, grammarAccess.getSLAAccess().getRightCurlyBracketKeyword_22_3());
    }
)?(	otherlv_48='tags' 
    {
    	newLeafNode(otherlv_48, grammarAccess.getSLAAccess().getTagsKeyword_23_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSLARule());
	        }
        }
	otherlv_49=RULE_ID
	{
		newLeafNode(otherlv_49, grammarAccess.getSLAAccess().getTagsTagCrossReference_23_1_0()); 
	}

)
)+)*	otherlv_50='}' 
    {
    	newLeafNode(otherlv_50, grammarAccess.getSLAAccess().getRightCurlyBracketKeyword_24());
    }
)
;





// Entry rule entryRuleCost
entryRuleCost returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCostRule()); }
	 iv_ruleCost=ruleCost 
	 { $current=$iv_ruleCost.current; } 
	 EOF 
;

// Rule Cost
ruleCost returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='costs' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCostAccess().getCostsKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCostAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='amount' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCostAccess().getAmountKeyword_2());
    }
(
(
		lv_costsAmount_3_0=RULE_STRING
		{
			newLeafNode(lv_costsAmount_3_0, grammarAccess.getCostAccess().getCostsAmountSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCostRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"costsAmount",
        		lv_costsAmount_3_0, 
        		"STRING");
	    }

)
)	otherlv_4='billed-per-unit' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCostAccess().getBilledPerUnitKeyword_4());
    }
(
(
		lv_billedUnit_5_0=RULE_STRING
		{
			newLeafNode(lv_billedUnit_5_0, grammarAccess.getCostAccess().getBilledUnitSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCostRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"billedUnit",
        		lv_billedUnit_5_0, 
        		"STRING");
	    }

)
)(	otherlv_6='effort-accounting' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCostAccess().getEffortAccountingKeyword_6_0());
    }
(
(
		lv_effortAccounting_7_0=RULE_STRING
		{
			newLeafNode(lv_effortAccounting_7_0, grammarAccess.getCostAccess().getEffortAccountingSTRINGTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCostRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"effortAccounting",
        		lv_effortAccounting_7_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getCostAccess().getEscalationEscalationParserRuleCall_7_0()); 
	    }
		lv_escalation_8_0=ruleEscalation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCostRule());
	        }
       		set(
       			$current, 
       			"escalation",
        		lv_escalation_8_0, 
        		"Escalation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_9='penalty' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCostAccess().getPenaltyKeyword_8_0());
    }
(
(
		lv_penalty_10_0=RULE_STRING
		{
			newLeafNode(lv_penalty_10_0, grammarAccess.getCostAccess().getPenaltySTRINGTerminalRuleCall_8_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCostRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"penalty",
        		lv_penalty_10_0, 
        		"STRING");
	    }

)
))?	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getCostAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleServiceQualityProperty
entryRuleServiceQualityProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getServiceQualityPropertyRule()); }
	 iv_ruleServiceQualityProperty=ruleServiceQualityProperty 
	 { $current=$iv_ruleServiceQualityProperty.current; } 
	 EOF 
;

// Rule ServiceQualityProperty
ruleServiceQualityProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getServiceQualityPropertyAccess().getAvailabilityParserRuleCall_0()); 
    }
    this_Availability_0=ruleAvailability
    { 
        $current = $this_Availability_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getServiceQualityPropertyAccess().getThroughputParserRuleCall_1()); 
    }
    this_Throughput_1=ruleThroughput
    { 
        $current = $this_Throughput_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getServiceQualityPropertyAccess().getLatencyParserRuleCall_2()); 
    }
    this_Latency_2=ruleLatency
    { 
        $current = $this_Latency_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getServiceQualityPropertyAccess().getMaxDownTimeParserRuleCall_3()); 
    }
    this_MaxDownTime_3=ruleMaxDownTime
    { 
        $current = $this_MaxDownTime_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getServiceQualityPropertyAccess().getCapacityRequirementParserRuleCall_4()); 
    }
    this_CapacityRequirement_4=ruleCapacityRequirement
    { 
        $current = $this_CapacityRequirement_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getServiceQualityPropertyAccess().getAccuracyRequirementParserRuleCall_5()); 
    }
    this_AccuracyRequirement_5=ruleAccuracyRequirement
    { 
        $current = $this_AccuracyRequirement_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getServiceQualityPropertyAccess().getReliablityRequirementParserRuleCall_6()); 
    }
    this_ReliablityRequirement_6=ruleReliablityRequirement
    { 
        $current = $this_ReliablityRequirement_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getServiceQualityPropertyAccess().getLogRequirementParserRuleCall_7()); 
    }
    this_LogRequirement_7=ruleLogRequirement
    { 
        $current = $this_LogRequirement_7.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAvailability
entryRuleAvailability returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAvailabilityRule()); }
	 iv_ruleAvailability=ruleAvailability 
	 { $current=$iv_ruleAvailability.current; } 
	 EOF 
;

// Rule Availability
ruleAvailability returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='availability' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAvailabilityAccess().getAvailabilityKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAvailabilityAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='availability' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAvailabilityAccess().getAvailabilityKeyword_2());
    }
(
(
		lv_availability_3_0=RULE_STRING
		{
			newLeafNode(lv_availability_3_0, grammarAccess.getAvailabilityAccess().getAvailabilitySTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAvailabilityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"availability",
        		lv_availability_3_0, 
        		"STRING");
	    }

)
)(	otherlv_4='mean-time-between-failure' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAvailabilityAccess().getMeanTimeBetweenFailureKeyword_4_0());
    }
(
(
		lv_mtbf_5_0=RULE_STRING
		{
			newLeafNode(lv_mtbf_5_0, grammarAccess.getAvailabilityAccess().getMtbfSTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAvailabilityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"mtbf",
        		lv_mtbf_5_0, 
        		"STRING");
	    }

)
))?(	otherlv_6='mean-time-to-repair' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAvailabilityAccess().getMeanTimeToRepairKeyword_5_0());
    }
(
(
		lv_mttr_7_0=RULE_STRING
		{
			newLeafNode(lv_mttr_7_0, grammarAccess.getAvailabilityAccess().getMttrSTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAvailabilityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"mttr",
        		lv_mttr_7_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAvailabilityAccess().getMttrPercentilePercentileParserRuleCall_5_2_0()); 
	    }
		lv_mttrPercentile_8_0=rulePercentile		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAvailabilityRule());
	        }
       		set(
       			$current, 
       			"mttrPercentile",
        		lv_mttrPercentile_8_0, 
        		"Percentile");
	        afterParserOrEnumRuleCall();
	    }

)
)?)?(	otherlv_9='regular-down-times' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getAvailabilityAccess().getRegularDownTimesKeyword_6_0());
    }
(
(
		lv_regularDownTimes_10_0=RULE_STRING
		{
			newLeafNode(lv_regularDownTimes_10_0, grammarAccess.getAvailabilityAccess().getRegularDownTimesSTRINGTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAvailabilityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"regularDownTimes",
        		lv_regularDownTimes_10_0, 
        		"STRING");
	    }

)
))?	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getAvailabilityAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleThroughput
entryRuleThroughput returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getThroughputRule()); }
	 iv_ruleThroughput=ruleThroughput 
	 { $current=$iv_ruleThroughput.current; } 
	 EOF 
;

// Rule Throughput
ruleThroughput returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='throughput' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getThroughputAccess().getThroughputKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getThroughputAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='throughput' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getThroughputAccess().getThroughputKeyword_2());
    }
(
(
		lv_definition_3_0=RULE_STRING
		{
			newLeafNode(lv_definition_3_0, grammarAccess.getThroughputAccess().getDefinitionSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getThroughputRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"definition",
        		lv_definition_3_0, 
        		"STRING");
	    }

)
)	otherlv_4='score-to-be-kept' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getThroughputAccess().getScoreToBeKeptKeyword_4());
    }
(
(
		lv_score_5_0=RULE_STRING
		{
			newLeafNode(lv_score_5_0, grammarAccess.getThroughputAccess().getScoreSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getThroughputRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"score",
        		lv_score_5_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getThroughputAccess().getEscalationEscalationParserRuleCall_6_0()); 
	    }
		lv_escalation_6_0=ruleEscalation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getThroughputRule());
	        }
       		set(
       			$current, 
       			"escalation",
        		lv_escalation_6_0, 
        		"Escalation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_7='penalty' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getThroughputAccess().getPenaltyKeyword_7_0());
    }
(
(
		lv_penalty_8_0=RULE_STRING
		{
			newLeafNode(lv_penalty_8_0, grammarAccess.getThroughputAccess().getPenaltySTRINGTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getThroughputRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"penalty",
        		lv_penalty_8_0, 
        		"STRING");
	    }

)
))?	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getThroughputAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleLatency
entryRuleLatency returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLatencyRule()); }
	 iv_ruleLatency=ruleLatency 
	 { $current=$iv_ruleLatency.current; } 
	 EOF 
;

// Rule Latency
ruleLatency returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='latency' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLatencyAccess().getLatencyKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLatencyAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='latency' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLatencyAccess().getLatencyKeyword_2());
    }
(
(
		lv_latency_3_0=	'STRING' 
    {
        newLeafNode(lv_latency_3_0, grammarAccess.getLatencyAccess().getLatencySTRINGKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLatencyRule());
	        }
       		setWithLastConsumed($current, "latency", lv_latency_3_0, "STRING");
	    }

)
)	otherlv_4='percentile' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLatencyAccess().getPercentileKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLatencyAccess().getPercentilePercentileParserRuleCall_5_0()); 
	    }
		lv_percentile_5_0=rulePercentile		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLatencyRule());
	        }
       		set(
       			$current, 
       			"percentile",
        		lv_percentile_5_0, 
        		"Percentile");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLatencyAccess().getEscalationEscalationParserRuleCall_6_0()); 
	    }
		lv_escalation_6_0=ruleEscalation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLatencyRule());
	        }
       		set(
       			$current, 
       			"escalation",
        		lv_escalation_6_0, 
        		"Escalation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_7='penalty' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLatencyAccess().getPenaltyKeyword_7_0());
    }
(
(
		lv_penalty_8_0=RULE_STRING
		{
			newLeafNode(lv_penalty_8_0, grammarAccess.getLatencyAccess().getPenaltySTRINGTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLatencyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"penalty",
        		lv_penalty_8_0, 
        		"STRING");
	    }

)
))?	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getLatencyAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleMaxDownTime
entryRuleMaxDownTime returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMaxDownTimeRule()); }
	 iv_ruleMaxDownTime=ruleMaxDownTime 
	 { $current=$iv_ruleMaxDownTime.current; } 
	 EOF 
;

// Rule MaxDownTime
ruleMaxDownTime returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='max-downtime' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMaxDownTimeAccess().getMaxDowntimeKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMaxDownTimeAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='duration' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMaxDownTimeAccess().getDurationKeyword_2());
    }
(
(
		lv_definition_3_0=RULE_STRING
		{
			newLeafNode(lv_definition_3_0, grammarAccess.getMaxDownTimeAccess().getDefinitionSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMaxDownTimeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"definition",
        		lv_definition_3_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMaxDownTimeAccess().getEscalationEscalationParserRuleCall_4_0()); 
	    }
		lv_escalation_4_0=ruleEscalation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMaxDownTimeRule());
	        }
       		set(
       			$current, 
       			"escalation",
        		lv_escalation_4_0, 
        		"Escalation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_5='penalty' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMaxDownTimeAccess().getPenaltyKeyword_5_0());
    }
(
(
		lv_penalty_6_0=RULE_STRING
		{
			newLeafNode(lv_penalty_6_0, grammarAccess.getMaxDownTimeAccess().getPenaltySTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMaxDownTimeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"penalty",
        		lv_penalty_6_0, 
        		"STRING");
	    }

)
))?	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMaxDownTimeAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleCapacityRequirement
entryRuleCapacityRequirement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCapacityRequirementRule()); }
	 iv_ruleCapacityRequirement=ruleCapacityRequirement 
	 { $current=$iv_ruleCapacityRequirement.current; } 
	 EOF 
;

// Rule CapacityRequirement
ruleCapacityRequirement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='capacity' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCapacityRequirementAccess().getCapacityKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCapacityRequirementAccess().getLeftCurlyBracketKeyword_1());
    }
(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getCapacityRequirementAccess().getCapacityRequirementAction_2(),
            $current);
    }
)(	otherlv_3='num-of-requests' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCapacityRequirementAccess().getNumOfRequestsKeyword_3_0());
    }
(
(
		lv_requestNum_4_0=RULE_STRING
		{
			newLeafNode(lv_requestNum_4_0, grammarAccess.getCapacityRequirementAccess().getRequestNumSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCapacityRequirementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"requestNum",
        		lv_requestNum_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='per' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCapacityRequirementAccess().getPerKeyword_3_2());
    }
(
(
		lv_timeUnit_6_0=RULE_STRING
		{
			newLeafNode(lv_timeUnit_6_0, grammarAccess.getCapacityRequirementAccess().getTimeUnitSTRINGTerminalRuleCall_3_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCapacityRequirementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"timeUnit",
        		lv_timeUnit_6_0, 
        		"STRING");
	    }

)
))?(	otherlv_7='message-size' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCapacityRequirementAccess().getMessageSizeKeyword_4_0());
    }
(
(
		lv_messageSize_8_0=RULE_STRING
		{
			newLeafNode(lv_messageSize_8_0, grammarAccess.getCapacityRequirementAccess().getMessageSizeSTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCapacityRequirementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"messageSize",
        		lv_messageSize_8_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getCapacityRequirementAccess().getEscalationEscalationParserRuleCall_5_0()); 
	    }
		lv_escalation_9_0=ruleEscalation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCapacityRequirementRule());
	        }
       		set(
       			$current, 
       			"escalation",
        		lv_escalation_9_0, 
        		"Escalation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_10='penalty' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getCapacityRequirementAccess().getPenaltyKeyword_6_0());
    }
(
(
		lv_penalty_11_0=RULE_STRING
		{
			newLeafNode(lv_penalty_11_0, grammarAccess.getCapacityRequirementAccess().getPenaltySTRINGTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCapacityRequirementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"penalty",
        		lv_penalty_11_0, 
        		"STRING");
	    }

)
))?	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getCapacityRequirementAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleReliablityRequirement
entryRuleReliablityRequirement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReliablityRequirementRule()); }
	 iv_ruleReliablityRequirement=ruleReliablityRequirement 
	 { $current=$iv_ruleReliablityRequirement.current; } 
	 EOF 
;

// Rule ReliablityRequirement
ruleReliablityRequirement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='message-exchange-reliability' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getReliablityRequirementAccess().getMessageExchangeReliabilityKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getReliablityRequirementAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReliablityRequirementAccess().getReliabilityReliablilityKindEnumRuleCall_2_0()); 
	    }
		lv_reliability_2_0=ruleReliablilityKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReliablityRequirementRule());
	        }
       		set(
       			$current, 
       			"reliability",
        		lv_reliability_2_0, 
        		"ReliablilityKind");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_inOrderDelivery_3_0=	'in-order-delivery' 
    {
        newLeafNode(lv_inOrderDelivery_3_0, grammarAccess.getReliablityRequirementAccess().getInOrderDeliveryInOrderDeliveryKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReliablityRequirementRule());
	        }
       		setWithLastConsumed($current, "inOrderDelivery", true, "in-order-delivery");
	    }

)
)?	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getReliablityRequirementAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleAccuracyRequirement
entryRuleAccuracyRequirement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAccuracyRequirementRule()); }
	 iv_ruleAccuracyRequirement=ruleAccuracyRequirement 
	 { $current=$iv_ruleAccuracyRequirement.current; } 
	 EOF 
;

// Rule AccuracyRequirement
ruleAccuracyRequirement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='accuracy' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAccuracyRequirementAccess().getAccuracyKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAccuracyRequirementAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='max-error-rate' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAccuracyRequirementAccess().getMaxErrorRateKeyword_2());
    }
(
(
		lv_maxErrorRate_3_0=RULE_STRING
		{
			newLeafNode(lv_maxErrorRate_3_0, grammarAccess.getAccuracyRequirementAccess().getMaxErrorRateSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAccuracyRequirementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"maxErrorRate",
        		lv_maxErrorRate_3_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAccuracyRequirementAccess().getEscalationEscalationParserRuleCall_4_0()); 
	    }
		lv_escalation_4_0=ruleEscalation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAccuracyRequirementRule());
	        }
       		set(
       			$current, 
       			"escalation",
        		lv_escalation_4_0, 
        		"Escalation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_5='penalty' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAccuracyRequirementAccess().getPenaltyKeyword_5_0());
    }
(
(
		lv_penalty_6_0=RULE_STRING
		{
			newLeafNode(lv_penalty_6_0, grammarAccess.getAccuracyRequirementAccess().getPenaltySTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAccuracyRequirementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"penalty",
        		lv_penalty_6_0, 
        		"STRING");
	    }

)
))?	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAccuracyRequirementAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleLogRequirement
entryRuleLogRequirement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogRequirementRule()); }
	 iv_ruleLogRequirement=ruleLogRequirement 
	 { $current=$iv_ruleLogRequirement.current; } 
	 EOF 
;

// Rule LogRequirement
ruleLogRequirement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='logging' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLogRequirementAccess().getLoggingKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLogRequirementAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='message-log-level' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLogRequirementAccess().getMessageLogLevelKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLogRequirementAccess().getLogLevelLogRequirementKindEnumRuleCall_3_0()); 
	    }
		lv_logLevel_3_0=ruleLogRequirementKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogRequirementRule());
	        }
       		set(
       			$current, 
       			"logLevel",
        		lv_logLevel_3_0, 
        		"LogRequirementKind");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='additional-logging-requirements' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLogRequirementAccess().getAdditionalLoggingRequirementsKeyword_4());
    }
(
(
		lv_additionalLoggingRequirement_5_0=RULE_STRING
		{
			newLeafNode(lv_additionalLoggingRequirement_5_0, grammarAccess.getLogRequirementAccess().getAdditionalLoggingRequirementSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogRequirementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"additionalLoggingRequirement",
        		lv_additionalLoggingRequirement_5_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRulePercentile
entryRulePercentile returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPercentileRule()); }
	 iv_rulePercentile=rulePercentile 
	 { $current=$iv_rulePercentile.current; } 
	 EOF 
;

// Rule Percentile
rulePercentile returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_percentile_0_0=RULE_INT
		{
			newLeafNode(lv_percentile_0_0, grammarAccess.getPercentileAccess().getPercentileINTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPercentileRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"percentile",
        		lv_percentile_0_0, 
        		"INT");
	    }

)
)(	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPercentileAccess().getFullStopKeyword_1_0());
    }
this_INT_2=RULE_INT
    { 
    newLeafNode(this_INT_2, grammarAccess.getPercentileAccess().getINTTerminalRuleCall_1_1()); 
    }
)*	otherlv_3='%' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPercentileAccess().getPercentSignKeyword_2());
    }
)
;





// Entry rule entryRuleSecurityRequirement
entryRuleSecurityRequirement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSecurityRequirementRule()); }
	 iv_ruleSecurityRequirement=ruleSecurityRequirement 
	 { $current=$iv_ruleSecurityRequirement.current; } 
	 EOF 
;

// Rule SecurityRequirement
ruleSecurityRequirement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSecurityRequirementAccess().getAuthenticationRequirementParserRuleCall_0()); 
    }
    this_AuthenticationRequirement_0=ruleAuthenticationRequirement
    { 
        $current = $this_AuthenticationRequirement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSecurityRequirementAccess().getSigningRequirementParserRuleCall_1()); 
    }
    this_SigningRequirement_1=ruleSigningRequirement
    { 
        $current = $this_SigningRequirement_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSecurityRequirementAccess().getEncryptionRequirementParserRuleCall_2()); 
    }
    this_EncryptionRequirement_2=ruleEncryptionRequirement
    { 
        $current = $this_EncryptionRequirement_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAuthenticationRequirement
entryRuleAuthenticationRequirement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAuthenticationRequirementRule()); }
	 iv_ruleAuthenticationRequirement=ruleAuthenticationRequirement 
	 { $current=$iv_ruleAuthenticationRequirement.current; } 
	 EOF 
;

// Rule AuthenticationRequirement
ruleAuthenticationRequirement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getAuthenticationRequirementAccess().getAuthenticationRequirementAction_0(),
            $current);
    }
)	otherlv_1='authentication-procedure' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAuthenticationRequirementAccess().getAuthenticationProcedureKeyword_1());
    }
(
(
		lv_optional_2_0=	'optional' 
    {
        newLeafNode(lv_optional_2_0, grammarAccess.getAuthenticationRequirementAccess().getOptionalOptionalKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAuthenticationRequirementRule());
	        }
       		setWithLastConsumed($current, "optional", true, "optional");
	    }

)
)?	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAuthenticationRequirementAccess().getLeftCurlyBracketKeyword_3());
    }
	otherlv_4='auth-tokens' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAuthenticationRequirementAccess().getAuthTokensKeyword_4());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAuthenticationRequirementAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAuthenticationRequirementAccess().getAuthTokensAuthTokenParserRuleCall_6_0()); 
	    }
		lv_authTokens_6_0=ruleAuthToken		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAuthenticationRequirementRule());
	        }
       		add(
       			$current, 
       			"authTokens",
        		lv_authTokens_6_0, 
        		"AuthToken");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAuthenticationRequirementAccess().getRightCurlyBracketKeyword_7());
    }
	otherlv_8='hash-algorithms' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAuthenticationRequirementAccess().getHashAlgorithmsKeyword_8());
    }
	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getAuthenticationRequirementAccess().getLeftCurlyBracketKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAuthenticationRequirementAccess().getHashAlgorithmsHashAlgorithmParserRuleCall_10_0()); 
	    }
		lv_hashAlgorithms_10_0=ruleHashAlgorithm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAuthenticationRequirementRule());
	        }
       		add(
       			$current, 
       			"hashAlgorithms",
        		lv_hashAlgorithms_10_0, 
        		"HashAlgorithm");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getAuthenticationRequirementAccess().getRightCurlyBracketKeyword_11());
    }
(
(
		lv_useNonce_12_0=	'use-nonce' 
    {
        newLeafNode(lv_useNonce_12_0, grammarAccess.getAuthenticationRequirementAccess().getUseNonceUseNonceKeyword_12_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAuthenticationRequirementRule());
	        }
       		setWithLastConsumed($current, "useNonce", true, "use-nonce");
	    }

)
)?(	otherlv_13='issuer' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getAuthenticationRequirementAccess().getIssuerKeyword_13_0());
    }
(
(
		lv_issuer_14_0=RULE_STRING
		{
			newLeafNode(lv_issuer_14_0, grammarAccess.getAuthenticationRequirementAccess().getIssuerSTRINGTerminalRuleCall_13_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAuthenticationRequirementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"issuer",
        		lv_issuer_14_0, 
        		"STRING");
	    }

)
))?	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getAuthenticationRequirementAccess().getRightCurlyBracketKeyword_14());
    }
)
;





// Entry rule entryRuleAuthToken
entryRuleAuthToken returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAuthTokenRule()); }
	 iv_ruleAuthToken=ruleAuthToken 
	 { $current=$iv_ruleAuthToken.current; } 
	 EOF 
;

// Rule AuthToken
ruleAuthToken returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_optional_0_0=	'optional' 
    {
        newLeafNode(lv_optional_0_0, grammarAccess.getAuthTokenAccess().getOptionalOptionalKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAuthTokenRule());
	        }
       		setWithLastConsumed($current, "optional", true, "optional");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAuthTokenAccess().getKindAuthTokenKindEnumRuleCall_1_0()); 
	    }
		lv_kind_1_0=ruleAuthTokenKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAuthTokenRule());
	        }
       		set(
       			$current, 
       			"kind",
        		lv_kind_1_0, 
        		"AuthTokenKind");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleHashAlgorithm
entryRuleHashAlgorithm returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHashAlgorithmRule()); }
	 iv_ruleHashAlgorithm=ruleHashAlgorithm 
	 { $current=$iv_ruleHashAlgorithm.current; } 
	 EOF 
;

// Rule HashAlgorithm
ruleHashAlgorithm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_optional_0_0=	'optional' 
    {
        newLeafNode(lv_optional_0_0, grammarAccess.getHashAlgorithmAccess().getOptionalOptionalKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHashAlgorithmRule());
	        }
       		setWithLastConsumed($current, "optional", true, "optional");
	    }

)
)?(
(
		lv_useBase64_1_0=	'Base64-encoded' 
    {
        newLeafNode(lv_useBase64_1_0, grammarAccess.getHashAlgorithmAccess().getUseBase64Base64EncodedKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHashAlgorithmRule());
	        }
       		setWithLastConsumed($current, "useBase64", true, "Base64-encoded");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getHashAlgorithmAccess().getKindHashAlgKindEnumRuleCall_2_0()); 
	    }
		lv_kind_2_0=ruleHashAlgKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHashAlgorithmRule());
	        }
       		set(
       			$current, 
       			"kind",
        		lv_kind_2_0, 
        		"HashAlgKind");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSigningRequirement
entryRuleSigningRequirement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSigningRequirementRule()); }
	 iv_ruleSigningRequirement=ruleSigningRequirement 
	 { $current=$iv_ruleSigningRequirement.current; } 
	 EOF 
;

// Rule SigningRequirement
ruleSigningRequirement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSigningRequirementAccess().getSigningRequirementAction_0(),
            $current);
    }
)	otherlv_1='signing-policy' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSigningRequirementAccess().getSigningPolicyKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSigningRequirementAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='supported-algorithms' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSigningRequirementAccess().getSupportedAlgorithmsKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSigningRequirementAccess().getSupportedSigningAlgorithmsSigningAlgothmEnumRuleCall_3_1_0()); 
	    }
		lv_supportedSigningAlgorithms_4_0=ruleSigningAlgothm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigningRequirementRule());
	        }
       		add(
       			$current, 
       			"supportedSigningAlgorithms",
        		lv_supportedSigningAlgorithms_4_0, 
        		"SigningAlgothm");
	        afterParserOrEnumRuleCall();
	    }

)
)+)?(	otherlv_5='requires-algorithm' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSigningRequirementAccess().getRequiresAlgorithmKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSigningRequirementAccess().getRequiredSigningAlgorithmSigningAlgothmEnumRuleCall_4_1_0()); 
	    }
		lv_requiredSigningAlgorithm_6_0=ruleSigningAlgothm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigningRequirementRule());
	        }
       		set(
       			$current, 
       			"requiredSigningAlgorithm",
        		lv_requiredSigningAlgorithm_6_0, 
        		"SigningAlgothm");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='signed-message-parts' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSigningRequirementAccess().getSignedMessagePartsKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSigningRequirementAccess().getSignedPartsMessagePartRefParserRuleCall_5_1_0()); 
	    }
		lv_signedParts_8_0=ruleMessagePartRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigningRequirementRule());
	        }
       		add(
       			$current, 
       			"signedParts",
        		lv_signedParts_8_0, 
        		"MessagePartRef");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSigningRequirementAccess().getCommaKeyword_5_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSigningRequirementAccess().getSignedPartsMessagePartRefParserRuleCall_5_2_1_0()); 
	    }
		lv_signedParts_10_0=ruleMessagePartRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigningRequirementRule());
	        }
       		add(
       			$current, 
       			"signedParts",
        		lv_signedParts_10_0, 
        		"MessagePartRef");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSigningRequirementAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleMessagePartRef
entryRuleMessagePartRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMessagePartRefRule()); }
	 iv_ruleMessagePartRef=ruleMessagePartRef 
	 { $current=$iv_ruleMessagePartRef.current; } 
	 EOF 
;

// Rule MessagePartRef
ruleMessagePartRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMessagePartRefAccess().getMessagePartRefMessagePartRefKindEnumRuleCall_0_0()); 
	    }
		lv_messagePartRef_0_0=ruleMessagePartRefKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMessagePartRefRule());
	        }
       		set(
       			$current, 
       			"messagePartRef",
        		lv_messagePartRef_0_0, 
        		"MessagePartRefKind");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='expression' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMessagePartRefAccess().getExpressionKeyword_1_0());
    }
(
(
		lv_partRefExpression_2_0=RULE_STRING
		{
			newLeafNode(lv_partRefExpression_2_0, grammarAccess.getMessagePartRefAccess().getPartRefExpressionSTRINGTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMessagePartRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"partRefExpression",
        		lv_partRefExpression_2_0, 
        		"STRING");
	    }

)
))?)
;





// Entry rule entryRuleEncryptionRequirement
entryRuleEncryptionRequirement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEncryptionRequirementRule()); }
	 iv_ruleEncryptionRequirement=ruleEncryptionRequirement 
	 { $current=$iv_ruleEncryptionRequirement.current; } 
	 EOF 
;

// Rule EncryptionRequirement
ruleEncryptionRequirement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getEncryptionRequirementAccess().getEncryptionRequirementAction_0(),
            $current);
    }
)	otherlv_1='encryption-policy' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEncryptionRequirementAccess().getEncryptionPolicyKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEncryptionRequirementAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='supported-algorithms' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEncryptionRequirementAccess().getSupportedAlgorithmsKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEncryptionRequirementAccess().getSupportedCipherAlgorithmsCipherAlgorithmKindEnumRuleCall_3_1_0()); 
	    }
		lv_supportedCipherAlgorithms_4_0=ruleCipherAlgorithmKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEncryptionRequirementRule());
	        }
       		add(
       			$current, 
       			"supportedCipherAlgorithms",
        		lv_supportedCipherAlgorithms_4_0, 
        		"CipherAlgorithmKind");
	        afterParserOrEnumRuleCall();
	    }

)
)+)?(	otherlv_5='requires-algorithm' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEncryptionRequirementAccess().getRequiresAlgorithmKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEncryptionRequirementAccess().getRequiredCipherAlgorithmCipherAlgorithmKindEnumRuleCall_4_1_0()); 
	    }
		lv_requiredCipherAlgorithm_6_0=ruleCipherAlgorithmKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEncryptionRequirementRule());
	        }
       		set(
       			$current, 
       			"requiredCipherAlgorithm",
        		lv_requiredCipherAlgorithm_6_0, 
        		"CipherAlgorithmKind");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='encrypted-message-parts' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEncryptionRequirementAccess().getEncryptedMessagePartsKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEncryptionRequirementAccess().getEncryptedPartsMessagePartRefParserRuleCall_5_1_0()); 
	    }
		lv_encryptedParts_8_0=ruleMessagePartRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEncryptionRequirementRule());
	        }
       		add(
       			$current, 
       			"encryptedParts",
        		lv_encryptedParts_8_0, 
        		"MessagePartRef");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getEncryptionRequirementAccess().getCommaKeyword_5_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEncryptionRequirementAccess().getEncryptedPartsMessagePartRefParserRuleCall_5_2_1_0()); 
	    }
		lv_encryptedParts_10_0=ruleMessagePartRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEncryptionRequirementRule());
	        }
       		add(
       			$current, 
       			"encryptedParts",
        		lv_encryptedParts_10_0, 
        		"MessagePartRef");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getEncryptionRequirementAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRulePriorityDeclaration
entryRulePriorityDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPriorityDeclarationRule()); }
	 iv_rulePriorityDeclaration=rulePriorityDeclaration 
	 { $current=$iv_rulePriorityDeclaration.current; } 
	 EOF 
;

// Rule PriorityDeclaration
rulePriorityDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='priority' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPriorityDeclarationAccess().getPriorityKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPriorityDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPriorityDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='description' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPriorityDeclarationAccess().getDescriptionKeyword_2());
    }
(
(
		lv_description_3_0=RULE_STRING
		{
			newLeafNode(lv_description_3_0, grammarAccess.getPriorityDeclarationAccess().getDescriptionSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPriorityDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleEscalation
entryRuleEscalation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEscalationRule()); }
	 iv_ruleEscalation=ruleEscalation 
	 { $current=$iv_ruleEscalation.current; } 
	 EOF 
;

// Rule Escalation
ruleEscalation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='escalation' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEscalationAccess().getEscalationKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEscalationAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='cause' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEscalationAccess().getCauseKeyword_2_0());
    }
(
(
		lv_cause_3_0=RULE_STRING
		{
			newLeafNode(lv_cause_3_0, grammarAccess.getEscalationAccess().getCauseSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEscalationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"cause",
        		lv_cause_3_0, 
        		"STRING");
	    }

)
))?	otherlv_4='escalate-to' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEscalationAccess().getEscalateToKeyword_3());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEscalationAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEscalationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getEscalationAccess().getEscalationTargetsUserCrossReference_5_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEscalationAccess().getRightCurlyBracketKeyword_6());
    }
(	otherlv_8='procedure' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getEscalationAccess().getProcedureKeyword_7_0());
    }
(
(
		lv_procedure_9_0=RULE_STRING
		{
			newLeafNode(lv_procedure_9_0, grammarAccess.getEscalationAccess().getProcedureSTRINGTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEscalationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"procedure",
        		lv_procedure_9_0, 
        		"STRING");
	    }

)
))?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getEscalationAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleParty
entryRuleParty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPartyRule()); }
	 iv_ruleParty=ruleParty 
	 { $current=$iv_ruleParty.current; } 
	 EOF 
;

// Rule Party
ruleParty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPartyAccess().getCustomerPartyParserRuleCall_0()); 
    }
    this_CustomerParty_0=ruleCustomerParty
    { 
        $current = $this_CustomerParty_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPartyAccess().getProviderPartyParserRuleCall_1()); 
    }
    this_ProviderParty_1=ruleProviderParty
    { 
        $current = $this_ProviderParty_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPartyAccess().getThirdPartyParserRuleCall_2()); 
    }
    this_ThirdParty_2=ruleThirdParty
    { 
        $current = $this_ThirdParty_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCustomerParty
entryRuleCustomerParty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomerPartyRule()); }
	 iv_ruleCustomerParty=ruleCustomerParty 
	 { $current=$iv_ruleCustomerParty.current; } 
	 EOF 
;

// Rule CustomerParty
ruleCustomerParty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='customer-party' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCustomerPartyAccess().getCustomerPartyKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomerPartyAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomerPartyRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCustomerPartyAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomerPartyAccess().getRepresentativesRepresentativeParserRuleCall_3_0()); 
	    }
		lv_representatives_3_0=ruleRepresentative		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomerPartyRule());
	        }
       		add(
       			$current, 
       			"representatives",
        		lv_representatives_3_0, 
        		"Representative");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomerPartyAccess().getResponsibilitiesResponsibilityParserRuleCall_4_0()); 
	    }
		lv_responsibilities_4_0=ruleResponsibility		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomerPartyRule());
	        }
       		add(
       			$current, 
       			"responsibilities",
        		lv_responsibilities_4_0, 
        		"Responsibility");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCustomerPartyAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleProviderParty
entryRuleProviderParty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProviderPartyRule()); }
	 iv_ruleProviderParty=ruleProviderParty 
	 { $current=$iv_ruleProviderParty.current; } 
	 EOF 
;

// Rule ProviderParty
ruleProviderParty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='provider-party' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProviderPartyAccess().getProviderPartyKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProviderPartyAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProviderPartyRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getProviderPartyAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProviderPartyAccess().getRepresentativesRepresentativeParserRuleCall_3_0()); 
	    }
		lv_representatives_3_0=ruleRepresentative		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProviderPartyRule());
	        }
       		add(
       			$current, 
       			"representatives",
        		lv_representatives_3_0, 
        		"Representative");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getProviderPartyAccess().getResponsibilitiesResponsibilityParserRuleCall_4_0()); 
	    }
		lv_responsibilities_4_0=ruleResponsibility		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProviderPartyRule());
	        }
       		add(
       			$current, 
       			"responsibilities",
        		lv_responsibilities_4_0, 
        		"Responsibility");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getProviderPartyAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleThirdParty
entryRuleThirdParty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getThirdPartyRule()); }
	 iv_ruleThirdParty=ruleThirdParty 
	 { $current=$iv_ruleThirdParty.current; } 
	 EOF 
;

// Rule ThirdParty
ruleThirdParty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='third-party' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getThirdPartyAccess().getThirdPartyKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getThirdPartyAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getThirdPartyRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getThirdPartyAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='participation-role' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getThirdPartyAccess().getParticipationRoleKeyword_3());
    }
(
(
		lv_role_4_0=RULE_STRING
		{
			newLeafNode(lv_role_4_0, grammarAccess.getThirdPartyAccess().getRoleSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getThirdPartyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"role",
        		lv_role_4_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getThirdPartyAccess().getRepresentativesRepresentativeParserRuleCall_5_0()); 
	    }
		lv_representatives_5_0=ruleRepresentative		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getThirdPartyRule());
	        }
       		add(
       			$current, 
       			"representatives",
        		lv_representatives_5_0, 
        		"Representative");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getThirdPartyAccess().getResponsibilitiesResponsibilityParserRuleCall_6_0()); 
	    }
		lv_responsibilities_6_0=ruleResponsibility		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getThirdPartyRule());
	        }
       		add(
       			$current, 
       			"responsibilities",
        		lv_responsibilities_6_0, 
        		"Responsibility");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getThirdPartyAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleRepresentative
entryRuleRepresentative returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRepresentativeRule()); }
	 iv_ruleRepresentative=ruleRepresentative 
	 { $current=$iv_ruleRepresentative.current; } 
	 EOF 
;

// Rule Representative
ruleRepresentative returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getRepresentativeAccess().getUserRefParserRuleCall_0()); 
    }
    this_UserRef_0=ruleUserRef
    { 
        $current = $this_UserRef_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getRepresentativeAccess().getInlineRepresentativeParserRuleCall_1()); 
    }
    this_InlineRepresentative_1=ruleInlineRepresentative
    { 
        $current = $this_InlineRepresentative_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleUserRef
entryRuleUserRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUserRefRule()); }
	 iv_ruleUserRef=ruleUserRef 
	 { $current=$iv_ruleUserRef.current; } 
	 EOF 
;

// Rule UserRef
ruleUserRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUserRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getUserRefAccess().getRepresentativeUserCrossReference_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleInlineRepresentative
entryRuleInlineRepresentative returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInlineRepresentativeRule()); }
	 iv_ruleInlineRepresentative=ruleInlineRepresentative 
	 { $current=$iv_ruleInlineRepresentative.current; } 
	 EOF 
;

// Rule InlineRepresentative
ruleInlineRepresentative returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getInlineRepresentativeAccess().getInlineRepresentativeAction_0(),
            $current);
    }
)	otherlv_1='representative' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInlineRepresentativeAccess().getRepresentativeKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInlineRepresentativeAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='first-name' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInlineRepresentativeAccess().getFirstNameKeyword_3_0());
    }
(
(
		lv_firstname_4_0=RULE_STRING
		{
			newLeafNode(lv_firstname_4_0, grammarAccess.getInlineRepresentativeAccess().getFirstnameSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInlineRepresentativeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"firstname",
        		lv_firstname_4_0, 
        		"STRING");
	    }

)
))?(	otherlv_5='last-name' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInlineRepresentativeAccess().getLastNameKeyword_4_0());
    }
(
(
		lv_lastname_6_0=RULE_STRING
		{
			newLeafNode(lv_lastname_6_0, grammarAccess.getInlineRepresentativeAccess().getLastnameSTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInlineRepresentativeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lastname",
        		lv_lastname_6_0, 
        		"STRING");
	    }

)
))?(	otherlv_7='org-unit' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInlineRepresentativeAccess().getOrgUnitKeyword_5_0());
    }
(
(
		lv_orgUnit_8_0=RULE_STRING
		{
			newLeafNode(lv_orgUnit_8_0, grammarAccess.getInlineRepresentativeAccess().getOrgUnitSTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInlineRepresentativeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"orgUnit",
        		lv_orgUnit_8_0, 
        		"STRING");
	    }

)
))?(	otherlv_9='email' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getInlineRepresentativeAccess().getEmailKeyword_6_0());
    }
(
(
		lv_email_10_0=RULE_STRING
		{
			newLeafNode(lv_email_10_0, grammarAccess.getInlineRepresentativeAccess().getEmailSTRINGTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInlineRepresentativeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"email",
        		lv_email_10_0, 
        		"STRING");
	    }

)
))?(	otherlv_11='phone' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getInlineRepresentativeAccess().getPhoneKeyword_7_0());
    }
(
(
		lv_phone_12_0=RULE_STRING
		{
			newLeafNode(lv_phone_12_0, grammarAccess.getInlineRepresentativeAccess().getPhoneSTRINGTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInlineRepresentativeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"phone",
        		lv_phone_12_0, 
        		"STRING");
	    }

)
))?	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getInlineRepresentativeAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleResponsibility
entryRuleResponsibility returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResponsibilityRule()); }
	 iv_ruleResponsibility=ruleResponsibility 
	 { $current=$iv_ruleResponsibility.current; } 
	 EOF 
;

// Rule Responsibility
ruleResponsibility returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='responsibility' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getResponsibilityAccess().getResponsibilityKeyword_0());
    }
(
(
		lv_description_1_0=RULE_STRING
		{
			newLeafNode(lv_description_1_0, grammarAccess.getResponsibilityAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResponsibilityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleReport
entryRuleReport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReportRule()); }
	 iv_ruleReport=ruleReport 
	 { $current=$iv_ruleReport.current; } 
	 EOF 
;

// Rule Report
ruleReport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='report' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getReportAccess().getReportKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getReportAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReportRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getReportAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='report-to' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getReportAccess().getReportToKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReportRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getReportAccess().getReportToUserCrossReference_4_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='contents' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getReportAccess().getContentsKeyword_5());
    }
(
(
		lv_content_6_0=RULE_STRING
		{
			newLeafNode(lv_content_6_0, grammarAccess.getReportAccess().getContentSTRINGTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReportRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"content",
        		lv_content_6_0, 
        		"STRING");
	    }

)
)	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getReportAccess().getRightCurlyBracketKeyword_7());
    }
)
;







// Entry rule entryRuleVersionId
entryRuleVersionId returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getVersionIdRule()); } 
	 iv_ruleVersionId=ruleVersionId 
	 { $current=$iv_ruleVersionId.current.getText(); }  
	 EOF 
;

// Rule VersionId
ruleVersionId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getVersionIdAccess().getINTTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVersionIdAccess().getFullStopKeyword_1_0()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getVersionIdAccess().getINTTerminalRuleCall_1_1()); 
    }
)*((
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVersionIdAccess().getFullStopKeyword_2_0_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVersionIdAccess().getHyphenMinusKeyword_2_0_1()); 
    }
)    this_ID_5=RULE_ID    {
		$current.merge(this_ID_5);
    }

    { 
    newLeafNode(this_ID_5, grammarAccess.getVersionIdAccess().getIDTerminalRuleCall_2_1()); 
    }
)*)
    ;







// Entry rule entryRuleVersion
entryRuleVersion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVersionRule()); }
	 iv_ruleVersion=ruleVersion 
	 { $current=$iv_ruleVersion.current; } 
	 EOF 
;

// Rule Version
ruleVersion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='version' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVersionAccess().getVersionKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVersionAccess().getVersionVersionIdParserRuleCall_1_0()); 
	    }
		lv_version_1_0=ruleVersionId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVersionRule());
	        }
       		set(
       			$current, 
       			"version",
        		lv_version_1_0, 
        		"VersionId");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVersionRef
entryRuleVersionRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVersionRefRule()); }
	 iv_ruleVersionRef=ruleVersionRef 
	 { $current=$iv_ruleVersionRef.current; } 
	 EOF 
;

// Rule VersionRef
ruleVersionRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getVersionRefAccess().getMinVersionRefParserRuleCall_0()); 
    }
    this_MinVersionRef_0=ruleMinVersionRef
    { 
        $current = $this_MinVersionRef_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getVersionRefAccess().getMaxVersionRefParserRuleCall_1()); 
    }
    this_MaxVersionRef_1=ruleMaxVersionRef
    { 
        $current = $this_MaxVersionRef_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getVersionRefAccess().getLowerBoundRangeVersionRefParserRuleCall_2()); 
    }
    this_LowerBoundRangeVersionRef_2=ruleLowerBoundRangeVersionRef
    { 
        $current = $this_LowerBoundRangeVersionRef_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getVersionRefAccess().getMajorVersionRefParserRuleCall_3()); 
    }
    this_MajorVersionRef_3=ruleMajorVersionRef
    { 
        $current = $this_MajorVersionRef_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getVersionRefAccess().getFixedVersionRefParserRuleCall_4()); 
    }
    this_FixedVersionRef_4=ruleFixedVersionRef
    { 
        $current = $this_FixedVersionRef_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleMinVersionRef
entryRuleMinVersionRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMinVersionRefRule()); }
	 iv_ruleMinVersionRef=ruleMinVersionRef 
	 { $current=$iv_ruleMinVersionRef.current; } 
	 EOF 
;

// Rule MinVersionRef
ruleMinVersionRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='minVersion' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMinVersionRefAccess().getMinVersionKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMinVersionRefAccess().getMinVersionVersionIdParserRuleCall_1_0()); 
	    }
		lv_minVersion_1_0=ruleVersionId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMinVersionRefRule());
	        }
       		set(
       			$current, 
       			"minVersion",
        		lv_minVersion_1_0, 
        		"VersionId");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMaxVersionRef
entryRuleMaxVersionRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMaxVersionRefRule()); }
	 iv_ruleMaxVersionRef=ruleMaxVersionRef 
	 { $current=$iv_ruleMaxVersionRef.current; } 
	 EOF 
;

// Rule MaxVersionRef
ruleMaxVersionRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='maxVersion' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMaxVersionRefAccess().getMaxVersionKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMaxVersionRefAccess().getMaxVersionVersionIdParserRuleCall_1_0()); 
	    }
		lv_maxVersion_1_0=ruleVersionId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMaxVersionRefRule());
	        }
       		set(
       			$current, 
       			"maxVersion",
        		lv_maxVersion_1_0, 
        		"VersionId");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLowerBoundRangeVersionRef
entryRuleLowerBoundRangeVersionRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLowerBoundRangeVersionRefRule()); }
	 iv_ruleLowerBoundRangeVersionRef=ruleLowerBoundRangeVersionRef 
	 { $current=$iv_ruleLowerBoundRangeVersionRef.current; } 
	 EOF 
;

// Rule LowerBoundRangeVersionRef
ruleLowerBoundRangeVersionRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='minVersion' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLowerBoundRangeVersionRefAccess().getMinVersionKeyword_0_0());
    }
	otherlv_1='>=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLowerBoundRangeVersionRefAccess().getGreaterThanSignEqualsSignKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLowerBoundRangeVersionRefAccess().getMinVersionVersionIdParserRuleCall_1_0()); 
	    }
		lv_minVersion_2_0=ruleVersionId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLowerBoundRangeVersionRefRule());
	        }
       		set(
       			$current, 
       			"minVersion",
        		lv_minVersion_2_0, 
        		"VersionId");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLowerBoundRangeVersionRefAccess().getCommaKeyword_2());
    }
(	otherlv_4='maxVersion' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLowerBoundRangeVersionRefAccess().getMaxVersionKeyword_3_0());
    }
	otherlv_5='<' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLowerBoundRangeVersionRefAccess().getLessThanSignKeyword_3_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLowerBoundRangeVersionRefAccess().getMaxVersionVersionIdParserRuleCall_4_0()); 
	    }
		lv_maxVersion_6_0=ruleVersionId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLowerBoundRangeVersionRefRule());
	        }
       		set(
       			$current, 
       			"maxVersion",
        		lv_maxVersion_6_0, 
        		"VersionId");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMajorVersionRef
entryRuleMajorVersionRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMajorVersionRefRule()); }
	 iv_ruleMajorVersionRef=ruleMajorVersionRef 
	 { $current=$iv_ruleMajorVersionRef.current; } 
	 EOF 
;

// Rule MajorVersionRef
ruleMajorVersionRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='majorVersion' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMajorVersionRefAccess().getMajorVersionKeyword_0());
    }
(
(
		lv_majorVersion_1_0=RULE_INT
		{
			newLeafNode(lv_majorVersion_1_0, grammarAccess.getMajorVersionRefAccess().getMajorVersionINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMajorVersionRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"majorVersion",
        		lv_majorVersion_1_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleFixedVersionRef
entryRuleFixedVersionRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFixedVersionRefRule()); }
	 iv_ruleFixedVersionRef=ruleFixedVersionRef 
	 { $current=$iv_ruleFixedVersionRef.current; } 
	 EOF 
;

// Rule FixedVersionRef
ruleFixedVersionRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='fixedVersion' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFixedVersionRefAccess().getFixedVersionKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFixedVersionRefAccess().getFixedVersionVersionIdParserRuleCall_1_0()); 
	    }
		lv_fixedVersion_1_0=ruleVersionId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFixedVersionRefRule());
	        }
       		set(
       			$current, 
       			"fixedVersion",
        		lv_fixedVersion_1_0, 
        		"VersionId");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleQualifiedNameWithWildCard
entryRuleQualifiedNameWithWildCard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildCardRule()); } 
	 iv_ruleQualifiedNameWithWildCard=ruleQualifiedNameWithWildCard 
	 { $current=$iv_ruleQualifiedNameWithWildCard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildCard
ruleQualifiedNameWithWildCard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopAsteriskKeyword_1()); 
    }
)?)
    ;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
((
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0_0()); 
    }

    |
	kw='@' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getCommercialAtKeyword_1_0_1()); 
    }
)    this_ID_3=RULE_ID    {
		$current.merge(this_ID_3);
    }

    { 
    newLeafNode(this_ID_3, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;











// Entry rule entryRuleInfoItem
entryRuleInfoItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInfoItemRule()); }
	 iv_ruleInfoItem=ruleInfoItem 
	 { $current=$iv_ruleInfoItem.current; } 
	 EOF 
;

// Rule InfoItem
ruleInfoItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='location' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInfoItemAccess().getLocationKeyword_0());
    }
(
(
		lv_documentLocation_1_0=RULE_STRING
		{
			newLeafNode(lv_documentLocation_1_0, grammarAccess.getInfoItemAccess().getDocumentLocationSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInfoItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"documentLocation",
        		lv_documentLocation_1_0, 
        		"STRING");
	    }

)
)(	otherlv_2='reference' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInfoItemAccess().getReferenceKeyword_2_0());
    }
(
(
		lv_reference_3_0=RULE_STRING
		{
			newLeafNode(lv_reference_3_0, grammarAccess.getInfoItemAccess().getReferenceSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInfoItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"reference",
        		lv_reference_3_0, 
        		"STRING");
	    }

)
))?)
;







// Entry rule entryRuleRoleRef
entryRuleRoleRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRoleRefRule()); }
	 iv_ruleRoleRef=ruleRoleRef 
	 { $current=$iv_ruleRoleRef.current; } 
	 EOF 
;

// Rule RoleRef
ruleRoleRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRoleRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRoleRefAccess().getRoleRoleCrossReference_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
;







// Entry rule entryRulePrivilegeRef
entryRulePrivilegeRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrivilegeRefRule()); }
	 iv_rulePrivilegeRef=rulePrivilegeRef 
	 { $current=$iv_rulePrivilegeRef.current; } 
	 EOF 
;

// Rule PrivilegeRef
rulePrivilegeRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrivilegeRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPrivilegeRefAccess().getPrivilegePrivilegeCrossReference_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
;







// Entry rule entryRuleAssetRef
entryRuleAssetRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssetRefRule()); }
	 iv_ruleAssetRef=ruleAssetRef 
	 { $current=$iv_ruleAssetRef.current; } 
	 EOF 
;

// Rule AssetRef
ruleAssetRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssetRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAssetRefAccess().getAssetEObjectCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAssetRefAccess().getVersionRefVersionRefParserRuleCall_1_0()); 
	    }
		lv_versionRef_1_0=ruleVersionRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssetRefRule());
	        }
       		set(
       			$current, 
       			"versionRef",
        		lv_versionRef_1_0, 
        		"VersionRef");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Rule HashAlgKind
ruleHashAlgKind returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='MD5' 
	{
        $current = grammarAccess.getHashAlgKindAccess().getMD5EnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getHashAlgKindAccess().getMD5EnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='SHA1' 
	{
        $current = grammarAccess.getHashAlgKindAccess().getSHA1EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getHashAlgKindAccess().getSHA1EnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='SHA256' 
	{
        $current = grammarAccess.getHashAlgKindAccess().getSHA256EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getHashAlgKindAccess().getSHA256EnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='RSA' 
	{
        $current = grammarAccess.getHashAlgKindAccess().getRSAEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getHashAlgKindAccess().getRSAEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='PlainText' 
	{
        $current = grammarAccess.getHashAlgKindAccess().getPlainTextEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getHashAlgKindAccess().getPlainTextEnumLiteralDeclaration_4()); 
    }
));



// Rule MessagePartRefKind
ruleMessagePartRefKind returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='header' 
	{
        $current = grammarAccess.getMessagePartRefKindAccess().getHeaderEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getMessagePartRefKindAccess().getHeaderEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='body' 
	{
        $current = grammarAccess.getMessagePartRefKindAccess().getBodyEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getMessagePartRefKindAccess().getBodyEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='attachments' 
	{
        $current = grammarAccess.getMessagePartRefKindAccess().getAttachmentsEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getMessagePartRefKindAccess().getAttachmentsEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='all' 
	{
        $current = grammarAccess.getMessagePartRefKindAccess().getAllEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getMessagePartRefKindAccess().getAllEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='expression' 
	{
        $current = grammarAccess.getMessagePartRefKindAccess().getExpressionEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getMessagePartRefKindAccess().getExpressionEnumLiteralDeclaration_4()); 
    }
));



// Rule SigningAlgothm
ruleSigningAlgothm returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='NONE' 
	{
        $current = grammarAccess.getSigningAlgothmAccess().getNONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getSigningAlgothmAccess().getNONEEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='SHA1' 
	{
        $current = grammarAccess.getSigningAlgothmAccess().getSHA1EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getSigningAlgothmAccess().getSHA1EnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='SHA256' 
	{
        $current = grammarAccess.getSigningAlgothmAccess().getSHA256EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getSigningAlgothmAccess().getSHA256EnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='MD5' 
	{
        $current = grammarAccess.getSigningAlgothmAccess().getMD5EnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getSigningAlgothmAccess().getMD5EnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='RSA_1_5' 
	{
        $current = grammarAccess.getSigningAlgothmAccess().getRSA_1_5EnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getSigningAlgothmAccess().getRSA_1_5EnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='AES128' 
	{
        $current = grammarAccess.getSigningAlgothmAccess().getAES128EnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getSigningAlgothmAccess().getAES128EnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='AES192' 
	{
        $current = grammarAccess.getSigningAlgothmAccess().getAES192EnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getSigningAlgothmAccess().getAES192EnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='AES256' 
	{
        $current = grammarAccess.getSigningAlgothmAccess().getAES256EnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getSigningAlgothmAccess().getAES256EnumLiteralDeclaration_7()); 
    }
));



// Rule CipherAlgorithmKind
ruleCipherAlgorithmKind returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='NONE' 
	{
        $current = grammarAccess.getCipherAlgorithmKindAccess().getNONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getCipherAlgorithmKindAccess().getNONEEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Basic128' 
	{
        $current = grammarAccess.getCipherAlgorithmKindAccess().getBasic128EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getCipherAlgorithmKindAccess().getBasic128EnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Basic192' 
	{
        $current = grammarAccess.getCipherAlgorithmKindAccess().getBasic192EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getCipherAlgorithmKindAccess().getBasic192EnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Basic256' 
	{
        $current = grammarAccess.getCipherAlgorithmKindAccess().getBasic256EnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getCipherAlgorithmKindAccess().getBasic256EnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='DES' 
	{
        $current = grammarAccess.getCipherAlgorithmKindAccess().getDESEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getCipherAlgorithmKindAccess().getDESEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='3DES' 
	{
        $current = grammarAccess.getCipherAlgorithmKindAccess().getTRIPLE_DESEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getCipherAlgorithmKindAccess().getTRIPLE_DESEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='AES128' 
	{
        $current = grammarAccess.getCipherAlgorithmKindAccess().getAES128EnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getCipherAlgorithmKindAccess().getAES128EnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='AES256' 
	{
        $current = grammarAccess.getCipherAlgorithmKindAccess().getAES256EnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getCipherAlgorithmKindAccess().getAES256EnumLiteralDeclaration_7()); 
    }
));



// Rule AuthTokenKind
ruleAuthTokenKind returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='UsernamePassword' 
	{
        $current = grammarAccess.getAuthTokenKindAccess().getUsernamePasswordEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getAuthTokenKindAccess().getUsernamePasswordEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='SAML' 
	{
        $current = grammarAccess.getAuthTokenKindAccess().getSAMLEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getAuthTokenKindAccess().getSAMLEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='SAML2' 
	{
        $current = grammarAccess.getAuthTokenKindAccess().getSAML2EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getAuthTokenKindAccess().getSAML2EnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Kerberos' 
	{
        $current = grammarAccess.getAuthTokenKindAccess().getKerberosEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getAuthTokenKindAccess().getKerberosEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='SPNEGO' 
	{
        $current = grammarAccess.getAuthTokenKindAccess().getSPNEGOEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getAuthTokenKindAccess().getSPNEGOEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='RELToken' 
	{
        $current = grammarAccess.getAuthTokenKindAccess().getRELTokenEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getAuthTokenKindAccess().getRELTokenEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='X509Certificate' 
	{
        $current = grammarAccess.getAuthTokenKindAccess().getX509CertificateEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getAuthTokenKindAccess().getX509CertificateEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='OAuth' 
	{
        $current = grammarAccess.getAuthTokenKindAccess().getOAuthEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getAuthTokenKindAccess().getOAuthEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='OAuth2' 
	{
        $current = grammarAccess.getAuthTokenKindAccess().getOAuth2EnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getAuthTokenKindAccess().getOAuth2EnumLiteralDeclaration_8()); 
    }
));



// Rule LogRequirementKind
ruleLogRequirementKind returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='none' 
	{
        $current = grammarAccess.getLogRequirementKindAccess().getNoneEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getLogRequirementKindAccess().getNoneEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='header' 
	{
        $current = grammarAccess.getLogRequirementKindAccess().getHeaderEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getLogRequirementKindAccess().getHeaderEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='all' 
	{
        $current = grammarAccess.getLogRequirementKindAccess().getAllEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getLogRequirementKindAccess().getAllEnumLiteralDeclaration_2()); 
    }
));



// Rule ReliablilityKind
ruleReliablilityKind returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='exactly-once' 
	{
        $current = grammarAccess.getReliablilityKindAccess().getEXACTLY_ONCEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getReliablilityKindAccess().getEXACTLY_ONCEEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='at-most-once' 
	{
        $current = grammarAccess.getReliablilityKindAccess().getAT_MOST_ONCEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getReliablilityKindAccess().getAT_MOST_ONCEEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='at-least-once' 
	{
        $current = grammarAccess.getReliablilityKindAccess().getAT_LEAST_ONCEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getReliablilityKindAccess().getAT_LEAST_ONCEEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='best-effort' 
	{
        $current = grammarAccess.getReliablilityKindAccess().getBEST_EFFORTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getReliablilityKindAccess().getBEST_EFFORTEnumLiteralDeclaration_3()); 
    }
));



// Rule GovernanceDecisionResult
ruleGovernanceDecisionResult returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='pending' 
	{
        $current = grammarAccess.getGovernanceDecisionResultAccess().getPendingEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getGovernanceDecisionResultAccess().getPendingEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='accepted' 
	{
        $current = grammarAccess.getGovernanceDecisionResultAccess().getAcceptedEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getGovernanceDecisionResultAccess().getAcceptedEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='denied' 
	{
        $current = grammarAccess.getGovernanceDecisionResultAccess().getDeniedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getGovernanceDecisionResultAccess().getDeniedEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='specific' 
	{
        $current = grammarAccess.getGovernanceDecisionResultAccess().getSpecificEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getGovernanceDecisionResultAccess().getSpecificEnumLiteralDeclaration_3()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


