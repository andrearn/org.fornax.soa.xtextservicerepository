/*
 * generated by Xtext
 */
package org.xkonnex.repo.dsl.servicedsl

import com.google.inject.Binder
import org.eclipse.xtext.conversion.IValueConverterService
import org.eclipse.xtext.documentation.IEObjectDocumentationProvider
import org.eclipse.xtext.documentation.impl.MultiLineCommentDocumentationProvider
import org.eclipse.xtext.resource.IDefaultResourceDescriptionStrategy
import org.eclipse.xtext.scoping.IGlobalScopeProvider
import org.eclipse.xtext.service.SingletonBinding
import org.xkonnex.repo.dsl.basedsl.baseDsl.BaseDslFactory
import org.xkonnex.repo.dsl.basedsl.baseDsl.impl.BaseDslFactoryImpl
import org.xkonnex.repo.dsl.basedsl.converter.BaseDslValueConverterService
import org.xkonnex.repo.dsl.basedsl.resource.EObjectDescriptionBuilder
import org.xkonnex.repo.dsl.basedsl.resource.IEObjectDescriptionBuilder
import org.xkonnex.repo.dsl.basedsl.resource.VersionedResourceDescriptionStrategy
import org.xkonnex.repo.dsl.basedsl.scoping.versions.VersionedGlobalScopeProvider
import org.xkonnex.repo.dsl.basedsl.search.DefaultPredicateSearch
import org.xkonnex.repo.dsl.basedsl.search.IPredicateSearch
import org.xkonnex.repo.dsl.basedsl.validation.IPluggableValidatorProvider
import org.xkonnex.repo.dsl.basedsl.validation.ReflectivePluggableValidatorProvider
import org.xkonnex.repo.dsl.environmentdsl.scoping.IEnvironmentPerspectiveSelector
import org.xkonnex.repo.dsl.environmentdsl.scoping.impl.DefaultEnvironmentPerspectiveSelector
import org.xkonnex.repo.dsl.environmentdsl.util.EnvironmentTypeComparator
import org.xkonnex.repo.dsl.profiledsl.scoping.versions.DefaultStateMatcher
import org.xkonnex.repo.dsl.profiledsl.scoping.versions.ILifecycleStateResolver
import org.xkonnex.repo.dsl.profiledsl.scoping.versions.IStateMatcher
import org.xkonnex.repo.dsl.profiledsl.scoping.versions.LifecycleStateComparator
import org.xkonnex.repo.dsl.profiledsl.state.DefaultStateResolver
import org.xkonnex.repo.dsl.profiledsl.state.ILifecycleStateInferrer
import org.xkonnex.repo.dsl.servicedsl.service.query.type.DataObjectQueryInternal
import org.xkonnex.repo.dsl.servicedsl.service.state.ServiceDslStateInferrer
import org.xkonnex.repo.dsl.servicedsl.service.versioning.DefaultExceptionResolver
import org.xkonnex.repo.dsl.servicedsl.service.versioning.DefaultServiceResolver
import org.xkonnex.repo.dsl.servicedsl.service.versioning.DefaultTypeResolver
import org.xkonnex.repo.dsl.servicedsl.service.versioning.IExceptionResolver
import org.xkonnex.repo.dsl.servicedsl.service.versioning.IServiceResolver
import org.xkonnex.repo.dsl.servicedsl.service.versioning.IVersionedTypeRefResolver
import org.xkonnex.repo.dsl.servicedsl.validation.ServiceDslValidator
import org.xkonnex.repo.dsl.servicedsl.service.versioning.IResourceResolver
import org.xkonnex.repo.dsl.servicedsl.service.versioning.DefaultResourceResolver

/** 
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
class ServiceDslRuntimeModule extends AbstractServiceDslRuntimeModule {
	override Class<? extends IGlobalScopeProvider> bindIGlobalScopeProvider() {
		return VersionedGlobalScopeProvider
	}

	@SingletonBinding(eager=true) 
	override Class<? extends ServiceDslValidator> bindServiceDslValidator() {
		return ServiceDslValidator
	}

	@SingletonBinding(eager=true) 
	def Class<? extends IPluggableValidatorProvider> bindIPluggableValidatorProvider() {
		return ReflectivePluggableValidatorProvider
	}

	def void configureIDefaultResourceDescriptionStrategy(Binder binder) {
		binder.bind(IDefaultResourceDescriptionStrategy).to(VersionedResourceDescriptionStrategy)
	}

	def void configureIEObjectDocumentationProvider(Binder binder) {
		binder.bind(IEObjectDocumentationProvider).to(
			MultiLineCommentDocumentationProvider)
	}

	@SingletonBinding(eager=true) def Class<DataObjectQueryInternal> bindBusinessObjectQuery() {
		return DataObjectQueryInternal
	}

	def Class<? extends IPredicateSearch> bindIPredicateSearch() {
		return DefaultPredicateSearch
	}

	@SingletonBinding(eager=true) def Class<? extends IEObjectDescriptionBuilder> bindEObjectDescriptionBuilder() {
		return EObjectDescriptionBuilder
	}

	def Class<? extends IStateMatcher> bindIStateMatcher() {
		return DefaultStateMatcher
	}

	def Class<? extends EnvironmentTypeComparator> bindEnvironmentTypeComparator() {
		return EnvironmentTypeComparator
	}

	def Class<? extends LifecycleStateComparator> bindLifecycleStateComparator() {
		return LifecycleStateComparator
	}

	def Class<? extends ILifecycleStateResolver> bindLifecycleStateResolver() {
		return DefaultStateResolver
	}

	def Class<? extends ILifecycleStateInferrer> bindILifecycleStateInferrer() {
		return ServiceDslStateInferrer
	}

	@SingletonBinding def Class<? extends IEnvironmentPerspectiveSelector> bindIEnvironmentPerspectiveSelector() {
		return DefaultEnvironmentPerspectiveSelector
	}

	def Class<? extends IVersionedTypeRefResolver> bindIVersionedTypeRefResolver() {
		return DefaultTypeResolver
	}

	def Class<? extends IServiceResolver> bindIServiceResolver() {
		return DefaultServiceResolver
	}
	
	def Class<? extends IResourceResolver> bindIResourceResolver() {
		return DefaultResourceResolver
	}

	def Class<? extends IExceptionResolver> bindIExceptionResolver() {
		return DefaultExceptionResolver
	}

	def Class<? extends BaseDslFactory> bindSOABaseDslFactory() {
		return BaseDslFactoryImpl
	}

	override Class<? extends IValueConverterService> bindIValueConverterService() {
		return BaseDslValueConverterService
	}
}
