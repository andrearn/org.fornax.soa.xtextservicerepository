/*
 * generated by Xtext 2.9.1
 */
package org.xkonnex.repo.dsl.profiledsl.ui.outline

import com.google.inject.Inject
import org.eclipse.xtext.ui.IImageHelper
import org.eclipse.xtext.ui.editor.outline.IOutlineNode
import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider
import org.eclipse.xtext.ui.editor.outline.impl.DocumentRootNode
import org.xkonnex.repo.dsl.profiledsl.profileDsl.InternalNamespaceRule
import org.xkonnex.repo.dsl.profiledsl.profileDsl.Lifecycle
import org.xkonnex.repo.dsl.profiledsl.profileDsl.LifecycleState
import org.xkonnex.repo.dsl.profiledsl.profileDsl.MessageHeader
import org.xkonnex.repo.dsl.profiledsl.profileDsl.Messaging
import org.xkonnex.repo.dsl.profiledsl.profileDsl.Profile
import org.xkonnex.repo.dsl.profiledsl.profileDsl.ProfileDslPackage
import org.xkonnex.repo.dsl.profiledsl.profileDsl.ProfileModel
import org.xkonnex.repo.dsl.profiledsl.profileDsl.Transition
import org.xkonnex.repo.dsl.profiledsl.profileDsl.TypeDefPolicy
import org.xkonnex.repo.dsl.profiledsl.profileDsl.Enumeration

/**
 * Customization of the default outline structure.
 *
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#outline
 */
class ProfileDslOutlineTreeProvider extends DefaultOutlineTreeProvider {
	
	@Inject
	private IImageHelper imageHelper;
	
	def protected _createChildren(DocumentRootNode parentNode, ProfileModel model) {
		for (type : model.types) {
			parentNode.createNode(type);
		}
		for (profile : model.profiles) {
			parentNode.createNode(profile);
		}
	}
	
	def protected _createChildren(IOutlineNode parentNode, Profile profile) {
		parentNode.createNode (profile.lifecycle)
		parentNode.createEStructuralFeatureNode(profile, ProfileDslPackage.Literals.PROFILE__SERVICE_CATEGORY, imageHelper.getImage("defaultoutlinenode.gif"), "Categories", false)
		parentNode.createNode (profile.designRules)
		parentNode.createNode (profile.versioningRule)
		parentNode.createNode (profile.messaging)
		for (ns : profile.namespaces) {
			parentNode.createNode(ns)
		}
		parentNode.createNode(profile.namespaceRules)
		for (scopedType : profile.scopedBasicTypes) {
			parentNode.createNode (scopedType)
		}
		for (decision : profile.governanceDecisions) {
			parentNode.createNode (decision)
		}
	}

	def protected _createChildren(IOutlineNode parentNode, Messaging msg) {
		for (header : msg.messageHeaders) {
			parentNode.createNode (header)
		}
	}
	
	def protected _createChildren(IOutlineNode parentNode, MessageHeader header) {
		for (param : header.parameters) {
			parentNode.createNode(param)
		}
	}
	
	def protected _createChildren(IOutlineNode parentNode, Lifecycle lifecycle) {
		for (state : lifecycle.states) {
			parentNode.createNode(state)
		}
	}
	
	def protected _createChildren(IOutlineNode parentNode, LifecycleState state) {
		for (transition : state.transitions) {
			parentNode.createNode(transition)
		}
	}
	
	def protected _createChildren(IOutlineNode parentNode, Enumeration enumeration) {
		for (lit : enumeration.literals) {
			parentNode.createNode(lit)
		}
	}
	def protected _createChildren(IOutlineNode parentNode, org.xkonnex.repo.dsl.profiledsl.profileDsl.Class clazz) {
		for (prop : clazz.properties) {
			parentNode.createNode(prop)
		}
	}
	
	 
	def protected _isLeaf(Transition modelElement) {
		true
	}
	
	def protected _isLeaf(TypeDefPolicy ele) {
		true
	}
	
	def protected _isLeaf(InternalNamespaceRule ele) {
		true
	}
	
	def protected _isLeaf(org.xkonnex.repo.dsl.profiledsl.profileDsl.Property  ele) {
		true
	}
}
