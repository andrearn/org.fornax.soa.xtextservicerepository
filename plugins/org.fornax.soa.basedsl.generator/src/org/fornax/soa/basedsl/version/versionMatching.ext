import sOABaseDsl;

extension org::fornax::soa::basedsl::version::versionQualifying;

boolean versionMatches (sOABaseDsl::Version v, VersionRef r) : false;
boolean versionMatches (sOABaseDsl::Version v, Integer majorVer) : v.version.toVersionNumber().split("\\.").get(0) == majorVer.toString() || (v.toVersionNumber().split("\\.").get(0) == majorVer.toString());
boolean versionMatches (sOABaseDsl::Version v, MinVersionRef r) : v.toVersionNumber() == r.minVersion.toVersionNumber() || v.toVersionNumber() > r.minVersion.toVersionNumber();
boolean versionMatches (sOABaseDsl::Version v, MaxVersionRef r) : v.toVersionNumber() == r.maxVersion.toVersionNumber() || v.toVersionNumber() < r.maxVersion.toVersionNumber();
boolean versionMatches (sOABaseDsl::Version v, LowerBoundRangeVersionRef r) : v.version.toVersionNumber() == r.minVersion.toVersionNumber() || (v.toVersionNumber() > r.minVersion.toVersionNumber() && v < r.maxVersion.toVersionNumber());
boolean versionMatches (sOABaseDsl::Version v, MajorVersionRef r) : v.version.toVersionNumber().split("\\.").get(0) == r.majorVersion.toString() || (v.toVersionNumber().split("\\.").get(0) == r.majorVersion.toString());


boolean matchesMajorVersion (sOABaseDsl::Version v, String majorVer) : v.version.toVersionNumber().split("\\.").first() == majorVer ? true : false;
