/*
 * generated by Xtext
 */
package org.fornax.soa;

import org.eclipse.xtext.documentation.IEObjectDocumentationProvider;
import org.eclipse.xtext.resource.IDefaultResourceDescriptionStrategy;
import org.fornax.soa.basedsl.documentation.DocFeatureDocumationProvider;
import org.fornax.soa.basedsl.resource.EObjectDescriptionBuilder;
import org.fornax.soa.basedsl.resource.IEObjectDescriptionBuilder;
import org.fornax.soa.basedsl.resource.VersionedResourceDescriptionStrategy;
import org.fornax.soa.basedsl.scoping.VersionedGlobalScopeProvider;
import org.fornax.soa.basedsl.search.IPredicateSearch;
import org.fornax.soa.basedsl.search.PredicateSearch;
import org.fornax.soa.basedsl.validation.IPluggableValidatorProvider;
import org.fornax.soa.basedsl.validation.ReflectivePluggableValidatorProvider;
import org.fornax.soa.profiledsl.scoping.versions.IStateMatcher;
import org.fornax.soa.profiledsl.scoping.versions.LifecycleStateComparator;
import org.fornax.soa.profiledsl.scoping.versions.LifecycleStateResolver;
import org.fornax.soa.profiledsl.scoping.versions.StateAttributeLifecycleStateResolver;
import org.fornax.soa.profiledsl.scoping.versions.DefaultStateMatcher;
import org.fornax.soa.query.BusinessObjectQuery;
import org.fornax.soa.util.EnvironmentTypeComparator;

import com.google.inject.Binder;

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
public class ServiceDslRuntimeModule extends org.fornax.soa.AbstractServiceDslRuntimeModule {
	
	public Class<? extends org.eclipse.xtext.scoping.IGlobalScopeProvider> bindIGlobalScopeProvider() {
		return VersionedGlobalScopeProvider.class;
	}

	@org.eclipse.xtext.service.SingletonBinding(eager=true)	public Class<? extends org.fornax.soa.validation.ServiceDslJavaValidator> bindServiceDslJavaValidator() {
		return org.fornax.soa.validation.ServiceDslJavaValidator.class;
	}
	
	@org.eclipse.xtext.service.SingletonBinding(eager=true)	
	public Class<? extends IPluggableValidatorProvider> bindIPluggableValidatorProvider () {
		return ReflectivePluggableValidatorProvider.class;
	}
	
	public void configureIDefaultResourceDescriptionStrategy (Binder binder) {
		binder.bind(IDefaultResourceDescriptionStrategy.class).to(VersionedResourceDescriptionStrategy.class);
	}
	
	public void configureIEObjectDocumentationProvider (Binder binder) {
		binder.bind(IEObjectDocumentationProvider.class).to(DocFeatureDocumationProvider.class);
	}
	
	@org.eclipse.xtext.service.SingletonBinding(eager=true)	
	public Class<org.fornax.soa.query.BusinessObjectQuery> bindBusinessObjectQuery () {
		return BusinessObjectQuery.class;
	}
	
	public Class<? extends IPredicateSearch> bindIPredicateSearch () {
		return PredicateSearch.class;
	}
	
	@org.eclipse.xtext.service.SingletonBinding(eager=true)	
	public Class<? extends IEObjectDescriptionBuilder> bindEObjectDescriptionBuilder () {
		return EObjectDescriptionBuilder.class;
	}

	
	public Class<? extends IStateMatcher> bindIStateMatcher () {
		return DefaultStateMatcher.class;
	}
	
	public Class<? extends EnvironmentTypeComparator> bindEnvironmentTypeComparator () {
		return EnvironmentTypeComparator.class;
	}
	
	public Class<? extends LifecycleStateComparator> bindLifecycleStateComparator () {
		return LifecycleStateComparator.class;
	}
	
	public Class<? extends LifecycleStateResolver> bindLifecycleStateResolver () {
		return StateAttributeLifecycleStateResolver.class;
	}

}

