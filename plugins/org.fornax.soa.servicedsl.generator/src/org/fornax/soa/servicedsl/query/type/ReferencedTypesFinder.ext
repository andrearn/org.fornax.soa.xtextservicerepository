import sOABaseDsl;
import serviceDsl;

extension org::fornax::soa::basedsl::lifecycle::stateMatching;
extension org::fornax::soa::basedsl::version::versionMatching;
extension org::fornax::soa::servicedsl::templates::common;
extension org::fornax::soa::servicedsl::query::services;
extension org::fornax::soa::servicedsl::query::namespace::subnamespaces;
extension org::fornax::soa::servicedsl::query::type::LatestMatchingTypeFinder;


List[serviceDsl::TypeRef] allReferencedTypeRefs (Type t) : {};

List[serviceDsl::TypeRef] allReferencedTypeRefs (BusinessObject t) : 
	t.superBusinessObject != null ? 	
		{t.superBusinessObject}.addAll(t.properties.type)
		:
		t.properties.type;
		
List[serviceDsl::TypeRef] allReferencedTypeRefs (sOAProfileDsl::Class t) : 
	t.superClass != null ? 	
		t.properties.typeSelect(sOAProfileDsl::Property).type.union({t.superClass})
		:
		t.properties.typeSelect(sOAProfileDsl::Property).type;
		
List[serviceDsl::TypeRef] allReferencedTypeRefs (Exception t) : 
	t.properties.type;

List[serviceDsl::TypeRef] allReferencedTypeRefs (Parameter p) : 
	p.type;

List[serviceDsl::TypeRef] allReferencedTypeRefs (Operation o) : 
	o.parameters.allReferencedTypeRefs()
	.union(o.return.allReferencedTypeRefs());

List[serviceDsl::TypeRef] allReferencedTypeRefs (Service s) : 
	s.operations.allReferencedTypeRefs();



List[serviceDsl::VersionedType] allReferencedVersionedTypes (Type t, LifecycleState minState) : {};

List[serviceDsl::VersionedType] allReferencedVersionedTypes (BusinessObject t, LifecycleState minState) : 
	t.allReferencedTypeRefs().typeSelect(AbstractVersionedTypeRef).selectLatestMatchingType ();	

List[serviceDsl::VersionedType] allReferencedVersionedTypes (Exception t, LifecycleState minState) : 
	t.allReferencedTypeRefs().typeSelect(AbstractVersionedTypeRef).selectLatestMatchingType ();

List[serviceDsl::VersionedType] allReferencedVersionedTypes (Parameter p, LifecycleState minState) : 
	p.allReferencedTypeRefs().typeSelect(AbstractVersionedTypeRef).selectLatestMatchingType ();

List[serviceDsl::VersionedType] allReferencedVersionedTypes (Operation o, LifecycleState minState) : 
	o.allReferencedTypeRefs().typeSelect(AbstractVersionedTypeRef).selectLatestMatchingType ();

List[serviceDsl::VersionedType] allReferencedVersionedTypes (Service s, LifecycleState minState) : 
	s.allReferencedTypeRefs().typeSelect(AbstractVersionedTypeRef).selectLatestMatchingType ();

List[serviceDsl::VersionedType] allReferencedVersionedTypes (sOAProfileDsl::Class t) : 
	t.allReferencedTypeRefs().typeSelect(sOAProfileDsl::VersionedTypeRef).selectLatestMatchingType ();	
