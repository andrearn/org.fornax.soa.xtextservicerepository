«IMPORT sOABaseDsl»
«IMPORT serviceDsl»;
«IMPORT bindingDsl»;

«EXTENSION org::fornax::soa::basedsl::common»
«EXTENSION org::fornax::soa::basedsl::version::versionQualifying»
«EXTENSION org::fornax::soa::servicedsl::domain::splitting»
«EXTENSION org::fornax::soa::servicedsl::query::services»
«EXTENSION org::fornax::soa::servicedsl::templates::common»
«EXTENSION org::fornax::soa::servicedsl::templates::domains»
«EXTENSION org::fornax::soa::servicedsl::templates::services»


«DEFINE main (LifecycleState minState, sOAProfileDsl::SOAProfile profile, String registryBaseUrl) FOR serviceDsl::ServiceModel-»
	«EXPAND OrganizationNamespace (minState, profile, registryBaseUrl) FOREACH this.getAllServiceModels().orgNamespaces»
«ENDDEFINE»

«DEFINE OrganizationNamespace (LifecycleState minState, sOAProfileDsl::SOAProfile profile, String registryBaseUrl) FOR serviceDsl::OrganizationNamespace»
	«EXPAND SubNamespace (minState, profile, registryBaseUrl) FOREACH subNamespaces»
«ENDDEFINE»

«DEFINE SubNamespace (LifecycleState minState, sOAProfileDsl::SOAProfile profile, String registryBaseUrl) FOR SubNamespace»
	«ERROR "not a concrete type"»
«ENDDEFINE»

«DEFINE SubNamespace (LifecycleState minState, sOAProfileDsl::SOAProfile profile, String registryBaseUrl) FOR DomainNamespace»
	«EXPAND SubNamespace (minState, profile, registryBaseUrl) FOREACH interalNamespaces»
	«FOREACH this.toVersionedDomainNamespaces() AS verNs»
		«EXPAND Service (this, minState, profile, registryBaseUrl) FOREACH verNs.servicesWithMinState (minState).typeSelect(Service).select(e|e.isLatestMatchingService(verNs.version.asInteger(), minState)).select(e|e.providedContractUrl == null)»
	«ENDFOREACH»
	«EXPAND BusinessObject (minState, profile, registryBaseUrl)»
«ENDDEFINE»

«DEFINE SubNamespace (LifecycleState minState, sOAProfileDsl::SOAProfile profile, String registryBaseUrl) FOR InternalNamespace»
	«FOREACH this.toVersionedDomainNamespaces() AS verNs»
		«EXPAND Service (this, minState, profile, registryBaseUrl) FOREACH verNs.servicesWithMinState (minState).typeSelect(Service).select(e|e.isLatestMatchingService(verNs.version.asInteger(), minState)).select(e|e.providedContractUrl == null)»
	«ENDFOREACH»
	«EXPAND BusinessObject (minState, profile, registryBaseUrl)»
«ENDDEFINE»



«DEFINE Service (DomainNamespace subDom, LifecycleState minState, sOAProfileDsl::SOAProfile profile, String registryBaseUrl) FOR Service»
	«EXPAND WSDL::WSDL (subDom, minState, profile, registryBaseUrl)-»
«ENDDEFINE»
«DEFINE Service (InternalNamespace subDom, LifecycleState minState, sOAProfileDsl::SOAProfile profile, String registryBaseUrl) FOR Service»
	«EXPAND WSDL::WSDL (subDom, minState, profile, registryBaseUrl)-»
«ENDDEFINE»



«DEFINE BusinessObject (LifecycleState minState, sOAProfileDsl::SOAProfile profile, String registryBaseUrl) FOR DomainNamespace»
	«EXPAND XSD::XSD (minState, profile, registryBaseUrl)»
«ENDDEFINE»

«DEFINE BusinessObject (LifecycleState minState, sOAProfileDsl::SOAProfile profile, String registryBaseUrl) FOR InternalNamespace»
	«EXPAND XSD::XSD (minState, profile, registryBaseUrl)»
«ENDDEFINE»


