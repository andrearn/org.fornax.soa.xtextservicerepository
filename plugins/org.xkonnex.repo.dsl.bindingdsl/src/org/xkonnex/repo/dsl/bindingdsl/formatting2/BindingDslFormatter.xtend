/*
 * generated by Xtext 2.9.1
 */
package org.xkonnex.repo.dsl.bindingdsl.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xkonnex.repo.dsl.basedsl.baseDsl.GovernanceDecision
import org.xkonnex.repo.dsl.basedsl.baseDsl.Import
import org.xkonnex.repo.dsl.basedsl.formatting2.BaseDslFormatter
import org.xkonnex.repo.dsl.bindingdsl.bindingDsl.Assertion
import org.xkonnex.repo.dsl.bindingdsl.bindingDsl.Binding
import org.xkonnex.repo.dsl.bindingdsl.bindingDsl.BindingModel
import org.xkonnex.repo.dsl.bindingdsl.bindingDsl.BindingProtocol
import org.xkonnex.repo.dsl.bindingdsl.bindingDsl.ModuleBinding
import org.xkonnex.repo.dsl.bindingdsl.bindingDsl.Policy
import org.xkonnex.repo.dsl.bindingdsl.bindingDsl.ServiceBinding
import org.xkonnex.repo.dsl.bindingdsl.services.BindingDslGrammarAccess

class BindingDslFormatter extends BaseDslFormatter {
	
	@Inject extension BindingDslGrammarAccess

	def dispatch void format(BindingModel bindingModel, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Import imports : bindingModel.getImports()) {
			imports.format;
		}
		for (Binding bindings : bindingModel.getBindings()) {
			bindings.format;
		}
	}

	def dispatch void format(ModuleBinding moduleBinding, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		moduleBinding.getModule.format;
		moduleBinding.getEndpointQualifierRef.format;
		for (GovernanceDecision governanceDecisions : moduleBinding.getGovernanceDecisions()) {
			governanceDecisions.format;
		}
		for (BindingProtocol protocol : moduleBinding.getProtocol()) {
			protocol.format;
		}
		for (Policy policies : moduleBinding.getPolicies()) {
			policies.format;
		}
		for (Assertion assertions : moduleBinding.getAssertions()) {
			assertions.format;
		}
		for (ServiceBinding serviceBindings : moduleBinding.getServiceBindings()) {
			serviceBindings.format;
		}
	}
	
	// TODO: implement for ModuleRef, ServiceBinding, ServiceRef, ChannelBinding, OperationBinding, ExtensibleProtocol, SOAP, SAP, EJB, HTTP, REST, JMS, Topic, Queue, SCA, FILE, FTP, IIOP, AMQP, AuthenticationPolicy, SigningPolicy, EncryptionPolicy, AvailabilityAssertion, LatencyAssertion
}
