/*
 * generated by Xtext
 */
package org.xkonnex.repo.dsl.environmentdsl

import org.eclipse.xtext.conversion.IValueConverterService
import org.xkonnex.repo.dsl.basedsl.validation.IPluggableValidatorProvider
import org.xkonnex.repo.dsl.basedsl.validation.ReflectivePluggableValidatorProvider
import org.xkonnex.repo.dsl.environmentdsl.converter.EnvironmentDslValueConverterService
import org.xkonnex.repo.dsl.environmentdsl.scoping.IEnvironmentPerspectiveSelector
import org.xkonnex.repo.dsl.environmentdsl.scoping.impl.DefaultEnvironmentPerspectiveSelector

/** 
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
class EnvironmentDslRuntimeModule extends org.xkonnex.repo.dsl.environmentdsl.AbstractEnvironmentDslRuntimeModule {
	@org.eclipse.xtext.service.SingletonBinding(eager=true) def Class<? extends IPluggableValidatorProvider> bindIPluggableValidatorProvider() {
		return ReflectivePluggableValidatorProvider
	}

	@org.eclipse.xtext.service.SingletonBinding def Class<? extends IEnvironmentPerspectiveSelector> bindIEnvironmentPerspectiveSelector() {
		return DefaultEnvironmentPerspectiveSelector
	}

	override Class<? extends IValueConverterService> bindIValueConverterService() {
		return EnvironmentDslValueConverterService
	}
}
