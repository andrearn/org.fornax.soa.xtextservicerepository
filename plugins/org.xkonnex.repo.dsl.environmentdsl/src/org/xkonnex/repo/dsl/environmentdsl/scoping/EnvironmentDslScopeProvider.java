/*
 * generated by Xtext
 */
package org.xkonnex.repo.dsl.environmentdsl.scoping;

import javax.inject.Inject;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.common.types.JvmType;
import org.eclipse.xtext.common.types.xtext.AbstractTypeScope;
import org.eclipse.xtext.naming.IQualifiedNameProvider;
import org.eclipse.xtext.resource.IEObjectDescription;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.impl.ImportedNamespaceAwareLocalScopeProvider;
import org.xkonnex.repo.dsl.basedsl.baseDsl.AbstractType;
import org.xkonnex.repo.dsl.basedsl.scoping.ComponentAwareVersionedScopeProvider;
import org.xkonnex.repo.dsl.basedsl.scoping.versions.filter.AbstractPredicateVersionFilter;
import org.xkonnex.repo.dsl.basedsl.scoping.versions.filter.NullVersionFilter;
import org.xkonnex.repo.dsl.environmentdsl.environmentDsl.ExtensibleConnector;
import org.xkonnex.repo.dsl.environmentdsl.environmentDsl.ExtensibleServer;

/**
 * This class contains custom scoping description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#scoping
 * on how and when to use it 
 *
 */
public class EnvironmentDslScopeProvider extends ComponentAwareVersionedScopeProvider {
	
	@Inject IQualifiedNameProvider nameProvider;

	@Override
	protected AbstractPredicateVersionFilter<IEObjectDescription> getVersionFilterFromContext(
			EObject context, EReference reference) {
		return new NullVersionFilter<IEObjectDescription>();
	}
}
