/*
* generated by Xtext
*/
package org.fornax.soa.moduledsl.ui.labeling;

import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.jface.viewers.StyledString;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;
import org.fornax.soa.basedsl.ui.labeling.SOABaseDslLabelHelper;
import org.fornax.soa.moduledsl.moduleDsl.ImportServiceRef;
import org.fornax.soa.moduledsl.moduleDsl.Module;
import org.fornax.soa.moduledsl.moduleDsl.ModuleRef;
import org.fornax.soa.moduledsl.moduleDsl.ServiceRef;
import org.fornax.soa.profiledsl.sOAProfileDsl.LifecycleState;
import org.fornax.soa.profiledsl.scoping.versions.ILifecycleStateResolver;
import org.fornax.soa.serviceDsl.impl.ServiceImpl;

import com.google.inject.Inject;

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#labelProvider
 */
public class ModuleDslLabelProvider extends DefaultEObjectLabelProvider {
	
	@Inject
	private ILifecycleStateResolver stateResolver;

	@Inject
	public ModuleDslLabelProvider(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	Object text(Module mod) {
		StyledString name = new StyledString(mod.getName());
		LifecycleState state = stateResolver.getLifecycleState(mod);
		String stateName = state != null ? state.getName () : "";
		StyledString versionAndState  = new StyledString(" " + mod.getVersion().getVersion() + " " + stateName, StyledString.DECORATIONS_STYLER);
		name.append(versionAndState);
		return name;
	}
	
	String image(Module mod) {
		return "Module.gif";
	}
	
	Object text(ServiceRef s) {
		StyledString name = new StyledString(s.getService().getName());
		StyledString versionAndState  = new StyledString(" " + SOABaseDslLabelHelper.getVersionConstraint (s.getVersionRef()), StyledString.DECORATIONS_STYLER);
		name.append(versionAndState);
		return name;
	}
	Object text(ImportServiceRef s) {
		StyledString name = new StyledString(s.getService().getName());
		StyledString versionAndState  = new StyledString(" " + SOABaseDslLabelHelper.getVersionConstraint (s.getVersionRef()), StyledString.DECORATIONS_STYLER);
		name.append(versionAndState);
		return name;
	}
	
	Object text(ModuleRef modRef) {
		StyledString name = new StyledString(modRef.getModuleRef().getModule().getName());
		StyledString versionAndState  = new StyledString(" " + SOABaseDslLabelHelper.getVersionConstraint (modRef.getModuleRef().getVersion()), StyledString.DECORATIONS_STYLER);
		name.append(versionAndState);
		return name;
	}
	
	String image(ServiceRef svc) {
		return "ServiceExportRef.gif";
	}
	
	String image(ImportServiceRef svc) {
		return "ImportServiceRef.gif";
	}

}
