import org.eclipse.xtext.graphview.shape.*
import org.eclipse.xtext.graphview.layout.*  
import org.eclipse.xtext.graphview.behavior.layout.*  
import org.eclipse.draw2d.*
import org.eclipse.swt.SWT
import BusinessObjectDiagram.*
import org.fornax.soa.serviceDsl.BusinessObject

stylesheet BusinessObjectDiagram for BusinessObjectDiagram

style BusinessObjectDiagram {
	autoLayoutManager = new KielerAutoLayout() 
}

style DataObjectNode as RoundedRectangleShape { 
	backgroundColor = color(#d8e8f8)
}


style DataObjectNode { 
	font = font("Helvetica", 12, SWT::LEFT + 
		(if (element instanceof BusinessObject && (element as BusinessObject).abstract) SWT::ITALIC else SWT::NONE)
	)
}
style DataObjectNode.Name { 
	font = font("Helvetica", 12, SWT::CENTER + SWT::BOLD	)
}
style DataObjectNode.Version { 
	font = font("Helvetica", 12, SWT::CENTER 
	)
}

style DataObjectNode.PropertiesNode as RoundedRectangleShape {
	outline = false
	backgroundColor = color(#ffffff)
	font = font("Helvetica", 12, SWT::LEFT+ 
		(SWT::NONE)
	)
}

style DataObjectNode.EnumReferenceEdge {
	lineStyle = SWT::LINE_DASH
	foregroundColor = color(#cccccc)
}


style HiddenDataObjectNode as RoundedRectangleShape { 
	backgroundColor = color(#d8e8f8)
}
style HiddenDataObjectNode { 
	font = font("Helvetica", 12, SWT::CENTER +
		(if (element instanceof BusinessObject && (element as BusinessObject).abstract) SWT::ITALIC else SWT::NONE)
	)
}
style HiddenDataObjectNode.Name { 
	font = font("Helvetica", 12, SWT::CENTER + SWT::BOLD 
	)
}

style HiddenDataObjectNode.PropertiesNode as RoundedRectangleShape {
	outline = false
	backgroundColor = color(#ffffff)
	font = font("Helvetica", 12, SWT::LEAD + SWT::LEFT+ 
		(SWT::NONE)
	)
}


style DataObjectNode.HiddenReferenceEdge.HiddenEdgeLabel {
	connectionAlignment = ConnectionLocator::TARGET
}
style HiddenDataObjectNode.HiddenEnumReferenceEdge {
	lineStyle = SWT::LINE_DASH
	foregroundColor = color(#cccccc)
}

style DataObjectNode.InhertanceEdge as ConnectionShape  {
	var arrow = new PolygonDecoration()
	arrow.setScale(8,8)
	arrow.backgroundColor = color(#ffffff)
	arrow.lineWidth = 2
	targetDecoration = arrow 
}
style HiddenDataObjectNode.HiddenInhertanceEdge as ConnectionShape  {
	var hiddenArrow = new PolygonDecoration()
	hiddenArrow.setScale(8,8)
	hiddenArrow.backgroundColor = color(#ffffff)
	hiddenArrow.lineWidth = 2
	targetDecoration = hiddenArrow 
}


style EnumNode as RoundedRectangleShape { 
	backgroundColor = color(#f8e8a8)
}
style EnumNode { 
	font = font("Helvetica", 12, SWT::CENTER + 
		 SWT::NONE
	)
}
style EnumNode.Name { 
	font = font("Helvetica", 12, SWT::CENTER + SWT::BOLD + 
		 SWT::NONE
	)
}
style EnumNode.EnumLabel { 
	font = font("Helvetica", 12, SWT::CENTER + SWT::BOLD + 
		 SWT::NONE
	)
}
style EnumNode.EnumLiteralNode as RoundedRectangleShape {
	outline = false
	backgroundColor = color(#ffffff)
	font = font("Helvetica", 12, SWT::LEAD + SWT::LEFT+ 
		(SWT::NONE)
	)
}

style ExceptionNode as RoundedRectangleShape { 
	backgroundColor = color(#f8e8d8)
}
style ExceptionNode { 
	font = font("Helvetica", 12, SWT::CENTER 
	)
}
style ExceptionNode.ExceptionLabel { 
	font = font("Helvetica", 12, SWT::CENTER + SWT::BOLD 
	)
}
style ExceptionNode.Name { 
	font = font("Helvetica", 12, SWT::CENTER + SWT::BOLD 
	)
}
style ExceptionNode.PropertiesNode as RoundedRectangleShape {
	outline = false
	backgroundColor = color(#ffffff)
	font = font("Helvetica", 12, SWT::LEAD + SWT::LEFT+ 
		(SWT::NONE)
	)
}
