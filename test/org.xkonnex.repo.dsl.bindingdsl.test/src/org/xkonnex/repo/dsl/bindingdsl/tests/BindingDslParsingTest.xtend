/*
 * generated by Xtext 2.9.1
 */
package org.xkonnex.repo.dsl.bindingdsl.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith
import org.xkonnex.repo.dsl.bindingdsl.bindingDsl.BindingModel
import org.xkonnex.repo.dsl.bindingdsl.test.BindingDslWithDependenciesInjectorProvider

@RunWith(XtextRunner)
@InjectWith(BindingDslWithDependenciesInjectorProvider)
class BindingDslParsingTest{

	@Inject
	ParseHelper<BindingModel> parseHelper;

	@Test 
	def void loadModel() {
		val result = parseHelper.parse('''
			/*
			 * We make the module org.example.sales.esb available in the development environment
			 */
			bind-module org.example.sales.esb majorVersion 1 as org.example.sales.esb.dev 
				/* The module will be deployed on this server (the ESB) */
				to server Dev.DevESB {
				
				/*
				 * Per default, all services of the module are provided as HTTP/SOAP services
				 */
				default-protocols {
					SOAP {
						
					}
				}
				
				/**
				 * The default policies for security and logging
				 */
				default-policies {
					/**
					 * Policy for authentication
					 */
					authn-policy {
						auth-tokens {
							/* We support user/password authentication */
							UsernamePassword
						}
						hash-algorithms {
							/** The password is being hashed with MD5 encoded with Base64*/
							Base64-encoded
							MD5
						}
					}
					/**
					 * Message bodies and attachments can be encrypted with AES128 or AES256
					 */
					encryption-policy {
						supported-algorithms NONE AES128 AES256
						encrypted-message-parts body , attachments
					}
					/**
					 * Message bodies and attachments are to be signed with an SHA1 or MD5 hash
					 */
					signing-policy {
						supported-algorithms SHA1 MD5
						signed-message-parts body , attachments
					}
					
					/**
					 * The headers of all messages are to be logged
					 */
					logging-policy header
				}
				
			}
		''')
		Assert.assertNotNull(result)
	}

}
