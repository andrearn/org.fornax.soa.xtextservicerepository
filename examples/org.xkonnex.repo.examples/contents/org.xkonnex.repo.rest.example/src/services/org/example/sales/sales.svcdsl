import SampleArchitectureProfile.ExSOALifecycle.*
import SampleArchitectureProfile.*

import org.example.common.*

/*
 * The canonical namespace of the sales domain 
 * (canonical data model and services)
 */
domain-namespace org.example.sales shortname "sal" {
	
	
	/*
	 * Let's define a customer
	 */
	businessObject Customer {
		metadata {
			version 1.0
			lifecycle-state development
		}
		/* The ID of the customer, which may be generated by some backend */
		provided-key customerId : string
		person : Person majorVersion 1
		address : Address majorVersion 1
	}
	
	/*
	 * An exception, if the customer does not exist
	 */
	exception NoSuchCustomerException {
		metadata {
			version 1.0
			lifecycle-state test
		}
	}
	
	exception NoSuchCustomerException {
		metadata {
			version 1.1
			lifecycle-state development
		}
	}
	
	public resource CustomerResource {
		metadata {
			version 1.0
			lifecycle-state development
		}
		base-path "/customer"
		
		GET "/{customerId}" 
			getCustomerDetails (customerId : long)
			returns {
				200 content-type "application/json" {
					Address majorVersion 1
				}
			}
			throws {
				404 content-type "application/json" {
					NoSuchCustomerException maxVersion 1.1
				}
			} 
		{
		}
	}	
		
	/*
	 * An activity service that stores/manages customers
	 */
	public service CustomerManagerBAS {
		metadata {
			version 1.0
			lifecycle-state development
		}
		
		/*
		 * Create a new customer
		 */
		createCustomer (customer : Customer majorVersion 1) 
			returns optional Customer majorVersion 1 throws NoSuchCustomerException majorVersion 1
		{
		}
	}
	
		
}
