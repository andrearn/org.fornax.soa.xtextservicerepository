/*******************************************************************************
 * Copyright (c) 2012 developers of XtextServiceRepository and others.
 * All rights reserved. This style sheet and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * initial contribution:	Andr√© Arnold
 *******************************************************************************/
import org.eclipse.xtext.graphview.shape.*
import org.eclipse.xtext.graphview.layout.*  
import org.eclipse.xtext.graphview.behavior.layout.*  
import org.eclipse.draw2d.*
import org.eclipse.swt.SWT
import ServiceDiagram.*

stylesheet ServiceDiagram for ServiceDiagram

style ServiceDiagram {
	this.autoLayoutManager = new KielerAutoLayout() 
}

style ServiceNode as RoundedRectangleShape { 
	this.backgroundColor = color(#d8ffd8)
}


style ServiceNode { 
	this.font = font("Helvetica", 10, SWT::CENTER + SWT::BOLD + SWT::NONE
	)
}
style ServiceNode.Version { 
	this.font = font("Helvetica", 10, SWT::CENTER 
	)
}

style ServiceNode.OperationNode as RoundedRectangleShape {
	this.outline = false
	this.backgroundColor = color(#ffffff)
	this.font = font("Helvetica", 10, SWT::LEAD + SWT::LEFT+ 
		(SWT::NONE)
	)
}

style ServiceNode.RequiredServiceEdge {
	this.lineStyle = SWT::LINE_DASH
	this.foregroundColor = color(#cccccc)
}



style HiddenExceptionNode as RoundedRectangleShape { 
	this.backgroundColor = color(#f8e8d8)
}
style HiddenExceptionNode { 
	this.font = font("Helvetica", 10, SWT::CENTER 
	)
}
style HiddenExceptionNode.ExceptionLabel { 
	this.font = font("Helvetica", 10, SWT::CENTER + SWT::BOLD 
	)
}
style HiddenExceptionNode.Name { 
	this.font = font("Helvetica", 10, SWT::CENTER + SWT::BOLD 
	)
}
style HiddenExceptionNode.PropertiesNode as RoundedRectangleShape {
	this.outline = false
	this.backgroundColor = color(#ffffff)
	this.font = font("Helvetica", 10, SWT::LEAD + SWT::LEFT+ 
		(SWT::NONE)
	)
}



style BusinessObjectNode { 
	this.backgroundColor = color(#dfeff8)
	this.font = font("Helvetica", 10, SWT::CENTER + SWT::BOLD + 
		(if (element.abstract) SWT::ITALIC else SWT::NONE)
	)
}
style BusinessObjectNode.Version { 
	this.font = font("Helvetica", 10, SWT::CENTER 
	)
}

style BusinessObjectNode.PropertiesNode as RoundedRectangleShape {
	this.outline = false
	this.backgroundColor = color(#ffffff)
	this.font = font("Helvetica", 10, SWT::LEAD + SWT::LEFT+ 
		(SWT::NONE)
	)
}

style BusinessObjectNode.HiddenEnumReferenceEdge {
	this.lineStyle = SWT::LINE_DASH
	this.foregroundColor = color(#cccccc)
}

style BusinessObjectNode.InhertanceEdge as ConnectionShape  {
	var arrow = new PolygonDecoration()
	arrow.setScale(8,8)
	arrow.backgroundColor = color(#ffffff)
	arrow.lineWidth = 2
	this.targetDecoration = arrow 
}

style QueryObjectNode { 
	this.backgroundColor = color(#eeeeee)
	this.font = font("Helvetica", 10, SWT::CENTER + SWT::BOLD
	)
}
style QueryObjectNode.Version { 
	this.font = font("Helvetica", 10, SWT::CENTER 
	)
}

style QueryObjectNode.PropertiesNode as RoundedRectangleShape {
	this.outline = false
	this.backgroundColor = color(#ffffff)
	this.font = font("Helvetica", 10, SWT::LEAD + SWT::LEFT+ 
		(SWT::NONE)
	)
}

style EnumNode as RoundedRectangleShape { 
	this.backgroundColor = color(#fcefc8)
}
style EnumNode {
	this.opaque = true
	this.font = font("Helvetica", 10, SWT::CENTER 
	)
}
style EnumNode.EnumLabel { 
	this.font = font("Helvetica", 10, SWT::CENTER + SWT::BOLD 
	)
}
style EnumNode.Name { 
	this.font = font("Helvetica", 10, SWT::CENTER + SWT::BOLD 
	)
}
style EnumNode.EnumLiteralNode as RoundedRectangleShape {
	this.outline = false
	this.backgroundColor = color(#ffffff)
	this.font = font("Helvetica", 10, SWT::LEAD + SWT::LEFT+ 
		(SWT::NONE)
	)
}
