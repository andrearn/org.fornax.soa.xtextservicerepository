import SampleArchitectureProfile.ExSOALifecycle.*
import SampleArchitectureProfile.*

import org.example.common.*

org-namespace org.example shortname "ex" {
	
	domain-namespace sales shortname "sal" {
		
		
		/*
		 * Let's define a customer
		 */
		businessObject Customer {
			metadata {
				version 1.0
				lifecycle-state development
			}
			/* The ID of the customer, which may be generated by some backend */
			provided-key customerId : string
			person : Person majorVersion 1
			address : Address majorVersion 1
		}
		

		/*
		 * A business entity service to find customers. As it is public, it can be used by 
		 * any application or other service consumer 
		 */
		public service CustomerLookupBES {
			metadata {
				version 1.0
				lifecycle-state development
				service-category entity
				statefulness idempotent
			}
			
			/*
			 * A synchronous operation, that looks for customers by their name and city. The firstname
			 * may not be known.
			 */
			sync findByNameAndCity (optional firstname : string, lastname : string, city : string) 
				returns optional customers : Customer [] majorVersion 1
			{
				
			}
			
			/*
			 * Get all detail information of the customer
			 */
			sync getCustomerDetails (customerId : string) 
				returns customer : Customer majorVersion 1
				throws NoSuchCustomerException majorVersion 1
			{
				
			}
		}
		
		
		/*
		 * An activity service that stores/manages customers
		 */
		public service CustomerManagerBAS {
			metadata {
				version 1.0
				lifecycle-state development
				service-category activity
				statefulness stateful
			}
			
			/*
			 * Create a new customer
			 */
			sync createCustomer (customer : Customer majorVersion 1) {
				
			}
		}
		

		/*
		 * An exception, if the customer does not exist
		 */
		exception NoSuchCustomerException {
			metadata {
				version 1.0
				lifecycle-state development
			}
		}
		
		
	}
}